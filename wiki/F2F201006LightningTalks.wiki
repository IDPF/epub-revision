#summary Slides/Abstracts of the June 2010 F2F lightning talks

<wiki:toc max_depth="3" />


----


= Accessibility =
==Accessibility and EPUB==
George Kerscher and Kenny  Johar
===1. Who Wants Access to eBooks===
 * Blind and low vision (.3.3 of 1%)
 * Dyslexic (guessing 2%)
 * Learning Disabled (guessing 6%)
  * not all LD require accessibility techniques
 * Physically disabled, such as quadriplegics 
 * Cognitively disabled

=== 2. Legal Considerations ===
 * United Nations Convention on the Rights of Persons with Disabilities
 * Laws in countries, such as 508 and 504 in the USA
 * Department of Justice (DOJ)  and settlements
 * Voluntary refusals to not use inaccessible technologies

=== 3.  The Handshake between semantically Rich, Structured  content and reading systems ===
 * Content must be accessible AND  Reading System UI must be accessible
 * Websites for purchasing must be accessible (W3C/WAI Guidelines)
 * Semantically rich  structured content is essential
 * Intelligent reading Systems use the semantics 

=== 4. Techniques ===
 * Structure the content using semantics
 * Identify content based on what it is, e.g. a paragraph is not a heading!
 * Order the content for correct reading order, i.e. the way it appears in a DOM
 * Images, flow charts, etc. require short and long descriptions
 * Video must support captioning and descriptive audio channel
 * Interactivity must be accessible, which is a big question
----
== Speech Synthesizer support ==
Markus Gylling

 * An increasing number of reading systems ship with built-in TTS
 * For the print disabled in particular, this is a crucial feature
 * But good (read: low rate of mispronunciation, near-correct prosody (stress, intonation) is a general reading system usability concern

===Problems ===
The use of TTS within the DAISY realm over the past decade has identified the following core problems:
 * While TTS quality has improved, the quality varies dramatically between languages (the bigger the language, the larger the market for TTS vendors)
 * For academic and specific-domain content, most TTS's fail miserably (too many terms not covered by hardwired lexicon). For professionals and students, this means that consuming content using TTS is painful at best and impossible at worst.

=== Requirements ===
 * A way to link to publication and/or document-wide pronunciation lexica
 * A way to specify atomic pronunciation and prosody rules inline (lexicon-provided generalizations are not sufficient)

=== Solutions ===
Existing languages that we can reuse:
==== SSML ====
 * [http://www.w3.org/TR/pronunciation-lexicon/ PLS] defines a lexicon document type for pronunciation instructions
 * [http://www.w3.org/TR/speech-synthesis11/ SSML 1.1] defines a set of elements that can be adapted for inline usage. (see also Z3986-AI which defines an [http://www.daisy.org/z3986/2011/schema/mod/ssml-phoneme-attrib.rng attribute-axis-only adaption] for SSML-based pronunciation instructions).

... note: SSML is partially or fully supported by TTS engines such as [http://cepstral.com/cgi-bin/support?page=ssml cepstral], [http://vhost.oddcast.com/vhost_minisite/support/ssml/ssml.php?engine=1 AT&amp;T], [http://vhost.oddcast.com/vhost_minisite/support/ssml/ssml.php?engine=2 Loquendo], [http://www.neospeech.com/ neospeech], and more.

==== CSS3 ====
 * http://www.w3.org/TR/css3-speech/


----
= Metadata =


== Metadata in EPUB ==
Bill Kasdorf, Apex CoVantage

 * It’s not whether metadata belongs, but which metadata belongs
 * What is essential?
 * What is stable (ideally, permanent)?
 * What vocabularies are widely used?
 
=== Standards are only part of the story ===
 * Most standards are created for specific purposes
 * Often have aspects useful to ePub
 * Usually have way more than we’d want to include
 * Usage is incomplete and inconsistent
 
=== Examples ===
 * MARC records—libraries
 * Dublin Core—universal, flexible, incl. non-text content
 * PRISM—publication (esp. magazine) oriented
 * XMP, IPTC, Exif, PSIR, etc.—image metadata formats
 * ONIX—bookselling
 
=== My focus today: ONIX ===
 * A communication or messaging format
 * Focused on selling books (print, eBooks, audio, etc.)
 * Very rich model—publishers use only a fraction of it
 * Mainly a marketing function
 * Constantly updated by publishers—periodic feeds
 
=== ONIX 3.0 (4/2009): Modular, enhanced for e-books ===
 * Message header
 * Record & product identity (13 identifier types)
 * Descriptive detail
  * `<ProductFormDetail>`EPUB`</ProductFormDetail>`
  * `<EpubTechnicalProtection>` (none; DRM; digital watermark; Adobe DRM)
  * `<EpubUsageConstraint>` types & limits (e.g., preview, print, copy/paste, share, text-to-speech)
  * Collection/part info
  * Title types and detail
  * Authorship/contributor info
  * Language
  * Extents, illustration info
  * Subject info (keywords, BISAC, BIC, LC, Dewey, MeSH, etc. (many international schemes))
  * Audience info
 * Collateral detail (descriptions, cited content, links, prizes)
 * Content detail (incl. page numbering, etc.)
 * Publishing detail (incl. © info, territorial rights)
 * Related material
 * Product supply info (markets, distributors, prices, etc.)
 
=== Organisations we should collaborate with on this ===
 * DAISY
 * BISG
 * BIC
 * Editeur
 * NISO


----



= Semantics =
== Dictionaries ==
Jeff Alexander, Intangible Press

=== Problems ===
 * EPUB is currently designed for books that are read from beginning to end, rather than for books that are used for very fast information lookup:
  * Dictionaries
  * Encyclopedias
  * Medical books such as drug information or diagnostic guides (ie, for looking up a drug by generic name "acetaminophen" or brand name "Tylenol", or a disease name in an alphabetical listing)
  * Possibly other types of books such as cookbooks, travel guides, etc.
 * Standard "find"-type search features are not sufficient for dictionary lookup
 * Two main use cases for dictionaries: 1) lookup while reading another book, 2) free-form lookup 
 * Use case for glossary: lookup that is tied to a particular book
 * Dictionaries are complicated
 * Dictionaries contain a much wider range of special characters than other books
 * Dictionary data sets range from large to enormous
=== Requirements ===
 * A way to associate one or more search terms with a particular content region (a "dictionary entry")
 * A way to associate several types of searchable words with a dictionary entry:
  * Alternate spellings (eg, colour, color)
  * Derived forms (eg, "accessorize" at the end of an "accessory" entry)
  * Inflected forms which need to be searched but not displayed (eg, "runs, running, ran" for English "to run", or dozens of forms for verbs in French, Spanish, etc.)
  * Single word represented in multiple writing systems (eg, a Japanese dictionary gives both katakana and kanji forms)
 * A way for reading system to identify an ebook as a dictionary (eg, from metadata)
 * Accommodate both bilingual and monolingual dictionaries

=== Solution Guidelines ===
 * Performance!  Must enable fast lookup, and it should take approximately the same time to look up "aardvark" and "zoo"
 * Flexibility to handle a variety of lookup-oriented content
 * Adaptable to a range of languages and to non-Latin writing systems

----
== Book semantics in XHTML and the future of DTBook ==
Markus Gylling, DAISY

 * EPUB 2.0: DAISY XML (DTBook) as a text content format, alternative to XHTML 1.1
 * Ongoing revision to the DAISY standard (ANSI/NISO Z39.86-2011): distinct format-level separation between authoring and distribution
  * for authoring purposes, using a dedicated XML grammar (public draft at http://www.daisy.org/z3986/2011/)
  * for distribution purposes, intending to use a derivative of XHTML

=== Migration rationale ===
The cost-benefit ratio of using a non-XHTML-family grammar for distribution:
 * challenging to make use of web browsers as rendering components (increases cost and negatively impacts user experience)
 * AT created for the web not tuned to adapting behavior to elements in foreign namespaces
 * Semantics of XHTML are pretty close to DTBook anyway; in the minimal case, only a few extensions needed

=== Migration success criteria ===
Accessibility- and content integrity-wise, the following are success criteria for moving from DTBook to XHTML:
 * (accessibility of rich media and interactivity left aside in this talk) 
 * ability to express content model restrictions (maintaining strict(er) requirements on document structure)
 * ability to extend the semantics (see below)

... think of the idea as a "strict profile" of EPUB XHTML with a few extensions, suitable for textbook domain content.

=== Building the list of extension needs ===
Remember: rich and predictable semantics is a fundamental requirement for building an intelligent reading system (the way DAISY defines "intelligent")

 * noting that (X)HTML5 is a better starting point than XHTML1.x given its (likely) inclusion of elements such as section, aside, hgroup, figure, math, ruby 
 * general textbook domain elements identified as missing include:
  * notes and note references
  * annotations (original marginalia) and annotation references
  * equivalent of docbook:bridgehead (non-structurally-significant heading)
  * glossaries/dictionaries (in the backmatter sense, cf. [#Dictionaries])
  * image groups (and rich (read:marked up) textual descriptions of images)
  * pagebreaks (authoring-time concern mainly)
  
 ... but of course, the list can be extended depending on whether drama, poetry and other types of content are included. 

=== Solution options ===
Note that CDI (namespace-based extension) isn't the only alternative; attribute-axis semantic inflections can be used as well in some cases.

=== Consequences for EPUB ===
A win-win situation: instead of having to support two distinctly separate grammars, we move towards a situation where namespaces and (fundamental) markup models are shared. This reduces cost of implementation for reading systems/authoring tools/AT.

----


= Navigation =
== Enhancements in the next generation NCX ==
Markus Gylling and George Kerscher, DAISY

As became clear in the 2.01/maintenance WG,
 * NCX was insufficiently documented in the specification (direct evidence that the intent of navMap and the availability of navLists were not made clear enough)
 * The direct lift-over of the DTD from the DAISY spec contributed to the confusion (multimodality, head metadata, @playorder that did not apply to the EPUB usage scenario)

ANSI/NISO Z39.86-2011 introduces the following major changes to the NCX grammar:
 * modularized, allowing creation of [http://code.google.com/p/zednext/source/browse/sandbox/ZedDist/src/schema/ tailor-made NCX grammars] for particular usage domains (such as EPUB)
 * allow expressions of machine-readable metadata for groups of, and individual, navigation items
 * ability to use (XHTML) markup in labels (i18n requirement)
 * increased terseness (smaller document size)

Need to collect further requirements from EPUB:
 * Examples from EPUB 2.0:
  * Multiple pagelists for the same publication (editions, and or paperback/hardback) (relates to machine-readable metadata)
  * Multilinguality/multimodality (are supported by the NCX in general - relevant in EPUB?)	
 * Examples from EPUB 2.1/3.0:
  * Do we want to use the NCX to navigate rich media (say, a long video clip with distinct scenes/events) in addition to global document navigation?

= Layout and Styling =
== From PDF to EPUB ==
Thomas Hadfield, CourseSmart

PowerPoint slides: [http://files.me.com/tjhadfield/wvyqka From_PDF_to_ePub_Final.ppt]

----

= Interactivity and Rich Media =
== EPUB 2.1 Rich Media Thoughts ==
Garth Conboy, eBook Technologies, Inc.

PowerPoint slides: [http://www.ebooktechnologies.com/downloads/EPUB_2.1_Rich_Content.ppt EPUB_2.1_Rich_Content.ppt]
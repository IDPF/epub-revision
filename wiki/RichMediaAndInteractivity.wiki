#summary Rich Media, Ads, and Interactivity Sub-group Page

= Rich Media, Ads, and Interactivity Sub-group Page =

<wiki:toc/>

== Mission ==

The subgroup is addressing problem 1 in the charter: http://www.idpf.org/idpf_groups/IDPF-EPUB-WG-Charter-4-27-2010.html 

== Deadlines ==

  * Collect requirements: July 23rd, 2010

== Requirements ==

=== Rich Media ===

==== RM-1. Video and Audio embedding ====

Ability to embed video and audio in the document content declaratively (i.e. without a bunch of javascript around it). Declarative part is important because particular player interface might be fairly different on different devices, e.g. video may have to be played in full-screen or on a separate color screen in dual-screen devices.

==== RM-2. Video and Audio formats ====

We need to come up with some language on what formats should be targeted for interoperability.

==== RM-3. Package A/V with the document ====

Ability to include audio & video within the ePub.  Some content could be considered 'critical' for the ePub experience, and should be included in the ePub.

==== RM-4. Stream A/V from a server ====

Ability to stream audio & video from an external server.  Some content could be considered optional, and can be streamed from an online server. In some cases, it may also be impractical to include longer clips with epub itself.

==== RM-5. Cache online media content ====

For content that is available online, there is a need to have metadata to define if content can be cached on the device (providing the device has the storage capability).  A use case I can imagine is that the device, when detecting that WIFI is present, may offer the user to download all cacheable content, so they can consume it when the wifi is not present.

==== RM-6. Searchable meta data for media content ====

Ability to include searchable meta data for media content, to aid search.

==== RM-7. Accessible version ====

Ability to provide accessible version (i.e. transcripts of media for deaf users).  Related to the search requirement above.

==== RM-8. Media rights ====

Consideration / recommendations around how to post / share media content from ePub.  This may be the wrong subgroup for this discussion, but I do think it is something to be aware of.

==== RM-9. Standalone audio/video ====

Ability to include discrete audio clips: play once in dedicated player, e.g. when play button is clicked

==== RM-11. Background audio ====

Ability to include looping audio clips (i.e background music for chapter/ book)

==== RM-12. Playlists ====

Ability to include playlists (background music album for book).  

==== RM-13. Parallel audio clips ====

Ability to include multiple parallel audio clips, where only one is selected for playback at at time. For instance, there may be audio in both English & French.  This is particularly useful for people learning languages.

==== RM-14. Triggers ====

Ability to define when audio/video should start playing, e.g. (1) on loading book/chapter/page (2) upon the asset becoming 'visible' on the screen.

==== RM-15. Abridged audio ====

For synchronised audio, ability to define text that is NOT in the audio.  This is useful for abridged audio, whereby paragraphs or pages are not included in audio. *Editor's note: I am unclear on this, needs to be clarified*

==== RM-16. Fallbacks based on capabilities ====

Ability to define media fallback for consumption.  For instance, if the device has a wifi connection and capabilities, stream HD video from server.  Otherwise, stream medium-res video from server.  Otherwise, load low-res video from ePub.  Otherwise, display image with caption.

==== RM-17.  Audio timescale ====

Reading systems should have the ability to speed up or slow down the audio playback without distorting the pitch.  50% (slow) to 200% (fast) is the recommended range.

=== Synchronized audio ===

This list of requirements came from what used to be a single requirement ("RM-10. Ability to include synchronized audio clips".).

==== RM-18. Define synchronization points ====

Ability to align audio with its text document equivalent.  This is done via synchronization points, each being pre-defined as a clip of audio together with a chunk of text or an image. The audio is a spoken version of the text or image description.

==== RM-19. Synchronized playback ==== 

Ability for synchronized playback to follow the natural reading order and also be repositioned when the user navigates (via TOC, bookmarks, or other methods).


==== RM-20.  Text scroll/highlight ====
 
Ability for the the text to scroll and follow the audio playback, with an option to highlight the text corresponding to the currently-playing audio.


==== RM-21. Transparent overlay ====

Ability for the the synchronized audio feature to exist as a transparent overlay so that it does not impact a text-only reading system.

==== RM-22. Using audio selectively  ====

Ability to apply synchronized audio to select portions (islands) of the document or to the entire thing.

==== RM-24. Runtime audio options ====

Ability to reflect user preference in the audio playback (e.g. turn off page number announcements, follow footnotes automatically).

==== RM-25.  Multiple granularities ====

Ability for a single publication to contain different synchronization granularities (e.g. word, sentence, and paragraph-level).



=== Interactivity ===

==== I-1. Ability to add *interactive* media to ePub. ====

Interactive media is understood here as something where presentation (visual, but not necessarily visual) changes based on user input and/or network communication.

Example use cases:
 * A coloring book page allowing the user to "pick up" a "crayon" of some color and draw in a some area
  * Changes should persist (i.e., paging away and returning should not necessarily reset the state of any interactive content)
 * Control an astronomy simulation of the solar system
  * Change time scale, change gravitation constant, change mass of planets, ...
  * Physics simulations are popular interactive media elements
 * Mathematica-style graphing based on user input
 * Quizzes for textbooks
  * Submit results to instructors
 * Cooking/recipe books
  * Scale recipes to different numbers of people
  * Built-in timer/alerts to allow use of recipe itself as real-time cooking guide

==== I-2. Access to persistent storage ====

Some limited amount of client-side storage is needed in many applications (similar to cookies in HTML4 browsers or HTML5 persistent storage)

==== I-3. Ability to share data to communicate between interactive parts of a single publication or across multiple publications from the same origin ====

Examples:
 * a set of quizzes in multiple chapters that displays cumulative score
 * pushing button one one side of the page causes changes on thge other side of the page
 * Selecting a mode or setting at the start of the publication persists through all pages -- e.g. sound on or off, difficulty level, etc.  (Difficulty, or amount of scaffolding, could be very important in allowing textbooks to serve both on-level and struggling students, for example).


==== I-4. Retain valuable existing features of EPUB ==== 

Existing format capabilities which are critical to maintain at least on the chapter content level:
 * ability to persistently bookmark every spot in the publication
 * ability to annotate any spot in the publication
 * ability to transform existing publication in some way, e.g.
  * touch-up in an editor (e.g. fix typos)
  * run through stylesheet optimizer
  * run through font embedder/subsetter
  * ability to display in the browser in some non-trivial way (I'll share a demo on this)
 * searchability
 * ability to build an index in an EPUB file

==== I-5. Separation of data and content ====

It should be possible to clearly separate data which is being used to create an interactive presentation and the code which is used to implement it. Code may evolve independently of data (platforms change, security updates, code improvements) and some of the data formats may be promoted to the first class citizens in future EPUB versions (so the need for supporting code may be eliminated). Raw data is also more accessible in some cases. For instance, if an animated chess game is shown on a page, it would be good if it is possible to package application which draws and moves chess pieces on the board seprately from the transcript of the game (which the app would load and use to drive the presentation). If we decide in future that chess transcripts is something that EPUB should handle natively (hypothetically ;-), we will have a good foundation for content creation and backward compatibility.

==== I-6. Programmatic content changes ====

As a consequence of user interaction with interactive content, or for other reasons, the content of a publication may need to change dynamically.

Examples:

 * personalization of information (replacing a placeholder name with a user's name, or a generic character's name with a chosen one)

 * if an animated chess game widget is embedded on a page, it would be good if it is possible to package application which draws and moves chess pieces on the board separately from the transcript of the game which can be rendered by the Reading System appropriately for the device. But in this case (unlike the example in I-5 above, which presumably refers to a previously played game) the content for the transcript would need to be generated dynamically.

 * Rendering content in alternate languages
 * Rendering content in alternate scripts (where the language supports multiple scripts, e.g. Cyrillic or Latin)
 * Changing semantically-marked up units, from metric to imperial
 * Changing text content based on current geolocation, as in a travel guide

It is recognized that this requirement may be in conflict with I-4, but other publication delivery systems have balanced these competing requirements successfully. For example, PDF is viewed as a reliably annotatable format, yet scripts traveling with PDF documents can modify the document content in such a way as to "break" annotations, and Adobe's XFA forms technology has historically disabled the ability to create annotations on pages displaying form elements. And, since existing publications may be programmatically transformed other than via scripting within a Reading System (as per examples in I-4 of touch-up, stylesheet optimizer, etc.), whatever solution we come up with for bookmarking and annotations must have a model for what to do when there are transformations to chapter content.

==== I-7. Dynamic Content Emphasis ====

Certain content of a publication may need to be emphasized based on dynamic conditions. For example, highlighted and perhaps scrolled into view.

Use case examples:

 * Synchronizing text with spoken audio [NOTE: overlaps, perhaps subsumes, RM-20]
 * Emphasizing the target of a bookmark/annotation.
 * Emphasizing search results
 * If an animated chess game widget is embedded on a page along with a transcript, it might want to highlight the move in the transcript corresponding to the current board position.

Note that while text is the primary target for such emphasis, under some circumstance it may be appropriate to emphasize non-textual content (e.g. an image, or graphics within SVG).

[NOTE: could be viewed as a subset of I-6 above (Programmatic content changes) but since a declarative solution may be possible, separating this out for now]

==== I-8. Interactivity Requirement for Teaching and Learning ====
 * Support following type of question 
  * Multiple choice 
  * Fill in the blanks, tables, or space within picture/paragraph
  * matching objects through drawing lines, drag and drop picture/text, etc.)
  * error finding/correction in language learning - insert, replace, delete any word within the sentense/paragraph
  * stroke sequence for writing Chinese character.  The correctness of stroke sequence is important in writing Chinese character.  When the student write the chinese character, the stroke sequence is recorded.  Teacher is able to "replay" the students' stroke sequence to check the sequence is correct or not.
  * adding puntuation in sentence
  * color filling, kids can fill colour according to the text/audio
 * Support following kinds of traditional examination/test
  * Dictation or listening test, user can listen to an audio track and then write down the words or answer question.
  * oral examination.  After reading the oral question, student can record his/her speech and then submit.
 * Support storing the student answer locally or remotely in server
 * Allow student to answer the questions once or repeatly (for revision)
 * Possible to provide instant answer feedback to student

==== I-9. Ability to save save states and initialize on opening publication  ====
This is perhaps an outcome of I-2, I-6, and I-7, but it's worth emphasizing with some examples:
 * a Crossword Puzzle book, where you'd want to save the work you've done so far when you close the book
 * a Coloring Book, where you'd like to save your artwork
 * saving your personal recipe notes in a cookbook
 * a Textbook maintaining the answers to quizzes you've taken throughout -- particularly the WRONG answers, so you can review areas of difficulty.
 * More ambitious, perhaps -- a math text that tracked your ability level and regenerated example problems based on "known" strengths and weaknesses of the individual student.

 ==== I-10. Ability to communicate with and utilize potential reading device features ====
As devices have more features, and as publications are consumed on devices like iPhones and Android Phones, it is important to enable some interface between a publication and potentially available hardware.  Examples:
 * Microphone
 * Camera
 * Touchscreen
 * Accelerometer
 * GPS
Possible uses:
 * Audio/video annotation/personalization of publication
 * Location aware guidebooks


=== Ads ===

==== AD-1. Handle full-screen ads ====

Ability to specify collection of full-screen ads that could be inserted in the page flow as reader flips through the content. This is hard to achieve by simply manipulating the content because page breaking position depends on the display and environment characteristics

== Participants ==

|| *Name* ||  *Organization* || *Time Zone* || *Preferred con call time* ||
|| Peter Sorotokin (coordinator) ||  Adobe ||  UTC/GMT -7 || ? || 
|| Garth Conboy ||  eBook Technologies, Inc.  || UTC/GMT +/-? || ? || 
|| Ric Wright ||  Adobe  || UTC/GMT -7 || ? || 
|| King Wai Chow ||  ASTRI (Hong Kong Applied Science and Technology Research Institute)  || UTC/GMT +8 || 02:00-10:00, 13:00-16:00, 22:00-23:00UTC  || 
|| Brady Duga ||  eBook Technologies, Inc.  || UTC/GMT +/-? || ? || 
|| Steve Kotrch ||  Simon & Schuster  || UTC/GMT +/-? || ? || 
|| Dianne Kennedy ||  IDEAlliance + IPA  || UTC/GMT +/-? || ? || 
|| Liza Daly ||  Threepress Consulting Inc.  || UTC/GMT -4 || ? || 
|| Takeshi Kanai ||  Sony Electronics, Inc.  || UTC/GMT +/-? || ? || 
|| Daniel Weck ||  DAISY Consortium  || UTC/GMT (London) || ? || 
|| Eric Freese || Aptara || UTC/GMT -5 || ? ||
|| Karen Broome || Sony Electronics || UTC/GMT +/-? || ? ||
|| Alexis Wiles || !OverDrive|| UTC/GMT -4 || Tues or Thurs between 9AM-6PM UTC/GMT -4 ||
|| Michael Artin || Barnes & Noble || UTC/GMT -4 (New York) || ? ||
|| Roger Webster || Barnes & Noble || UTC/GMT -7 || ? ||
|| Richard Heiberger || !HarperCollins Publishers || UTC/GMT +/-? || ? ||
|| Lucy Albanese (lucy.albanese@harpercollins.com) || !HarperCollins Publishers || UTC/GMT +/-? || ? ||
|| Rhys Cazenove || Enhanced Editions || UTC/GMT || ? || 
|| Marisa !DeMeglio || DAISY Consortium || UTC/GMT -8 || 17:00-00:00 UTC M-F ||
|| Kenny Johar || Vision Australia || UTC/GMT +/-? || ? ||
|| Liisa !McCloy-Kelley || Random House, Inc || UTC/GMT +/-? || ? ||
|| Si-Wei Wang (siweiwang.sword@gmail.com) ||  Institute of Information Industry  || UTC/GMT +8 || ? || 
|| Matt Haas || Pearson Education North America || UTC/GMT -4 || ? ||
|| Dave Cramer || Hachette Book Group || UTC/GMT -4 || ? ||
|| full name || organization || time zone || preferred time ||
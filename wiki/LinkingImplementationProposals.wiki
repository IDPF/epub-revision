<wiki:toc max_depth="5" />

This page outlines the various proposals for EPUB Linking & Identification.

= URI Links Proposal =

== Introduction == 
Historically each EPUB document has been identified using a “unique-identifier” property which references a meta element containing the unique identifier by id. Although this identifier has in theory been unique, there has been no prescribed method for insuring its uniqueness across the universe of publishers. 

In addition, it has been unclear when to change a publication’s identifier. Some publishers change the identifier each time a new version is created, while others change the identifier only when a new “work” is created.

As EPUBs have increased in prominence and longevity, it has become important to introduce a permanent unambiguous way of referring to an EPUB both offline and online. This proposal seeks to describe an approach to solving these problems using URIs.

== URI Syntax ==
Each EPUB will be identified by a URI that is constructed from the following components:

==== scheme ====
The URI scheme such as “http” or “ftp”. The scheme may be sued as a protocol to access the EPUB in the event that the URI happens to be a URL but there is no mandate that this be the case.

==== authority ====
The authority under which the URI has been created. The authority must be DNS registered to insure that URIs are globally unique. Example authorities include: “epubs.idpf.org” or “randomhouse.com”. 

==== path ====
The publisher controlled path of the EPUB. Publishers may choose paths in any way that is convenient to them. For example if one wished to organize content by language, one might have paths like: “/epubs/english/history” and “/epubs/japanese/cooking”.

==== unique-identifier ====
The unique identifier string identified in the EPUB’s OPF file. The definition of the unique-identifier for EPUB3 will be augmented to specify the unique-identifier of a publication will only be changed when a new “work” is created.

==== version ====
The version number specified using the new EPUB3 “opf:content-version” property specified in the EPUB. Version numbers may be specified with a varying precision. For example, if an EPUB has a version of “1.2.511” it should be considered as matching URIs that specify a version number of “1.2” or “1” or which omit the “version” segment of the URI entirely. A reference that fails to specify a more granular version number should receive the highest version available in response.

==== file ====
The name of a file within the manifest of an EPUB. This URI segment is entirely optional and in general will be omitted. It will only be present when one wishes to refer to a specific file within an EPUB to provide a deep linking capability. 

==== id ====
The id portion of the URI will only be specified when a link refers to a specific xml element within an EPUB content file. In general the id field will be omitted. If an id is specified, a file must be specified.

== Canonical URI syntax ==
Following is the canonical form a URI that may be used reference an EPUB. The segments contained within “{}” brackets may be omitted.

{{{
    scheme:://authority/path/unique-identifier{/version}{{/file}#id}
}}}

== Example URIs ==
{{{
    http://epub.idpf.org/us/0741021137
    http://epub.idpf.org/us/0741021137/1.2.511
    epub://mydomain.com/alice_in_wonderland
}}}

== URI Processing ==
All user agents that handle EPUB links are required to handle them in such a way that version numbers degrade gracefully as described above under “version”. This would mean that if one were to process EPUB URI requests over the web, it would be necessary to return success from multiple locations depending on the specificity of the link provided.

== Handling EPUB2 Publications ==
EPUB2 publications do contain unique identifiers, but they do not contain version numbers. As a result, EPUB2 publications must only be referred to using a URI that omits the version segment. 

Because EPUB2 publications do not contain a scheme, authority or path, a default for these fields must be provided. Whenever there is no scheme authority or path specified, the default, for processing purposes will be assumed to be “http://idpf.org/epub”. 

== Open Issues ==
  # Should scheme, authority and path be stored in an EPUB’s OPF file to insure that a complete URI can be constructed from the OPF?
  # Should it be possible to specify a “file” component as part of the URI as described above? This could make it difficult to identify which part of the URL is the unique-identifier and which part is the version.  The file could also be specified as a CGI parameter.

= PURL-based EPUB Identifiers =

Short version:

  * Allow DOIs to be used as/in EPUB/3 Identifiers
  * EPUB unique-identifiers into an IDPF-hosted PURL server for HTTP URIs with a consistent prefix (for disambiguation)
  
{{{
  http://purl.idpf.org/{epub-unique-identifier}
  
  http://purl.idpf.org/0132366991?title=EPUB+Straight+to+the+Point&
                                  creator=Liz+Castro&
                                  version=1.4.0&
                                  file=OEBPS/ePub-STTP-4.xhtml&
                                  frag-id=toc-anchor-4&
                                  text=The+mimetype+file+is+a+simple+text+file
}}}

== Summary ==

A PURL-based EPUB Identifier (PEI) identifies an EPUB or EPUB 3 publication and may be created or used without network access. They are valid HTTP URIs that can be distinguished from other URIs by their consistent prefix. Additional optional metadata added to a PEI may allow an EPUB/3 publication to be identified more uniquely, a single file to be referenced inside the publication, or a single subset of a file to be referenced. Finally, some PEIs may be resolved to an available resource using HTTP GET and redirects against a Persistent Uniform Resource Locator (PURL) service hosted by the IDPF.

== Notational Conventions ==

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in `[RFC2119]`.

== Parts of a PEI ==

PEIs are made up of three components:

  # A consistent prefix for the IDPF-hosted PURL service, `http://purl.idpf.org/`
  # A URI-escaped version of the EPUB/3 publication's Publication Identifier
  # A number of optional parameters as key-value pairs that form a query section following a `?`

{{{
http://purl.idpf.org/{epub-publication-identifier}?{key1=value1&key2=value2...}
}}}

== Creating a PEI ==

Given an EPUB or EPUB3 publication, a PEI is constructed by escaping the Publication Identifier from the EPUB/3 metadata and appending it to the address for the IDPF-hosted PURL service, `http://purl.idpf.org/`. The Publication Identifier, defined in the section "Publication Identifiers" of `[EPUBPUB3]`, is the text content of the `dc:identifier` element referenced as the publication's `unique-identifier`. This text content MUST be stripped of leading and trailing whitespace before escaping following `FIXME` (this is often referred to as "percent encoding").

Additionally, PEIs SHOULD include a query component following a `?` character that contains at least two sets of key-value pairs from the EPUB/3 metadata:

  * `title`: the value of the first `dc:title` element 
  * `creator`: the value of `dc:creator` (mutiple pairs MUST be created if the metadata includes multiple `dc:creator`s)

All key and value parameters pairs and MUST be stripped of leading and trailing whitespace before escaping following `FIXME`.

All PEIs MUST be valid Uniform Resource Identifiers (URIs) as defined in `[RFC3986]`. 

== Identifying Part of a Publication ==

FIXME: More params:

  * file
  * fragment-id
  * text

== Identifying a Specific Version of a Publication ==

FIXME: More params:

  * version
  * md5sum?

== Using a PEI ==

PEIs can be deconstructed to be used by EPUB Reading Systems or other applications by extracting and unescaping the `unique-identifier` value. This value can then be matched against the Publication Identifier of available EPUB/3 publications. This is an Exact Match. 

If an Exact Match is not found, an EPUB Reading System or other applications MAY also choose to attempt a to locate similar publications based on available `title`, `creator`, and/or other parameter values from the query component, if available. This is an Approximate Match. A user SHOULD be notified if an Approximate Match is returned.

Some PEIs MAY have resources availabe via HTTP `[RFC2616]`. PURLs are discussed in more detail in `[PURL-Overview]`. 

== Registering a PEI ==

FIXME: Register an HTTP 302 redirect with the IDPF PURL server to something related to the publication using a user/pass.

== Maintaining a PEI ==

FIXME: Give someone who inherits rights to the publication the user/pass that you used to register the PEI with the IDPF PURL server.

== Goals ==

  * Identify both existing EPUB resources and to-be-created EPUB3 resources
  * Identify a single EPUB resource 
  * Identify a single subset of an EPUB resource 
  * Identify a single file subset of an EPUB resource 
  * Identify a single subset of an EPUB Content Document in an EPUB resource 

== Not in scope ==

The following features are not in scope for this specification:

  * Defining the representations of the EPUB resources that SHOULD be returned if an HTTP URI identifying an EPUB is able to be dereferenced over HTTP.
  * Defining the techniques required to link to an EPUB from anything other than another EPUB
  * Identifying a subset of an EPUB resource that is a range

== TODO ==

  * Research and integrate this PEI mechanism with an effective use of EPUB/3+DOI.
  * Clarify what should happen with localized or muliple dc:titles or dc:creators.
  * Establish reference to Media Query Fragments and other fragment specs?

== References ==

=== Normative References ===

  * `[EPUBPUB3]` Conboy, G., Gylling, M., McCoy, W., Weck, D., and D. Hughes, "EPUB Publications 3.0", FIXME 2011.
  * `[RFC2119]` Bradner, S., "Key words for use in RFCs to Indicate Requirement Levels", BCP 14, RFC 2119, March 1997.
  * `[RFC2616]` Fielding, R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L., Leach, P., and T. Berners-Lee, "Hypertext Transfer Protocol -- HTTP/1.1", RFC 2616, June 1999.
  * `[RFC3986]` Berners-Lee, T., Fielding, R., and L. Masinter, "Uniform Resource Identifier (URI): Generic Syntax", STD 66, RFC 3986, January 2005.

== Informative References ==

  * `[PURL-Overview]` Wood, D., "Overview of of PURLs", http://purl.org/docs/help.html#overview


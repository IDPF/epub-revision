#summary Text content sub-group page

<wiki:toc max_depth="5" />

== Participants ==

|| *Name* ||  *Organization* || *Role* || *UTC time* || *Preferred con call time* ||
|| Markus Gylling ||  DAISY || (coordinator) ||   ||  || 
|| James Pritchett  ||  [http://www.rfbd.org RFB&D] ||  || UTC -4  || 12:00-20:00 UTC || 
|| Eric Freese  ||  Aptara ||  || UTC -5  ||  || 
|| Ben Trafford  || Invited Expert  || Extensibility Nerd || UTC -7 || 17:00 to 01:00 UTC ||
|| Adam Witwer || O'Reilly Media || || UTC -4|| 20:00 UTC ||
|| Liza Daly || Threepress Consulting Inc. || || UTC -4 || ||
|| Chelsea Valentine || LibreDigital || ||  UTC -6 || 19:00-22:00 UTC ||
|| Hadrien Gardeur || Feedbooks || || UTC+1 || 07:00 UTC - 19:00 UTC ||
|| Beno√Æt Larroque || Feedbooks || || UTC+1 || 07:00 UTC - 19:00 UTC ||
|| John Prabhu || HOV Services || || || ||
|| Takeshi Kanai || Sony Electronics || || UTC -8 || 19:00 UTC - 01:00 UTC ||
|| Neil Soiffer || Design Science || Math Geek|| UTC -7 || 15:30 UTC  - 24:00 UTC ||
|| Dave Makower || Apple, Inc. || || UTC -7 || 16:00 UTC - 19:00 UTC ||
|| MURATA Makoto (FAMILY Given) || JEPA || || UTC +9 || ||
|| Karen Broome || Sony Electronics || ||UTC -7 || 19:00 UTC - 23:00 UTC||
|| Paul Norton || Invited Expert || || UTC -7 || 17:00 UTC - 23:00 UTC ||
|| Aline Pace || HarperCollins Publishers || ||UTC -5 || 1400-1700 UTC||
|| Peter Sorotokin ||  || ||  || ||
|| Jeff Alexander || Intangible Press || || UTC -4 || ||
|| Andreas Gosling || Penguin Group UK || || UTC +1 || 0800 UTC||

== Mission ==

This sub-group is tasked to update OPS for EPUB 2.1, including a new version of the preferred grammar and mechanisms for extensibility.

The subgroup is addressing problems 3, 7, 9, 10 and 12 in "Current Industry Problems" in the charter: [http://www.idpf.org/idpf_groups/IDPF-EPUB-WG-Charter-4-27-2010.html]

The list of relevant lightning talks in the f2f: 
 * [F2F201006Agenda#Semantics]
 * [F2F201006Agenda#Extensibility]


== Requirements ==
=== General ===

==== TEXT-01 The HTML browser as a rendering engine ====
*Requirement: The preferred grammar of EPUB must be designed so that an HTML browser rendering engine can be used as an EPUB rendering engine*

Rationale: the ability of EPUB to be implemented using web technologies in general (and the browser as a rendering engine in particular) is considered one of the formats main strong points.

_TBD: needs qualification - exactly what does "be used as rendering engine" mean? _
 * _ability to use browser DOM and associated APIs_ 
 * _ability to use CSS 2.1 as the styling basis_
 * _inherit behaviors (beyond styling)_
 * _... more?_

_PeterS: I think that you should be able to render EPUB chapter content reasonably well in an off-the shelf browser, but you may have to write a whole bunch of JavaScript for your webapp to support it. Note that chapter content is not directly renderable in the browser in EPUB 2.0 already because of ops:switch._

==== TEXT-CROSSREFS support inter-publication linking ====
Refer to [Navigation#NAV_06__Reading_System_must_provide__Bibliographic_reference_to NAV_06] and [Navigation#NAV_07Reading_System_must_Navigate_to_location_based_on_Bibliogr NAV_07]

==== SPEECH-LEXICON support association of pronunication lexicons ====
* Requirement: support the association of pronunciation lexica with an EPUB publication *

Rationale: refer to [F2F201006LightningTalks#Speech_Synthesizer_support]

==== SPEECH-INLINE support inline-level pronunciation expressions ====
* Requirement: support inline-level pronunciation and prosody expressions *

Rationale: refer to [F2F201006LightningTalks#Speech_Synthesizer_support]


=== Migration to HTML5 ===
==== Preamble ====
The move from XHTMLMOD 1.1 (as used in EPUB 2.01) towards HTML5 is outlined in the WG charter, and was discussed with a tentatively favorable outcome during the kickoff F2F. 

WG members may put forward counterproposals to the move towards HTML5. Until such counterproposals appear, the requirements listed in this section are written assuming that the HTML5 adoption is done.

As a reminder, the main points of rationale for the migration to HTML5 are: 
 * W3C is closing down the XHTMLMOD 1.1 branch of the XHTML language family, which current EPUB is using 
 * HTML5 comes with new native elements and features that are directly useful in an ebook context
 * Browser engines are being optimized for the HTML5 language (see TEXT-01)

_PeterS: I am uneasy about us jumping the gun and nailing down semantics of any element in XHTML namespace until W3C does it: we simply do not own that namespace, W3C does. We can import elements that we need in OPS namespace instead. I guess that can be viewed as a counterproposal._

_Hadrien: Agree with Peter that these are shaky grounds and using a subset or importing elements in our namespace seems less dangerous. We'll need to define a good policy regarding forward compatibility with HTML5._

_`<Neil>`
What about an approach somewhat similar to what DAISY is taking with EPUB.  DAISY basically is moving towards using EPUB as a rendering/delivery platform and is not tieing its set of elements to EPUB's element.  The analogy with EPUB is that EPUB defines a set of elements that are designed so that they can be rendered with HTML5+CSS, but are not (necessarily) directly HTML5+CSS._

_In my mind, there are three reasons for moving towards XHTML5:
  #.  Rendering engines for XHTML5+CCS(3?) will be widely available
  #.  The elements added to HTML5/XHTML5 are those that the web community has found to be useful in a wide variety of circumstances, and hence, are likely to be useful for "book" publishing.
  #.  People will make use of HTML5's features and this sets expectations for what any format should be able to do.  If EPUB is not able to make use of HTML5 features, people will look for workarounds or not use EPUB._

_As many people have noted, the elements provided by HTML5 are not sufficient for our needs, although through either CSS or XSL, HTML5 can still be utilized for some (all?) of them.  Because of this, I think it makes sense to untie ourselves a bit from HTML5 in terms of the elements that are allowed.  Instead of making HTML5 a requirement for the markup language, I think we should instead require that an element proposed be able to be rendered using HTML5+CSS._

_Although HTML5 is a moving target, there are many parts that are sufficiently solid that they will change in only minor ways that won't significantly affect the notion of whether HTML5 is capable of rendering the element.  CSS3 is less solid, but I think that it is highly unlikely that CSS2.1 will change in a way that affects the notion of whether a proposed element can or cannot be rendered using HTML5+CSS.  Saying that HTML5 is a renderering target, rather than a language target loosens the ties to a moving standard, but it (unfortunately) doesn't remove them._

_To make my proposal a bit more concrete, I think that any proposed element should have two requirements:
  #.  The element needs justification for why it should be part of EPUB
  #.  CSS or XSL should be provided that show how it maps to HTML5.
The later requirement also allows us to clearly define our dependencies on HTML5 and CSS.
`</Neil>`_


==== HTML5-01 Allow for subsetting ====
*Requirement: The EPUB adaption of HTML5 must allow the expression of proper subsets vis-a-vis the W3C/WHATWG version of HTML5.*

Rationale: 
 * A grammar a.k.a "profile" that prohibits tagsoup and enforces rigid structure has substantial accessibility benefits (cf. DTBook of EPUB 2.01)
 * HTML5 has a set of "obsolete but conforming" elements and attributes, added for web forwards compatibility reasons. As EPUB has none of that baggage, we have no reason to include these elements.
 * TBD dependency on the [RichMediaAndInteractivity] subgroup's outcomes re handling of the video element, scripts/sandboxing, et al.

_Comment: note that a strictened-up "profile" isn't necessarily exclusive; "loose" and "strict" versions could co-exist (but wouldn't have those names)._

==== HTML5-03 Retain compatibility with XML ===
*Requirement: Documents adhering to the EPUB adaption of HTML5 must be compliant XML documents.*

Rationale: EPUB as a whole remains an XML-based framework. Allowing the HTML serialization of HTML5 in EPUB would mean that all reading systems would have to ship with two parsers; homogenizing the serialization to XML at production time seems more economical.

_Hadrien: Fully agree._

MURATA: I like XML, but will content providers listen to us?  Won't they anyway create non-XML HTML documents anyway?

_Dan Hughes: Agree. If the spec - and downstream distributor/device/software - requires valid XML, content providers will produce it. Content providers do not consider HTML/XML. They are only looking to sell product, and will adopt the specs, formats, and tools as provided by the marketplace or standards bodies._

_Liza Daly_: It is totally the case that all ereader software consumes HTML, not just XHTML. 

_mgylling_: Liza, sure, as a schoolbook example of [http://en.wikipedia.org/wiki/Jon_Postel#Postel.27s_Law Postels law] right? Use case for maintaining XML: I want my entire production and supply chain to be implementable using vanilla XProc.







=== Extensibility ===

==== HTML5-05 Allow for inflection of domain-specific semantics ====
*Requirement: Adopt a mechanism to enable the inflection of domain-specific (books, magazines) semantics on the (X)HTML-based core grammar.*

Use case: A reading system with TTS capabilities implements the "skippability" behavior for notes and marginalia, e.g. allows the user to turn off the reading of note references, notes (and possibly other kinds of marginalia) during sequential TTS rendering. This behavior is only possible to implement if there are stable semantics available for noterefs, notes, author annotations, and so on. (The same principle holds also for the ability of a reading system to show/hide certain constructs visually.)


===== HTML5-05_1 Assure lexical predictability when addressing HTML5_05 =====
*Requirement: When designing the solution for HTML5-05, avoid a solution that allows ad hoc values/vocabularies*

Rationale: In order for reading systems to be able to effectively enrich their behavioral repertoire based on semantic inflections, the mechanism used must be lexically predictable and validatable.

==== TEXT-02 OCF Extensibility ====
*Requirement: ePub2.1/3.0 should keep OCF extensibility described in ePub2.0.*

Rationale:  Current OCF extensibility is used for Sony's periodical titles.
 Multiple root files:
  In OCF, it allows to set multiple root files. Sony's periodical titles specifiy OPS and Atom file as root file. The Atom file contains semantics information for each article/section page and it helps article/section navigation.

 Metadata:
  In OCF, metadata.xml itself is reserved. Since our periodical titles contain two types of root content, metadata for the package is described in the file.


==== TEXT-03 A root file for semantics ===
*Requirement: container.xml can specify a semantic information file as one of root files.*

Rationale: Sony's periodical titles specifiy OPS and Atom file as root file. The Atom file contains semantics information for each article/section page and it helps article/section navigation.

_Use case 1: Access across the media _
  Each article should be recognized as one of digital articles, regardless of ePub or Web.

_ mgylling: can use case 1 be solved via inline semantics (for example, an article element), or is there another need here? _

_Use case 2: Semantic information for navigation _
  Sometimes, user encounter a long article. In print version, it is easy to distinguish a long article, but in ePub Reading system, it is a bit hard.
  To skip to other place, buttons which navigate to the section top page and next/previous article/section page are required as a part of UI.  Such semantic information, or relations,  needs to be written in a file.

_ mgylling: Could the NCX be used for this purpose? If not, what's missing in NCX to allow that? _


=== Domain-specific semantics ===

==== General book semantics ====

===== BOOK-NOTES notes and note references ====
* Requirement: the OPS vocabulary must allow unambiguous specification of _notes_ and _note references_ *

Notes provide or reference sources of additional information or acknowledge the source of a quotation or idea. Each note is typically referenced by a noteref or prefixed by a page location where explicit references have been omitted from the text.

Notes in printed matter are generally distinguishable from annotations by their location either at the bottom of print pages, at the end of sections or in the back matter of a document. Annotations typically occur in the margin near the text being annotated.

Note references typically appear as superscripted numbers or symbols within the narrative flow.

===== BOOK-ANNOTATIONS annotations and annotation references ====
* Requirement: the OPS vocabulary must allow unambiguous specification of _annotations_ and _annotation references_ *

Note: this requirement relates to _static content annotations_, such that are present in the original publication (as added by authors, translators, etc).

===== BOOK-ASIDE-NATURE nature of asides =====
* Requirement: the OPS vocabulary must allow the expression of refined semantics of _aside_s *

Rationale: some asides/sidebars are optional in nature (are set aside to signal that the reader can safely skip them), others are crucial (are set aside to stand out from the base narrative flow (warnings and so on)). To support skippability during dynamic TTS and or synced audio rendering, it must be possible for content to maintain this distinction.

===== BOOK-BRIDGEHEAD non-structural headings =====
* Requirement: the OPS vocabulary must allow the unambiguous specification of non-structural headings *

Rationale: in text books in particular, constructs such as tables, lists and figures sometimes contain headings that do not impact the overall sectioning structure of the content. It must be possible to distinguish these from proper structural section headings, for AT use, and to maintain NCX autogeneration capabilities.

Compare: Docbook _bridgehead_, DTBook _bridgehead_ and DTBook _hd_.

===== BOOK-PAGINATION maintain location of pagebreaks=====
* Requirement: the OPS vocabulary must allow the unambiguous specification of the location of page breaks (as they appear in a paper print source being replicated as EPUB) *

Rationale: even though in general it is better (in a reflowable context) to maintain this information in the NCX alone, the ability to inline this information is useful when autogenerating NCX from the OPS content. Further, the ability to turn off the announcement of page breaks, when present in content, is a typical use of the skippability feature.
  
===== BOOK-FIGUREDESC-MARKUP figure descriptions with markup =====
* Requirement: the OPS vocabulary must allow figure descriptions to be provided that contain rich markup *

Rationale: when providing descriptions of rich figures, _@alt_ is insufficient. Further, it is generally bad from an i18n perspective to provide information intended for human consumption in attribute values.

===== BOOK-FIGUREDESC-EXTERNAL external figure descriptions =====
* Requirement: the OPS vocabulary must allow figure descriptions to be provided out-of-line with unambiguous linking semantics *

Rationale: TBD George

===== TEXT-04 Support Math via MathML ====
* Requirement:  support for math should be built-in and accessible *

Rationale:  Everyday, children are required to take math classes in K-10. Many students continue to take a STEM courses in secondary and post-secondary schools beyond the minimal requirement.  Probably over 1/4 of all textbooks contain math, and there are many trade books, journals, and professional magazines that contain math.  Images do not scale well for the variety of display platforms, nor are they accessible, so images are not an acceptable substitute.

Suggested path:  Math should be incorporated through the use of MathML.  MathML is part of HTML5. MathML is supported in many different browsers natively and a Javascript implementation exists that takes advantage of CSS positioning to do display on platforms that don't have native support.  There are a large number of authoring tools, and MathML allows for interaction with computation and graphing tools which allows for many interesting possibilities for ebooks in the future.



==== Dictionaries/glossaries ====
TBD - Jeff

==== Magazine/Article semantics ====
TBD - Dianne



== Change Proposals ==
Defines the structure of the index of the dictionary. Comments and Questions are very much appreciated.

= EPUB Index document =

Example:
{{{
<!- COLOUR ->
<index>
    <article canonical-form="colour" href="#epubcfi(/6/2[entry-c-to-d]!/563[colour0001]">
		<!- Index to the entry itself ->
        <search-form-group>
            <search-form value="colour"/>
            <search-form value="colours"/>
            <search-form value="color"/>
            <search-form value="colors"/>
            <search-form value="school colours"/>
            <search-form value="school colors"/>
        </search-form-group>

		<!- Index to idioms. They have relative href within an article. ->
        <search-form-group                            href="#colour_1_0" >
            <search-form value="lend colour to"/>
            <search-form value="give colour to"/>
        </search-form-group>
        <search-form value="sail under false colours" href="#colour_1_1"/>
        <search-form value="show one's true colours"  href="#colour_1_2"/>
        <search-form value="under colour of"          href="#colour_1_3"/>
        <search-form value="with flying colours"      href="#colour_1_4" parental-control="1"/>
    </article>
</index>


<!- Example of a Japanese word, with "yomi" or secondary headword ->
<index>
    <article canonical-form="赤い" href="href="#epubcfi(/6/1[entry-a]!/235[akai0005]"">
        <search-form-group search-result-form="赤い・紅い" search-result-form-supplement="あかい">
			<search-form value="あかい"/>
			<search-form value="赤い"/>
			<search-form value="紅い"/>
        </search-form-group>
    </article>
</index>

}}}

== EPUB Index document ==
Markus asked if it might be useful to define a document that aggregates all indexes in the dictionary publication, and possibly making it the only format that we define. After some thought I agree to this direction as it makes scanning of the index at run time much more efficient.

A reading system can use this xml file directly to implement the search, but more commonly reading systems would construct a binary index from this file when the publication is opened. It would take a few seconds to a minutes (needs more concrete numbers here) depending on the size of the index and the machine resource available. Such file can be cached so it is done only once.

All elements and attributes defined below will be in the epub namespace.

== Elements ==

=== _index_ ===
The _index_ element represents machine readable data that implements the search capability of the dictionary or the glossary. It *does not* contain human readable contents.

Contains one or more _article_ elements.

<wiki:comment>
Probably an attribute that identifies this epub publication would be useful?
</wiki:comment>

*Discussion*: It could just be an existing HTML5 element such as _body_, distinguished from other documents in the manifest. On the other hand considering it models a specific data structure, and that it does not contain human readable contents, it might make sense to define a new element.



=== _article_ (HTML5) ===
Each _article_ element corresponds to an _article_ element in the dictionary contents document with the same _article-id_. It groups one or more _search-form-group_ or _search-form_ elements that point to the article or a part within the article.

Contains one or more _search-form-group_ and/or _search-form_.

*_canonical-form_* mandatory attribute is a user visible string that represents the article, typically the headword.

*_href_* mandatory attribute indicates the location of the article in the dictionary content documents using epubcfi. The last step must include the unique identifier of the corresponding _article_ element of the dictionary content documents that is indicated with id attribute.

*_parental-control_* optional attribute if exists indicates that the whole article is not appropriate for children, and that the reading system can hide all search forms defined within. The only possible value is "1" for this version.



=== _search-form-group_ ===
It groups _search-forms_ elements that share the same attributes.

Contains _search-forms_ elements.

It allows the same set of attributes as _search-forms_.



=== _search-form_ ===
It defines one search string that can be used to lookup the corresponding article or a part of the article.

*_value_* mandatory attribute indicates the search string.

*_search-result-form_* optional attribute is a user visible string that is shown when this _search-form_ is a match. When missing the _value_ attribute is used.

*_search-result-form-supplement_* optional attribute a user visible string that is shown together with the _search-result-form_ to help users to identify an article. The intended use is to store Japanese yomi and Chinese Pinyin.

*_href_* optional attribute indicates a location within the corresponding article. It is used to define a search form that points to a part of the corresponding article. For example it might point to a specific sense, an idiom or a derivative. It can be a regular URL or a epubcfi. In all cases the path will be relative to the article. It can be a range using epubcfi, and in such a case the reading system can choose to highlight the indicated portion of the article rather than just jumping to it. When _href_ is missing the search form points to the beginning of the article.

*_parental-control_* optional attribute if exists indicates that the specific search form is not appropriate for children, and that the reading system can hide this specific search form. The only possible value is "1" for this version.

----
== Change History ==
====11/8 9:55 PST (kida)====
Added href as an attribute of the article element so the reading system can locate the article is in the dictionary content documents. Removed article_id attribute in favor of href.

====11/8 9:35 PST (kida)====
Clarified if an attribute is intended as user visible.

====11/8 9:30 PST (kida)====
Added "canonical-form" attribute to the article element. The intent is to allow reading system to show the headword when one of inflection, derivatives or idioms are typed. 

e.g. when a user typed "show" it might have these matches. The reading system can indicate the headword in addition to the match.


 <font face="serif"><font size="3">show one's true colors</font> <font color="#777777">→ color</font></font><br>
 <font face="serif"><font size="3">show up</font> <font color="#777777">→ show</font></font><br>


Removed from the color example "search-result-form" in favor of "canonical-form" as it better describes the entry. The "search-result-form" is still necessary for the case the match itself is very different from what is typed for example for the Japanese and Chinese case.

----
== TO DOs ==
  * Look at proposals from the Index subgroup to see if there are anything we can take advantage of.
  * Obtain concrete performance numbers of building a binary index. probably with sqlite and with marisa.
  * Define multiple indexes for bilingual dictionary (or other cases).
  * Rethink attributes of the article element.
# This wiki show pros and cons of embedded and external regions.

= Definition =

 * *Top-level publication resource*: Publication resources (see [http://idpf.org/epub/30/spec/epub30-publications.html#sec-terminology the definition]) referenced directly from some itemref element in the spine element.

 * *Embedded regions*: Region representations embedded within top-level publication resources

Note: Suppose a JPEG file that is directly referenced by an `itemref` element.  This JPEG file is a top-level publication resource.  It cannot have embedded regions.

 * *External regions*: Region representations detached from top-level publication resources



= Option 1: External regions  =
 
We assume that only a few elements of SVG are allowed as part of external region representations.

We have not documented how we can use relative positions and dimensions 
when we use pure SVG.

== Pros ==

 * Applicable to any type of top-level publication resources or fragments of such resources
 * Positions and dimensions of resources are relative to the size of displayed resources (or fragments)
 * Navigation and rendition mapping based on external regions can be implemented without requiring full SVG processors.
 * Multiple ROIs for a single publication resource is easy.

== Cons ==
 * Even if we use SVG elements and attributes wherever possible, there is a risk of reinventing wheels and poor synergy with the Web.
 


= Option 2: Embedded regions =

See [https://docs.google.com/document/d/1WQ2lX-zVfJKFVimb7AZauDwJnqSzlv_0rbBq1jA8HFA/edit SVG-based regions for Manga].

Note: We have to make sure inter-rendition mapping and intra-rendition navigation can take advantage of embedded regions.



== Pros ==

 * Applicable to SVG content documents and also applicable to HTML content documents  (via image maps or embedded SVG)
 * Positions and dimensions of resources are relative to the size of displayed resources (or fragments)

== Cons ==
 * Not applicable to bare images as top-level publication resources.
 * Handling absolutely any SVG is arguably difficult. 
    * Bill McCoy wrote: "... it
would seem good to  have some specific hypotheses or even better some
data to back up the arguments."
 * Can navigation and rendition mapping based on internal regions be implemented without requiring full SVG processors?
 * Is it easy for the RS to infer the correct geometry of a region, which might be 
a polygon that is defined inside a nested hierarchy of transforms (<g> tags) ?
 * Only a single set of regions for a single publication resource.
 * How do we specify metadata?

= Option 3: Both external and embedded regions  (status quo)

== Cons ==
 * Having two similar mechanisms is confusing.
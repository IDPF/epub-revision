= Introduction =

  This proposal is mainly contructed by Alex Zu with his development team from ASTRI. 
  The full proposal 
  * in word version is available at http://epub-revision.googlecode.com/files/ASTRI%20Annotation%20Spec%20Proposalv0.9.doc 
  * with sample annotation xml file at http://epub-revision.googlecode.com/files/sample.xml 
  * and annotation xml schema definition at http://epub-revision.googlecode.com/files/annotation.xsd

= Reference and Terminologies =

  * Ref 1: IDPF EPub 2.0 standard at http://www.idpf.org/specs.htm
  * Ref 2: IDPF EPub 3.0 Requirements at http://code.google.com/p/epub-revision/wiki/Annotations 
  * Reader System: The Software/Hardware which renders and displays the EPub content as defined in Ref 1


= Annotation Storage Format =

Annotations should not alter the content of the original Ebook, thus recording the annotations in a separate file from the original Ebook is preferred.
In the proposal spec below, the annotation content is generated per book per user (i.e. the annotator) base. The following folder structure is suggested for the user generated annotations.
The user may annotate the book using image, audio or video format. The multimedia content is stored in the folder structure below. 

{{{
...
  Annotations/
    Book1/
      User 1/
        Annotations.xml
        AudioNotes/
          audio1.mp3
          audio2.mp3
        ImageNotes/
          fig1.svg
          fig2.svg
        VideoNotes/
          video1.mp4
          video2.mp4
      User 2/
      ...
    Book2/
...

}}}


== Folder structure is explained below：==
  # Annotations Folder: <p>It is the root folder where the Reader System stores all the annotations generated by all the users who have ever read any EPub Ebooks controlled by the Reader System. The Reader System may need to identify the users by using local login or by communication with a remote login management server.
  # Book1/Book2/… Folder: <p>It is the sample child folder generated by the Reader System for Ebook named "Book1" or "Book2", etc. All annotations generated by any users who have ever read the named book will be stored under this folder. 
  # User 1 folder under Book1: <p>It is the sample child folder generated by the Reader System for Ebook named "Book1" which stores all the annotations generated by "User 1" for "Book1". All annotations generated by "User 1" for "Book1" will be stored under this folder.
  # Annotations.xml: <p>Stores the user annotations which maybe “text” comment, pointers to locally created “multimedia notes” by Reader System or “external reference links” such as HTTP URLs. The “AnnotatedArea” defines the original reference content of the book (i.e. the Book1/Book2/etc as mentioned above). For details, please refer to the Annotations.xml detail explained section below.
  # AudioNotes folder: <p>Stores the audio notes generated by the annotator by using the Reader System. MP3 audio format is used to store user generated content. User may also import audio files to this folder from other sources. User may also use other format such as OGG or WMA as long as it is supported by the Reader System. But the make the audio notes more portable, MP3 is preferred.
  # ImageNotes folder: <p>Stores the doodle/picture notes generated by the annotator. SVG graphics format is used to store user generated content. The good of SVG is that it supports the Zoom IN/OUT of the graphic without display quality drop. User may also import image files to this folder from other sources. User may also use other format such as JPEG, GIF or PNG as long as it is supported by the Reader System.
  # VideoNotes folder: <p>Stores the video notes generated by the annotator. MP4 file format with H.264 video + AAC audio is used to store the user generated content. User may also import video files to this folder from other sources. User may also use other file format such as MKV, AVI, WMV with other audio/video CODEC combinations as long as it is supported by the Reader System, however, MP4 (H.264+AAC) is preferred to fulfill the portability requirement. 

== Annotation Publishing/Sharing Scenario: ==

=== Scenario 1: Create the first sharable annotation ===
  The annotator may create bookmarks, highlight, comments, reference, doodling, audio/video or the mixture of these annotations. Sometimes the annotator wants to share his/her annotation with the general public or friends. In the following examples, annotator1 wants to share his annotations for book1 with annotator2.
  As required by the EPub 3.0 annotation requirement, the annotator should not change his shared or published annotation any more. To fulfill this requirement, the "Published" flag and “Redistributable” flag are adopted (see annotations.xml below).
  The Reader System may need to support the following:
  # Annotator1 trigger the share/publish action.
  # Reader System popup all annotations generated by annotator1 for selection. 
  # The selected annotations will be marked as "Published" (set to 1) and packaged in to a zip file for sharing. If the annotations point to any multimedia notes located under ImageNotes, AudioNotes and VideoNotes folder, those multimedia files should also be packaged into the zip file for sharing.
  # If annotator1 wants to make his annotations redistributable/quotable by other annotators, the “Redistributable” flag should be set to “True” (or 1).

  # Zip file name and structure should follow the below definition.
  File Name: BookID-AnnotatorID-TimeStamp-SerialNo.zip, e.g. book1-annotator1-201009302230-1.zip means this is the first (SerialNo=1) shared annotation created by annotator1 for book1 at 22:30, Sep 30th, 2010.
  # Zip file structure below:
{{{
book1/
  annotator1/
    Annotations.xml
      AudioNotes/
        audio1.mp3
        audio2.mp3
      ImageNotes/
        fig1.svg
        fig2.svg
      VideoNotes/
        video1.mp4
        video2.mp4
}}}
  # Once the annotation is flagged as "Published" (set to 1), the standard compliant Reader System should not let the annotator1 to change the annotation any more. The published annotation with its associated text and multimedia annotations should be kept "Read-Only" across the Reading Systems.
  # Note the Annotations.xml contains only the “Published” annotations extracted from the complete list of annotations (stores under …/Annotations/book1/annotator1/annotations.xml) created by annotator1.

=== Scenario 2: Create the annotation of annotations ===
  The annotator2 wants to create annotation of annotations upon annotator1’s “Published” annotations shared by annotator1 to him. 
  In this case, there is no need to point to the original content in the book1 as it is already defined in annotator1’s annotation, so we just use a “RefID” to point to annotator1’s “Published” annotations that annotator2 wants to annotate.
  The Reader System should be able to find annotator1’s annotation inside …/book1/annotator1/annotations.xml using the “RefID”. By doing so, the Reader System can find the original AnnotatedArea of book1 and present it to annotator2.
  The annotator2 may also want to publish his annotations, thus the Reader System may do the following:

  # Annotator2 trigger the share/publish action.
  # Reader System popup all annotations generated by annotator2 for selection. 
  # The selected annotations will be marked as "Published" (set to 1) and packaged in to a zip file for sharing. If the annotations point to any multimedia notes located under ImageNotes, AudioNotes and VideoNotes folder, those multimedia files should also be packaged into the zip file for sharing.
  # If the selected published annotation is the annotation upon annotator1’s annotation, the Reader System should do the following:
    # Reader System should check the “Redistributable” flag of annotator1’s annotation with the RefID as its AnnotationID, if it is set to “True”, this annotator1’s annotation should be also included in the sharable package created by annotator2.
    # As a result of 4.1, the zip file book1-annotator2-201010101020-1.zip is created with the zip file structure demoed below:
{{{
book1/
  annotator1/
    Annotations.xml
    AudioNotes/
      audio1.mp3
      audio2.mp3
    ImageNotes/
      fig1.svg
    VideoNotes/
      video1.mp4
  annotator2/
    Annotations.xml
      AudioNotes/
        audio1.mp3
      ImageNotes/
        fig1.svg
      VideoNotes/
        video1.mp4
}}}
  Note the book1/annotator1/Annotations.xml contains only the “Redistributable” annotations with “RefID” given in annotator2’s annotation.
  If annotator1’s annotation has its “Redistributable” flag set to “False”, that means annotator1 does not want others to quote/redistribute this particular annotation without prior agreement. Then the Reader System should not include annotator1’s annotation in annotator2’s published annotations. When this case happens, then annotator3 may get lost with annotator2’s annotation with the absence of annotator1’s original annotations. More complicated solution may allow annotator3 to request access to annotator1’s annotation by some kind of authorization process, but that is outside the scope of this document.
  The major purpose of the “Redistributable” flag is to provide certain protections to copyrighted annotations with commercial values.
Other settings are similar to that described in scenario 1.

=== Scenario 3: Create the annotation of annotation of annotations ===
  Similar as scenario 2, but there will be two RefIDs identified to reference to annotation from annotator1 and annotator2 separately.
  Reader System should be able to recursively identified the series of annotations by using RefIDs list to point to annotations from annotator1 & annotator2.

== Annotations.xml ==
  The annotations.xml file stores all the annotations generated by one user for one book.  In case the user generated annotation is in multimedia format (image/audio/video) and stored locally in the related folders (i.e. the AudioNotes, ImageNotes and VideoNoets) as specified above, an URI link (i.e. The RefURI element defined below) is given to address the content. 

  UTF-8 char coding is used for annotations.xml.

=== Annotations.xml xsd schema overview: ===
  The following diagram gives an overview of the xml schema that Annotations.xml should follow:
[http://epub-revision.googlecode.com/files/annotations-schema.png]

=== Annotations.xml File Schema Explained: ===

|| *Field* || *Description* ||
|| BookID || Uniquely identifies the book that the annotations are bound to. Normally it uses the meta data field <identifier> as defined in ePUB OPF standard. ||
|| BookName || The name of the Ebook being annotated. Normally it uses the meta data field <title> as defined in ePUB OPF standard. ||
|| BookAuthor || The author of the Ebook being annotated. Normally it uses the meta data field <creator> as defined in ePUB OPF standard. ||
|| EditionNumber || The edition number of Ebook if available. ||
|| AnnotatorProfile || The annotator's information, it is a complex type composed of the fields explained below. ||
|| AnnotatorID || The unique identifier of the annotator. The uniqueness of the ID could be a system wide (server or Reader System) value as the worldwide uniqueness is hard to achieve. This field together with the optional AnnotatorName guarantee the identity and anonymity of annotator. ||
|| AnnotatorName || The real name of the annotator. If the annotator wants to be anonymous, this field should not present. ||
|| Avatar || The avatar image of the annotator, Base64Binary is used to store the image info. The reader system should be able to read the data and show the image. ||
|| Email || The annotator's email address. Useful in the E-learning scenario. ||
|| PhoneNumber || The annotator's phone number. Useful in the E-learning scenario. ||
|| SocialNetworkInfo || The annotator's social network IDs. Could be null or multiple. ||
|| SocialNetwork || The annotator's social network URL. Such as www.facebook.com for Facebook ID, www.twitter.com for Twitter ID. ||
|| LoginName || The login name for the associated social network. ||
|| Annotation || Record the annotator's annotations.  ||
|| AnnotationID || The unique identifier of the annotation.  ||
|| AnnotatedArea || Locate the annotated area of the Ebook. It is either a list of Range elements (for annotation on original Ebook) or a list of RefIDs (for annotation of annotations) as defined below. But the two kinds of element must not present within the same annotation. ||
|| Range || Range element could be one or multiple when presents within a single annotation. This is to fulfill the requirement that each annotation could be referencing multiple points. StartPoint and EndPoint are used to locate the actual annotated area of the Ebook. ChapterFileName + XPath + Offset format used. If StartPoint and EndPoint are equal to NULL, then the annotation is for the whole Ebook.
Note the Microsoft and Webkit index the HTML differently, this spec propose to go the Webkit way so that every node in indexed in DOM starts with “1”.
The annotated content of the Ebook maybe whole chapter, text/(full paragraph or range of text), image/(partial space of image), audio/(partial duration of audio) or video/(partial space+duration of video), thus the Offset may have different values for these different Ebook elements.

If the StartPoint/EndPoint is a before/after a character, the Offset should be an Integer to indicate the position of this char with the text() node. E.g. Chapter1.xml + /html[1]/body[1]/div[5]/span<6>/text() + 8 means the 8th char of the text() node identified by the XPath. EndPoint should have larger value than StartPoint if the XPath are the same.

If the StartPoint/EndPoint is a pixel of the image element, the Offset should be a (x, y) coordinate with (0, 0) as the left-upper base point. Both x and y are integers. E.g. Chapter1.xml + /html[1]/body[1]/div[5]/span<6>/img[1] + (20, 50) means the pixel at (20, 50) of the image. EndPoint should have larger x and y value than StartPoint if the XPath are the same.

If the StartPoint/EndPoint is points to an audio element, the Offset should be an integer in seconds to indicate the time elapsed from audio’s starting point. E.g. Chapter1.xml + /html[1]/body[1]/div[5]/span<6>/audio[1] + 70 means the 1 minute 10 seconds position of the audio clip. EndPoint should have larger value than StartPoint if the XPath are the same.

If the StartPoint/EndPoint is points to a video element, the Offset should be in (x, y, t) format with (x, y) as the coordinate and t as the elapsed time. The definition of (x, y) is similar to that defined in image element. The definition of t is similar as that defined in audio element. E.g. Chapter1.xml + /html[1]/body[1]/div[5]/span<6>/video[1] + (20, 50, 70) means the position at (20, 50) and elapsed time is 1 minute 10 seconds video clip. EndPoint should have larger value x, y, t values than StartPoint if the XPath are the same. ||
|| StartPoint || The start point of the annotated content of the Ebook in EPub format. Format is XPath + Offset. Details are given above. ||
|| EndPoint || The end point of the annotated content of the Ebook in EPub format. Format is FileName+XPath + Offset. Details are given above. ||
|| RefID || RefID element could be one or multiple when presents within a single annotation. This is to fulfill the requirement that recursive annotations upon annotations could be created by annotators. RefID is to reference the parent annotation that the current annotation annotates on. In case described in the sharing/publishing scenarios above: annotator3 annotates (with sample AnnotationID: 3001) on annotator2’s annotation (with sample AnnotationID: 2001) which recursively annotates annotator1’s annotation (with sample AnnotationID: 1001). The RefID of annotation 3001 should have both 2001 and 1001 recorded as below:
{{{
……
<annotations>
<AnnotatorProfile>
<AnnotatorID>annotator3</AnnotatorID>
……
</AnnotatorProfile>
<Annotation>
<AnnotationID>3001</AnnotationID>
<AnnotatedArea>
   <RefID>1001</RefID>
   <RefID>2001</RefID>
</AnnotatedArea>
……
</Annotation>
</annotations>
}}} ||
|| DeviceID || The DeviceID of the annotation. Could be the Ebook Device Serial Number or the CPU ID or Mac Address depends on where the Reader System Software resides. ||
|| Published || Boolean, default 0 or False. If 1, means this annotation is already shared with others and is no longer changeable within the Reader System. If no, means this annotation is still private and local and the annotator is free to change it. See Annotation Sharing/Publishing Scenario above. This is to fulfill the requirement that published annotations could not be changed. ||
|| Redistributable || Boolean, default 1 or True. Used together with Published. If the Published annotations are Redistributable, other annotators could reference these annotations for further publishing freely. Otherwise, the published annotation could not be referenced by others for further publishing. Details are explained in the sharing/publishing scenarios above. ||
|| Type || The type of annotation. It is an Enumerated value defined as below:
{{{
annotationTypes {BOOKMARK, HIGHLIGHT, UNDERLINE, STRIKETHROUGH, FOOTNOTE, DOODLE, AUDIO, VIDEO, HYBRID}.
}}} ||
|| Color || The color for the Highlight, Underline and Strikethrough annotation types. Only Mandatory for these three types. ||
|| CreatedTime || The time when the annotation is created. Useful when searching around the annotations. ||
|| LastModifedTime || The time when the annotation is last modified. Useful when searching around the annotations. Note that once the annotation is "Published", it is no longer changeable, thus the the LastModifiedTime should not be changed any more. ||
|| Content || The actual annotations stores in this field. It has two elements mentioned below. ||
|| Comment || The comment is the text based annotation created by the annotator. It is stored in XHTML format. No object or audio/video tag is allowed in comment.  ||
|| RefURI || When the annotator is creating doodling, audio/video annotation or reference an external URL, the RefURI field is used. It has several attributes defined below. Sample RefURI below:
{{{
<RefURI type=”VIDEO” URL=”./VideoNotes/video1.mp4” height=”600” width=”800” length=3600/> 
}}}
is referring to the video1.mp4 which is the video annotation created by annotator and placed under VideoNotes folder under the annotation folder. The clip is with 800x600 resolution and lasts for one hour.
{{{
<RefURI type=”EXTERNAL” url=” http://code.google.com/p/epub-revision/wiki/Annotations”/> 
}}}
is referring to an external HTTP link. ||
|| Type || The type of reference URL. It is an Enumerated value defined as below:
{{{
refTypes {AUDIO, VIDEO, DOODLE, EXTERNAL}.
}}} ||
|| URL || URL points to the image/audio/video source under the annotations folder or points to the external link. ||
|| Height || Height of the Image or Video source. Positive Integer. ||
|| Width || Width of the Image or Video source. Positive Integer. ||
|| Length || Length of the Audio or Video source. Positive Integer in seconds. ||
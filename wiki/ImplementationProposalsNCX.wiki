summary One-Two options for navigation proposal
= Introduction =

The sub-group has discussed two options for the Navigation Center. Both will require a rewrite of the NCX as a Relaxng Schema. The first proposal would create a single structure, the NavMap,  which would contain a hierarchy  of the headings along with other navigation targets of variousOPS:role/type. The second is designed to modify as little as possible.

==NCX Navigation Two Proposed Solutions==

===Proposal 1: Single !NavMap ===

Replacing the current NCX navigation model with a single structure would greatly reduce the overhead and complexity of the NCX. The concept would be to add additional navTarget(s)  to the current Navemap, which is a hierarchical set of navPoint(s)s of chapters, sections, and sub-sections, etc.  We can add additional navTarget(s) as they linearly appear with specific OPS:role/type  attributes.

This means that instead of the single navmap followed by multiple lists, a single navemap with the additional navTarget(s) would appear sequentially  in the hierarchy. This eliminates the need for the "playorder,"  because each navigation spot is positioned in the correct sequence. the OPS: role/type would semantically identify the target as a heading, start of a page, a photo (as a list of photographs), or whatever the author wanted to include in the NCX, which is based on the OPS:role/type controled ontology.

====Backwards Compatibility====

While few 2.0.1 reading systems supported the NCX , those that did would not break when processing an EPUB 3 document.  (This should be confirmed.)It is expected that the navTarget(s) would be ignored, or they would show up as headings in the hierarchy of the document, which seems acceptable. 

===Proposal 2:  !NavMap plus navLists, simplified ===

This proposal changes as little as possible from2.0.1

* Make Head optional and make the navMap the first item.
* remove docTitle and docAuthor
* Change the playOrder element to sequenceNumber (or get rid of it completely)
* Allow multiple navList(s) withOPS:role/type. 
* remove pageList 
* NavLists with @role of "pageStart would replace the pageList.

====Backward Compatibility====

Because the NavMap was the structure most often implemented in 2.0.1 reading systems, there should be no impact on those reading systems. If page navigation through pageList was implmented (did any reading system do this) , that functionality would be lost.


Add your content here.


= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages
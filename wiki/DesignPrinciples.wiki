#summary Design principles and guidelines for the EPUB 3.0 revision

 # *Maximize reading system backwards and forwards compatibility (draft rewording)* :
  # 2.01 Reading Systems *should* be able to open and render 3.0 EPUBs without substantial information loss _(forwards compatibility)_
  # 3.0 Reading Systems *must* be able to read 2.01 EPUBs _(backwards compatibility)_
  # The EPUB 3.0 specification may modify and/or remove existing 2.01 features as long as this does not negatively impact forwards compatibility _(see 5 below)_
  # Entirely new features in the EPUB 3.0 specification should be designed with forwards compatibility in mind, primarily by utilizing contextually relevant mechanisms for graceful fallback where possible.
  # In order to ascertain whether forwards compatibility is negatively impacted by a proposed specification change, perform reading system tests to achieve an accurate measure of the effects, and let the WG decide for each case whether to refrain from the proposed specification change.<br/>
 # *Maintain content accessibility as an overriding goal*: while  new capabilities such rich media and interactivity, and content types such as digital textbooks and magazines, will bring inherent challenges in re: accessibility, it remains critical that, in supporting these new  capabilities and content types, accessibility be maximized.<br>
 # *Build on broadly-adopted Web/ISO standards wherever possible*, in preference to inventing new markup or mechanisms. If appropriate Web standards do not exist or are not stable, the WG may create its own "local" solutions if necessary to solve our problems, but we recognize that unique capabilities of EPUB have historically been  significantly less widely supported, and may make it harder to leverage browser and other open source technology building-blocks in implementing Reading Systems. When creating a local solution, the WG shall strive to maximize future compatibility with emerging standards, for example, define CSS properties that are compatible with a W3C CSS3 module draft in its current state.
 # *Be minimal, avoiding redundant mechanisms*,  in order to simplify implementation of content creation and Reading System software, and maximize adoption. For example, if a scripting mechanism is a necessary component of the solution for problems in supporting interactivity, extensible text markup,  and advertising, we should strive to specify one, not three, scripting languages and associated APIs.
 # *Be general*, reflecting our mission to be the global standard for many kinds of published digital content from trade books to textbooks to magazines, in a context of rapidly evolving disruptive change. EPUB is a horizontal enabling technology standard, not a vertical solution for one market segment, and EPUB 2++ will be used in the coming years in ways that we cannot now anticipate.
 # *Be pragmatic and realistic*, reflecting the tight timeline we are on for this next major revision of the EPUB standard. We may not, on our one-year schedule, be able to solve all of the problems laid out in our Charter, and we undoubtedly cannot solve them all perfectly.
 # *Remember that client capabilities of Reading Systems will vary widely*, and avoid requirements that may not be implementable on devices with limited CPU and/or memory resources, or which may not reflect the varying features of such devices in areas such display types, input modes, etc.. We should avoid absolute requirements for processing-heavy operations (such as transformations or other forms of content manipulation) at consumption time, instead delegating these to authoring time, or providing for fallbacks (balancing the requirements for flexibility/extensibility with requirements for resource-limited device implementability).
 # *Favor declarative content (markup) over programmatic content (scripting)*, as declarative content is more easily made accessible and otherwise manipulated by downstream workflows. It is recognized that scripting support is likely a requirement to solve our problems, but we wish to minimize/avoid "uncontrolled" scripting for reasons ranging from accessibility to security to supporting user preferences for rendering. An EPUB++ publication should, in its entirety, remain a document, rather than become an arbitrary application.
 # *Maintain EPUB's roots as an application of Web technologies*. At a 50,000-foot level EPUB can be usefully viewed as a formally published "website in a package", that is generally able to be used offline and is more rigidly specified and thus more reliable than arbitrary Web content. While this is not a completely accurate or absolute technical characterization, the Web-centric nature of EPUB is an important consideration that has created a low barrier to adoption and has been important to its success to date. All things being equal we would prefer to maintain this paradigm, and have EPUB leverage the latest Web standards, rather than become a completely different technology from the Web. 
 # *Maximize cross-device content predictability*. Publishers should be able to author content once that can be consumed everywhere, with a predictable user experience. This does not mean a "least common denominator" experience, as publishers should be able to innovate in addressing reading system capabilities, but this should not be done in a manner that leads to content that is restricted to certain devices (but rather via techniques like "progressive enhancement"). Nor does this mean that users should have no control over the presentation: it is recognized that there is inherent tension between publisher desire for consistent experience is in tension with user desire to optimize presentation for their needs, and we should strive to balance these competing goals.
 # *Favor proven solutions*. While we don't have a formal requirement that there be implementations of each new feature (like W3C), we should favor solutions that have been implemented elsewhere, ideally more than once, over solutions that are purely theoretical. 
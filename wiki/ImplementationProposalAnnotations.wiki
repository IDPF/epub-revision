#summary Implementation proposal for annotations.

= Introduction =

This is a wiki page to collaboratively edit an implementation proposal for the "annotations" part of the revision of the EPUB standard. This document is in inception phase.

Please refer to the [Annotations annotations requirements page] (http://code.google.com/p/epub-revision/wiki/Annotations)

<wiki:toc max_depth="5" />

= Editors / Contributors =

  * Will Manis
  * Daniel Weck
  * (add your name here)

= Basic Concepts =

An "annotation" is in fact the combination of:

  * The Annotation Content ("what the annotation consists of, e.g. text with human narration").
  * The Annotation Target ("the portion of source content that the annotation references / points to").

A single Annotation Content may be associated to several Annotation Targets, located in one or more target EPUB documents.

In this implementation proposal, we propose that the physical distribution unit for one (or more) annotation is an EPUB document. Such EPUB document would define both the Annotation Content(s) and associated Annotation Target(s).

Using the EPUB physical and logical container to store annotations enables the scenario whereby annotations themselves can be annotated ("annotations of annotations"). This implies that an EPUB document containing annotations gets a unique identifier (just like a "normal" publication's ISBN), otherwise it is impossible for contained annotations to be further annotated. Note: although allocating world-wide unique identifiers is a non-trivial issue for annotations contributed by casual readers, it may be less of an issue for content producers that specialize in publishing large annotation sets, e.g. enhancements to existing publications (additional commercial material to textbooks).

For a given EPUB publication, there may be many annotations provided by a large number of individual contributors => this may lead to a non-negligible overhead if each independent annotation is a fully-fledge EPUB document (e.g. processing overhead on the client side, to search and render annotations for a given page of the book being read). It appears to be an authoring issue though: online services or web-connected reading devices that enable the production of annotations by readers themselves, should ensure, for example, that all the annotations created by a single reader for a given publication are stored in the same EPUB document (in some ways, we can make an analogy with POIs Points Of Interest for SatNav/GPS navigation devices).

= Annotation Targets and Multimedia Content =

In this proposal, we put forward the use of XPath to address XML points in the target EPUB document.
When media elements (video or audio) are present in the document model (e.g. HTML5), annotators need the ability to point in the time domain, as well as the space domain (2D graphics). The latter point implies that static images (non-animated) may also be annotated in terms of specific 2D areas.

There are 2 proposals:

(1) To use W3C's Media Fragments syntax ( http://www.w3.org/TR/media-frags/ ) for both the time and space domain, albeit with a notable difference: a Media Fragments URI points directly to a media resource (e.g. video or audio file), whereas an annotation target would be defined based on a given XML media element (e.g. <audio src="..."/> or <video/>).

(2) To use W3C's SMIL timing attribute syntax (e.g. begin="10s" end="1m45s"), and some other syntax for the space domain (CSS ?).

= Reusing the EPub format for annotations =

Annotations would be an additional part of an OCF container.

== Abstract Container: ==
{{{
META-INF/
   container.xml – Note: includes multiple <rootfile> elements
   [manifest.xml]
   [metadata.xml]
   [signatures.xml]
   [encryption.xml]
   [rights.xml]
***[annotations.xml]***
OEBPS/
   Great Expectations.opf
   cover.html
   chapters/
      chapter01.html
      chapter02.html
      … other OPS files for the remaining chapters …
}}}

An annotation itself would refer to annotated content and the annotators content, which could be co-located or contained in other documents. It is probably reasonable to limit the annotators content to be local to the container holding the annotations.

The example below illustrates a textual annotation on textual content. 
Need examples for:
  # ink annotation of text
  # ink annotation of image or svg
  # annotation of audio/video

== annotations.xml ==
{{{
<annotations xmlns="http://www.idpf.org/2011/annotation">

   <annotation id="uuid">
      <referenceddocument>
	    <!-- DANIEL: should "referenceddocument" be renamed to "annotationtargets" (note the proposed plural form), to be consistent with "annotationcontent" ? -->
	 <documentidentifier>
	    <!-- ANNOT_R3 -->
	    ISBN, DOI etc.
	 </documentidentifier>
	 <date>
	    2010:09:08:17:17:34 UT
	 </date>
	 
	 <contentsignature>
	    <!-- ANNOT_R1 -->
	    a dsig over the referenced content or a superset of the content
	 </contentsignature>

	 [
	    <!-- much of the following is strongly dependent on UA not
	         altering the content, especially for portable
	         annotations ANNOT_TW_R2
	      -->
	    <!-- ANNOT_R4, ANNOT_R4.9 -->
	    <ranges>
	       <range>
		  <start>
		     <part>part in ocf container</part>
                     <string>a string sufficiently long to be unique</string>
                     <startid>a id in the vicintity of the start of the range</startid>
		     <location>
                          <!-- a valid xpath 1.0 expression -->
                          <xpathexpr>xpath</xpathexpr>
                          <charOffset>xx</charOffset>
                     </location>
		     <!-- ANNOT_R4.1, ANNOT_R4.2, ANNOT_R4.3,
		          ANNOT_R4.4, we will need additional info in
			  location to cover ANNOT_R4.6, R4.7, R4.8, 
		       --> 
		  </start>
		  <end>
		     <part>part in ocf container</part>
		     <location>a valid xpath 1.0 expression</location>
		  </end>	 
	       </range>
	       <range>
		  .
		  .
		  .
	       </range>
	    </ranges>
	 
	    or
	    
	    <point>
	       <part>part in ocf container</part>
	       <location>a valid xpath 1.0 expression</location>
	    </point>
	 
	 ]
	 
	 <renderinginfo>
	    <!--  ANNOT_TW_R1 -->
	    <hilight>yellow</hilight>
	 </renderinginfo>	 
      </referenceddocument>
   
      <annotationcontent>
	 <!-- ANNOT_R1.1 -->
	 <author>
	    <name>Mark Twain</name>
	    <dsig></dsig>
	 </author>
	 <date>
	    2010:09:08:17:17:34 UT
	 </date>

	 <range>
	    <!-- ANNOT_R8 -->
	    <!-- this points to content in what is nominally an
	          epub file
	      -->
	    <start>
	       <part>part in ocf container</part>
	       <location>a valid xpath 1.0 expression</location>
	    </start>
	    <end>
	       <part>part in ocf container</part>
	       <location>a valid xpath 1.0 expression</location>
	    </end>	 
	 </range>
	 
	 <renderinginfo>
	    <balloon/>
	 </renderinginfo>
	 
      </annotationcontent>
   </annotation>
   
   <annotation id="uuid">
      .
      .
      .
   </annotation>
      
</annotations>
}}}

=== XSD for above ===
{{{
<?xml version="1.0" encoding="Windows-1252"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified"
           xmlns:ann="http://www.idpf.org/2011/annotation"
           targetNamespace="http://www.idpf.org/2011/annotation"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="annotations">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" name="annotation">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="contentReference" type="ann:contentReferenceType" />
              <xs:element name="annotationContent" type="ann:annotationContentType" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:string" use="required">
              <xs:annotation>
                <xs:documentation>
                  a valid uuid
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="contentReferenceType">
    <xs:annotation>
      <xs:documentation>
        This points to the content that has been annotated
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="referencedDocument" type="xs:string" />
      <xs:element name="referencedContent" type="ann:referencedContentType"/>
      <xs:element name="date" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="contentSignature" type="SHA1" minOccurs="0"/>
      <xs:element name="renderinginfo" type="ann:renderingInfoType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="referencedContentType">
    <xs:sequence maxOccurs="unbounded">
      <xs:choice>
        <xs:element name="range" type="ann:rangeType"/>
        <xs:element name="point" type="ann:partLocationType"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="annotationContentType">
    <xs:sequence>
      <xs:element name="author" type="ann:authorType"/>
      <xs:element name="range" type="ann:rangeType"/>
      <xs:element name="date" type="xs:dateTime" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>


  <xs:complexType name="authorType">
    <xs:sequence>
      <xs:element name="name" type="xs:string" />
      <xs:element name="dsig" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="renderingInfoType">
    <xs:annotation>
      <xs:documentation>
        hints for the UA on how to render the annotation,
        this still needs lots of discussion
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="balloon" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="rangeType">
    <xs:sequence>
      <xs:element name="start" type="ann:partLocationType"/>
      <xs:element name="end" type="ann:partLocationType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="partLocationType">
    <xs:sequence>
      <xs:element name="part" type="xs:string" />
      <xs:element name="location" type="ann:locationType" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="locationType">
    <xs:annotation>
      <xs:documentation>
        xpath (a subset?)
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="uniqueString" type="xs:string" />
      <xselement name="nearbyID" type="xs:ID" />
      <xs:element name="xpath+offset" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

</xs:schema>
}}}

=== Relax NG for above ===
Warning: this is a conversion of xsd above...
{{{
<rng:grammar
   xmlns:rng="http://relaxng.org/ns/structure/1.0"
   xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
   xmlns:ann="http://www.idpf.org/2011/annotation"
   ns="http://www.idpf.org/2011/annotation"
   datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

   <rng:start combine="choice">
      <rng:ref name="annotations"/>
   </rng:start>
   
   <rng:define name="annotations">
      <rng:element name="annotations">
         <rng:oneOrMore>
            <rng:element name="annotation">
               <rng:element name="contentReference">
                  <rng:ref name="contentReferenceType"/>
               </rng:element>
               <rng:element name="annotationContent">
                  <rng:ref name="annotationContentType"/>
               </rng:element>
               <rng:attribute name="id">
                  <rng:data type="string">
                     <a:documentation>
                        a valid uuid
                     </a:documentation>
                  </rng:data>
               </rng:attribute>
            </rng:element>
         </rng:oneOrMore>
      </rng:element>
   </rng:define>

   <rng:define name="contentReferenceType">
      <a:documentation>
         This points to the content that has been annotated
      </a:documentation>
    
      <rng:element name="referencedDocument">
         <rng:data type="string"/>
      </rng:element>
      <rng:element name="referencedContent">
         <rng:ref name="referencedContentType"/>
      </rng:element>
      <rng:optional>
         <rng:element name="date">
            <rng:data type="dateTime"/>
         </rng:element>
      </rng:optional>
      <rng:optional>
         <rng:element name="contentSignature">
            <rng:data type="string"/>
         </rng:element>
      </rng:optional>
      <rng:optional>
         <rng:element name="renderinginfo">
            <rng:ref name="renderingInfoType"/>
         </rng:element>
      </rng:optional>
   </rng:define>
   
   <rng:define name="referencedContentType">
      <rng:choice>
         <rng:element name="range">
            <rng:ref name="rangeType"/>
         </rng:element>
         <rng:element name="point">
            <rng:ref name="partLocationType"/>
         </rng:element>
      </rng:choice>
   </rng:define>

   
   <rng:define name="annotationContentType">
      <rng:element name="author">
         <rng:ref name="authorType"/>
      </rng:element>
      <rng:element name="range">
         <rng:ref name="rangeType"/>
      </rng:element>
      <rng:optional>
         <rng:element name="date">
            <rng:data type="dateTime"/>
         </rng:element>
      </rng:optional>
  </rng:define>

  <rng:define name="authorType">
     <rng:element name="name">
        <rng:data type="string"/>
     </rng:element>
     <rng:element name="dsig"/>
  </rng:define>

  <rng:define name="renderingInfoType">
     <a:documentation>
        hints for the UA on how to render the annotation,
        this still needs lots of discussion
    </a:documentation>
    
    <rng:element name="balloon"/>
  </rng:define>

  <rng:define name="rangeType">
     <rng:element name="start">
        <rng:ref name="partLocationType"/>
     </rng:element>
     <rng:element name="end">
        <rng:ref name="partLocationType"/>
     </rng:element>
  </rng:define>

  <rng:define name="partLocationType">
     <rng:element name="part">
        <rng:data type="string"/>
     </rng:element>
     <rng:element name="location">
        <rng:ref name="locationType"/>
     </rng:element>
  </rng:define>

  <rng:define name="locationType">
    <a:documentation>
        xpath (a subset?)
    </a:documentation>
    <rng:element name="xpath">
       <rng:data type="string"/>
    </rng:element>
  </rng:define>

</rng:grammar>
}}}
== User agent rendering ==
It will be up to the UA to determine the UI to capture and render annotations.

= Add your solution here =

Looking for an implementation proposal...

Here is how annotations are done in Adobe Digital Editions (also used in other vendor's implementations): [ImplementationProposalSimpleAnnotations]
#Minutes for EPUB revision Working Group F2F meeting, NYC, 15 June 2010


== Opening Remarks ==

George: reiterated IP and antitrust policies

George: please use invented names rather than company/product names when making examples, like HappyReader or EvilReader

Markus: we will try to find a volunteer to take over scribing after each break

Markus: Today, lighting talks. We have extremely busy schedule, talk list is posted on Google Code site. 15 minutes per speaker including questions - LIGHTNING talks, 

not big presentations to solve all the world's problems. We will have a clock with George as timekeeper, no one can go over 15 minutes, we will have to cut off. We 

will give 2 minute warning. If you talk 5 minutes you can have 10 minutes for questions. Speakers can coordinate and create a joint question session for a related set 

of talks, please coordinate with yourselves

Markus: We hope that by 5:30 we will have gotten as much information and ideas and problem and use case descriptions as possible so that when we move on tomorrow we 

will have a better grasp of the problems and how we should move forward to address them

Markus: Regarding process, we will settle and finalize that tomorrow, problems are not final, we will not make any decisions today/tomorrow. Likely we will break up 

into subgroups that resemble themes of today's talks, they will be tasked with producing official requirements and use case descriptions, the main group will ratify, 

then next step is to develop solution proposals and take back to the main group again. So there are two main loops here, then we have to write the specification too

Markus: some presentations are available on a wiki page linked in agenda (on Google Code epub-revision site). those who haven't submitted presentations or directly 

wiki content, up to you to choose, preferably the latter as it is more accessible. if you email me presentations I may be able to stream them up during the day

Markus: scribing the lighting talks will be light unless you ask for heavy scribing. See Wiki for abstracts/slides for each talk.

== Introductions ==


== Global Language Support ==

Markus: EZRead will be first speaker

Michael Hsieh: report on progress in adopting EPUB in Taiwan and China. We have problem reading old English documents a few hundred years old, in China there are 5 

thousand years old documents. Two major problems, vertical format doesn't fit EPUB model, which is based on horizontal left-right reading; secondly, most works saved 

to page based PDF format, especially historical works converted from printed works to PDF, but PDF is far inferior to EPUB in readability

Hsieh: what is needed is vehicle to convert from PDF to EPUB: there is no 100% conversion but task is to produce satisfying results

Hsieh: EZRead represents Taiwan Digital Publishing Forum (TDPF)

Hsieh: michaelh@ezread.com

Markus: Elliott Ning and Mei-Li Chen will coalesce into one 15 minute talk to save time

Chen: demo of vertical layout using HTML table tag - a current solution but has disadvantages. 10 screen sizes, 10 modes, images can't be supported, and heavy 

JavaScript loading

Murata: writing-mode?

Chen: propose EPUB 2.1 support CSS3 subset, text layout modul with writing mode: inline direction and block flow, and related CSS attributes

Keith Fahlgren: There are some "future consideration" tickets on the same topic: http://www.daisy.org/epub/issues/support-page-progression-independent-script-writing-

direction

Chen: border, margin,' padding and mapping logical to physical relations

Keith Fahlgren: and http://www.daisy.org/epub/issues/epub-needs-support-vertical-directionality-writing

Chen: before, after, start, end to top, bottom, left, right

Murata: I am now quite pessimistic about logical properties, which are relative to the present writing-mode.

Chen: reason is HTML5+CSS3 getting adoption, and original content can be converted with one line "writing mode: tb-rl"

Chen: browser can do SVG font rotation etc.

Murata: It is still an editor's draft.

Chen: challenges, CSS3 still a W3C draft, SVG layout mapping to CSS3 writing mode must be done

Gregory Rosmaita: would CSS3-Layouts help? http://www.w3.org/TR/css3-layout (in last call)

Brady: is writing mode in published CSS3 document, I couldn't find it in latest drafts

Murata: http://dev.w3.org/csswg/css3-text-layout/

Keith: it's not the CSS3 module that's received the widest support from browsers yet, but suggestion is that we try to push it

Murata: One of my colleagues, Murakami-san, has become a co-editor to push it.

Ric: our concern is pointing at specs whose first paragraph says don't reference this spec it's a WIP, it's an interesting challenge to us to see how to solve it, as 

it will come up at least 12 times today

Murata: I understand your concern. But I am not so pessiimstic.

Will: other than vertical, another issue is references to physical attributes, you are trying to establish a mapping, right?

Murata: If we just remove contentious parts, this should not be so difficult.

Chen: yes

Murata: I reluctantly give up logical properties... reluctantly. Logical properties lead to complicated cascading or two sets of properties, which are burdens to 

implementations.

Kanai: ePub CJK requirements, I'm working with Murata Makoto of JEPA: 3 different organizations have made proposals to IDPF already (Japan) plus Taiwan and China. 

China has private, kind of EPUB extension. CJK requirements can be gibberish between countries

Murata: This is because IT guys do not understand typography. Typographers do not understand IT.

Kanai: propose CJK subgroup to create global spec, and get commitments from CJK content providers

Murata: Existing e-book viewers (non-EPUB) already support vertical writing.

Murata: I'm the convenor of SC34/WG4 (OOXML).I know other SC34 people well.

Kanai: Makoto is chair of ISO SC34 and is collecting CJK requirements from ISO members, first CJK workshop held in Seoul last month. Sapporo workshop coming. items 

Makoto collected include CSS3 features, ruby of HTML5, CJK metadata in OPF, user defined characters, pagination. we will need writing-mode and text-emphasis of CSS3. 

existing XHTML ruby is good enough, we will need Unicode IVD and SVG fonts, and Unicode 6.0.0, used in Japanese keitai books. we will need emoji in epub

Will: in 93 94, X4051 was translated to English, it's a very good spec of J layout, but I don't hear people mentioning it. What is status?

Kanai: I will evaluate JIS X4051 and answer, but this is spec for print book, not good for web based technologies, but some items were translated into W3C requirements

Murata: W3C Japanese layout requirements are much better now, It is derived from 4051

Kanai: spec is not updated frequently

Murata: W3C has published requirement document about Japanese text layouts, two versions are available, this has derived from 4051 so we can ignore it. 

http://www.w3.org/TR/jlreq/

Jeff: do requirements deal with issues like which characters are allowed to appear at beginning or end of line

Murata: Yes, See 3.1.8 in the W3C note ("Characters Not Ending a Line")

Kanai: current EPUB spec doesn't even specify western language character set so we don't touch that part, that should be solved in the market

Murata: I'm wondering if HongKong has seen the JEPA requirement document.  I would be very much interested in their feedbacks.

King: mapping IDPF 2.1 requirements to local response based on Hong Kong requirements

King: demo of read along feature

King: speech is being played and text is animated, font color changed ("karaoke mode"), we speak Cantonese, so we need to learn Mandarin pronunciation, so textbook can 

overlay pinyin (pronunciation guide) using roman charset, can be toggled on/off. There are 4 or 5 accents, you don't find it in printed textbook, but it is expected in 

electronic textbook

King: demo of English textbook

King: highlighting sentence by sentence not word by word. annotation features, freehand drawing, translucent highlighting. we don't necessarily need vertical layout, 

because for horizontal layout ("rowwise") makes pinyin overlay easy. Fancy text layout over graphics or text over text, whatever can be done with desktop publishing 

software, want to have it preserved in  electronic format

Murata: Japan sticks to vertical writing.

King: if text wraps around graphics, they want it preserved, they want 100% replication of paper textbook page layout. rich media, key feature is synched audio 

playback with visual tracking of changed word or sentence attributes like color, in situ animation, "temporal interpolation", exercises & quizzes for interactivity, 

with teacher feedback overlays, students need to be able to send intermediate steps not just answers. Annotations need also global notepad/whiteboard not associated 

with preexisting content.

King: a proposal is to capture all user generated content into a separate EPUB, cross referencing support, that makes electronic textbook a collection of loosely 

bundled EPUBs, where each layer is an EPUB overlaying the original publisher's content

Garth: that textbook was more a picture of a page, that house with text wrapping, that is very pre-paginated "dont reflow this thing", EPUB is reflowable standard and 

these two worlds don't merge

Murata: BTW, information about the Seoul CJK workshop is available at http://www.asahi-net.or.jp/~eb2m-mrt/CJK/Seoul2010/

Garth: for iPhone vs. iPad vs. Android, the different aspect ratios and screen sizes aren't a consideration?

King: at some point being migrated to students, but they always have paper textbook to fall back on, electronic is complementary not replacement. 5 years from now 

still have paper as core layer. in order not to confuse students, we need to preserve pagination, we will need 1-1 replication of paper based version

Markus: reflowability and print page maintenance not necessarily contradictory

Roger Sperberg: internationalization - is it possible to do book in Hebrew today? second question, if request to be able to handle vertical & R-L, does this resolve 

issues for complex scripts like Thai and Arabic and so on

Murata: I believe that bidi is supported by HTML and with Thai and Arabic I don't think they need vertical so what is needed is good formatting of these languages, 

they are important and not easy but I don't think EPUB spec has to be changed for supporting such languages

Markus: Makoto, can this be confirmed by anyone?

Josh: there is need for better support from R-L for Hebrew, some of this is software, but not nearly as difficult as vertical

Roger S: user characters, referring to things not in Unicode?

Gregory: In HTML5 it is the bdo element http://dev.w3.org/html5/spec/text-level-semantics.html#the-bdo-element

Murata: yes, one is minor variation in characters, another is just completely different characters, or create some logo

Gregory: http://dev.w3.org/html5/spec/text-level-semantics.html#the-ruby-element

Bill M: emoji

Roger S: SVG glyphs possible?

Ric: this will be complex to implement, when you have to write markup and implement formatting it will be difficult to ensure coverage of details

Gregory: SVG as embedded content in HTML5: http://dev.w3.org/html5/spec/the-map-element.html#svg-0

Ric: in Arabic there is a complex set of shaping depending on which characters are adjacent, kind of like fancy ligatures. We should have domain experts involved. We 

have a customer who uses SVG for complex mathematical expressions, Hindawi, they are interested in Arabic support as well and may want to help

Brady: is shaping even something that needs to be in spec or is it just a rendering issue?

Brady: latin text may or may not need to be rotated, overflow, etc. there may need to be markup for some of this

Liza: Shaping of Arabic characters in EPUB works correctly, today, when rendered in a browser engine

Bill M: we originally said if page layout was important use PDF not EPUB, that may not be the right answer for the future given our need to support magazine and 

textbook use cases. We already have SVG in EPUB which helps.

Liza: (and directionality with Arabic is correct when the proper CSS is supplied)

Murata: please come to Sapporo Aug 3 & 4 if you are interested in CJK issues

Gregory: HTML5 on @bdo "The requirements on handling the bdo element for the bidi algorithm may be implemented indirectly through the style layer. For example, an 

HTML+CSS user agent should implement these requirements by implementing the CSS 'unicode-bidi' property."

Markus: could this be official F2F?

Murata: some K and Taiwan experts are not quite ready to join IDPF, but we could consider changing title of workshop

King: Chinese books are rowwise, L to R, so mainland may not have position on vertical, they may be more like European layout

Murata: Japan is quite stubborn about vertical layout. Taiwan is close. But not mainland China or Korea, as far as I know.

Ben Trafford: I think this discussion of fixed layout is very dangerous. The real power of a markup-enabled document is reflowability -- if you want print semantics, 

use PDF or TeX or whatever. If we open this door, it's Pandora's Box, as every typography nut in the publishing world will think, "Finally! I  reproduce exactly what 

I'm doing today on an ebook reader!"

Gregory: amen to BenTrafford

Bill M: I agree it's dangerous but we are tasked to support textbooks and magazines, and reflow is not *always* the paramount consideration, and we have already opened 

pandora's box by supporting SVG which is PDF page contents in XML form

Ben: Bill, you'll note that I strenously fought against SVG for -precisely- this reason. Also -- nowhere does the charter say that we have to -reproduce- textbooks and 

magazines, just that we have to support them. I'm happy to interpret that broad mandate as not requiring that we support every nuance of their fixed layout model.

Gregory: fixed form runs into problems with legibility (not just for visually impaired - also for those with little visual real estate) - as long as pagination is 

"retained" programmatically with a marker so content can be accessed "page by page as it appears in the print edition" it doesn't matter if reflow is performed

== Accessibility ==

George: I'm joined by Kenny Johar from Australia; slides on Wiki

Kenny Johar: Hi all.

Roger Sperberg: when you are reading a book with computer voice, does reading device make accomodation for contextual pronunciations?

George: next session, but most synthesizers will put in pause for comments, but prosody is important, but with some reading systems you couldn't tell when a paragraph 

ended

Dave Kramer: will HTML5 structural tagging be helpful for accessibility?

George: W3C have implemented ideas from DAISY, happily

Ben: Another interesting idea for semantic tagging of HTML-type content is in POSH -- http://microformats.org/wiki/posh

Brady: what are specific problems we should address vs. keeping accessibility in mind as we solve other problems?

Gregory: BenTrafford, i like the POSH checklist item 2 "Second, drop the use of TABLEs for purely presentational purposes, spacer GIFs, and presentational-html in 

general."

George: human narration, DAISY has gone there, so much content is graphical/spatial, e.g. flowcharts with boxes and arrows, that's challenging, alternative 

descriptions, multiple descriptions, links to description libraries, etc.

George: periodic table you may want to point out a standardized description vs. trying to "read out loud" it

Bill: Ben, yes but you lost that fight and more importantly SVG is now in every browser - we can't legislate away graphically/spatially laid out content

Bill: I believe we should instead focus on ensuring accessible fallbacks - better an SVG page with XHTML alternative than "opaque" binary PDF or a bitmap image of a 

page

Gregory: SVG also has a modicum of accessibility built-in (title and description) and work on SVG continues to SVG objects themselves more accessible by expresing 

relationships, etc.. going to be the same problem with CANVAS from HTML5

Bill: yes, SVG text is real text and can be indexed by search engines, scraped out, etc.

[BenTrafford] I agree that battle was lost; however, I don't think we should be enshrining fixed layout. Enabling it? Sure. But actively promoting it? No. Better to 

educate the magazine and textbook publishers on reflowability.

Bill: canvas is far far worse as there is no declarative representation that is built in, and everything is programmatic

Markus: TTS vocabularies and systems are geared for specialized domains like train tickets, so good synthesizers still fail

Markus: sometimes they crash or generate noise

Gregory: Canvas draft with accessibility built-in (note goal is access/use of interactive canvas not as fallback but as a means of enabling keyboard and eyes-free 

interaction with the CANVAS) for specifics on accessibility, search for the string <ZZ> http://lists.w3.org/Archives/Public/public-canvas-api/2010AprJun/att-

0054/2dcontext10-June-7.html

Bill: as you note that's a totally different kind of accessibility that doesn't enable TTS or fallback

Markus: SSML, speech synthesizer markup language, SSML 1.1 in last call and provides the semantics we need. consumer is speech synthesier not browser rendering engine. 

CSS3 has a speech module but as Ric said it is still in development, even worse it hasn't been touched since 2004. also using CSS-like approach from purist point of 

view would be good choice, but module doesn't seem to be "alive"

Gregory: SVG also needs the equivalent of "tabindex" - the Access Module intended to do this with the order attribute http://www.w3.org/MarkUp/2009/ED-xhtml-access-

20090423/ - document is being reproposed as "The Access Element: Enabling Generic Document Accessibility

Markus: this is one area we hope to propose in coming months

Gregory: http://www.w3.org/TR/css3-speech/

SteveK: could there be pinyin that's more general, like based on IPA pronunciation tag?

Gregory: currently there is support for CSS3 speech in Opera+Voice, emacspeak and FireVox

SteveK: I've run into problems with made up words with too few vowels, so they came to me for ideas on how to pronounce

RogerS: CSS3 speech, does it overlap or handle different things?

Markus: overlap, yes these are fundamentally solving the same problem

Gregory: http://www.w3.org/TR/css3-speech/#phonetic-props, http://www.w3.org/TR/css3-speech/#phonetic-alphabet. Marked as issue in CSS3-speech "ISSUE: we do not 

mention any other possible value for @phonetic-alphabet. SSML 1.0 defines "ipa" to be the only valid value - any other value should be added with the "x-" prefix. Do 

we want to follow this? Or do we allow some other values? SAMPA comes to my mind as a widely used ASCII alternative to IPA, but then: SAMPA is language dependent, and 

it might be better to have X-SAMPA"

Ben to Chair Group: I have a quick topic I'd like to raise in the open slot if nobody else has taken -- the idea of a subgroup to produce "best practices" for using 

ePub.

Bill M: Ben, I support a best practices effort although I wonder if it belongs as subgroup of 2.1WG or should be something separate

Ben: Bill - I agree. It could go either way, really -- just seems to make sense to bring it up to the WG because we have the relevant bodies present.

== Metadata ==

Bill K: not whether metadata but which; standards have way more than we want, and usage is inconsistent/incomplete. MARC, Dublin Core, PRISM, XMP etc. for images, I 

will focus on ONIX, developed for book selling (print books). We should pay attention to ONIX 3.0. I doubt it makes sense to adopt wholesale but there are very useful 

vocabularies and term lists in these standards that are widely used. EPUB is a supported type already in description record

Bill K: there is a wealth of useful data but we will have to be careful about what makes sense to incorporate into EPUB spec, best practices will be important which 

means we should collaborate with other organizations like DAISY, BISG, BIC, Editeur, NISO

Markus: to flip perspective a bit, what's the problem we're solving, is EPUB broken and if so how?

Bill K: I think it would be useful to provide mechanisms and guidelines for people to embed metadata in a method that would be widely recognized and ideally standards 

based. Extreme case, which in effect we have now, is there's a place for putting metadata but no standards for what's going to be there or what it means. So no I 

wouldn't say model is broken, but at minimum we need best practices, I was involved at earlier phase and people were excited about metadata but then people did a 180 

because it's too complicated, there may be a middle ground

Will Manis: there's elephant in the room if you start removing metadata from EPUB, what do you do about it?

Bill K: we're not talking about removing anything

Will: how would you bind outboard file with metadata to existing EPUB

Bill K: that's an essential part of this because majority of publisher's metadata will not belong in the EPUB file, it makes no sense to embed in file, I don't have a 

mechanism in mind but it should be addressed

Keith F: current mechanism *is* broken because it doesn't have an extensibility model to support new vocabularies. WillM is right because correlation between works is 

going to be important, also for other domains like annotations

Keith F: we should get good comments from Editeur et. al. about which pieces of ONIX 3 would be their top recommendations for best practices, because ONIX is serving a 

fundamentally different purpose but it's rich descriptive capability could be attractive to us

Bill K: crossref, focused on scholarly pubs, has crossmark spec to provide access about current information about the article (e.g. is this the latest version, where 

can I get updated version and in what forms, etc.). All that info is obviously external to the file, but this provides a mechanism to get to it

???: EPUB exists not in a vacuum, exercise has to look at metadata and anything converging around standards that everyone can transact in, to attract more people to it

DaveM Apple: metadata and pub often travel and are revised separately, including user annotations

DaveK: we need subtitles in EPUB

George: we can do that

Diane Kennedy: I'm representing IDEAlliance, representing 500 companies across digital media supply chain, primarily magazines and advertisers. Ads drive the world of 

mags.The emerging eReader channel has much interest, and desire for a foundation for standards to enable pubs to move into this channel, new bus models, pushing 

content to devices through subscriptions, dynamic display of content, linking to materials

Diane: rather than have one standard for books and another for serials, we'd be better to work jointly to a single specification. Peter just entered the room and may 

jump in to comment, these are issues that have come up in previous joint meetings. PRISM, XML metadata for pub/aggregator interchange of articles, has evolved to 

support content as well as metadata, similar to XHTML as used in EPUB. We have an activity for meeting use case of delivering mag & rich content to eReader channel, 

happy to be here today and hope we can coordinate within this next release of EPUB. Need corporateEntity as well as publisher, also productCode and IssueIdentifier, 

PRISM is built on Dublin Core and extends it for serials reqs. We extend Date for coverDate, coverDisplayDate, and issueDate. Fields will be reevaluated as part of our 

new work, some may go away; you can see that some of these fields are built on DC and shared w/ EPUB but we have numerous additional fields, many around related 

content. If article is about an event we may want to bundle content around that event and push to a channel

Diane: Peter is the chair. We hope we can find common ground so if metadata is transmitted through EPUB channel it can support it

George: NISO conf call about journal standard in medical field, NLM, is that a competing standard?

Diane: when it was in SGML, I was editor of ISO spec when XML transition was happening. We find 90% of journals publishing in RSS, they are using a combo of Dublin 

Core and PRISM metadata. Tony Hammond of Nature Pub Group is our bridge to journals

Bill M: does IDEAlliance represent experience/visual requirements of magazines, e.g. for IPads?

Peter: PRISM has to support editorial workflows starting with Woodwing and Indesign

Diane: advertisers are interested in links between editorial contents and ads, with new models emerging based on new devices, pubs are very dependent on ads for 

revenue for it's natural that we'll be looking at links, but our work has just begun

Andy G: you guys are in a parallel universe with NLM in STM community, I'm not sure what this means for IDPF

Diane: STM community has luxury of working from structured content, but PRISM is mostly done after the fact because in our world layout, esp layout with ads, is 

critical

Diane: we thought years ago wouldn't it be wonderful if we could create a mag article and have it in XML, but we will be examining the PRISM workflows, Time is 

probably going more directly to PRISM than anyone else but service bureaus have a more serial workflow right now

Diane: Overall, they are parallel worlds but in the end the problems are identical

Ben: Suppose we will have a standard extensibility mechanism, do we need to have PRISM built-in vs. one of many metadata types we can refer to

Diane: That's probably the route that has the least barriers, we are just very interested in having PRISM content displayed in eReaders under EPUB umbrella and not 

having battling specs that force choices, extension would be fine

Bill K: NISO is interested in exploring using EPUB packaging model because NLM lacks packaging

Diane: IDEAlliance and IDPF leadership had meetings and looked at where there's synergy. Packaging has been on our list but you already have it, it would be a win-win 

if we can just pick that up and just adopt it, there's no conflict at all

== Rich Media & Interactivity ==

Garth: rich content thoughts. EPUB is not good only for textual content, that's certainly not true of the spec, although it may be true of some Reading Systems. it's 

important not to accept that as fact, you can do documents with rich styling that ought to render nicely, on some RS they do, on some they don't but that's a bug. 

There is an extensibility mechanism but when you start using this you head off into RS dependent territory, we don't want to go back to 1992  when there were 17 

flavors of sort-of OEBPS. 

Garth: AAP is pressing us and I'm pressing maintenance group to get our ass in gear and make progress on conformance tests. We are moving this to Google Code and it's 

happening in the coming weeks, people in this WG should start working on these tests, it will be a step forward to resolving this "only good for text content" issue

Garth: demo - 

Garth: the text should reflow, we can wrestle with how important it is but the right thing should happen as you move to different device sizes. More attractive layouts 

should work although we are getting into some RS dependent issues, such as headers/footers and adapting number of columns. EPUB should also be capable of more complex 

layouts, RS should catch up, even vertical J and Hebrew

Ben:  Garth's comments bring up the question of certifying reading systems as compliant. That we have no such mechanism in place is a real black eye, in my opinion.

Garth: This is using the writing-mode and direction/block-progression, it's a perfectly reasonable thing to do in EPUB today. Yes, we can argue about how standardized 

the CSS for this is but if RS doesn't understand it it will just ignore it. As long as you have a fallback you can have a nested EPUB, with fallbacks to Flash and then 

SVG and then image - in theory this can work with  every reading system today. Active content, for example HTML5 and Flash alternatives can be in object tag, HTML5 can 

say hand off to browser vs. paginating EPUB renderer. Talking with AAP people, RS better render EPUB 2.01 correctly before we make things more difficult but we need 

interactivity, e.g. front  matter, end matter in otherwise paginated flows, room for extension. We should be aware of the bright shiny object that's just out of reach. 

Elements on iPad is an app, we won't get there with next EPUB, well  maybe we will but there are things that will fall into that "it's really an app" space, I don't 

think we can do apps in EPUB in this releas. I want to see us solve heading in this direction without forcing RS-specific markup, and without punishing less capable RS

Garth: HTML is still squirming, how do we take advantage of that? Islands may be a good solution. E Ink won't support video for a while and that's something we have to 

consider too, not punishing RS that aren't as capable

Bill M: but I'm all in favor of punishing RS that don't bother to support the EPUB spec! (esp. when we have conformance tests to make evaluations objective)

Gregory: HTML/XHTML Author's Guide (a.k.a. "the Polyglot Spec") http://dev.w3.org/html5/html-xhtml-author-guide/html-xhtml-authoring-guide-rendered.html - 

http://dev.w3.org/html5/html-xhtml-author-guide/

Ben: Bill - Agreed!

Garth: demo of Adobe Digital Editions with interactive content

Garth: it's bad that I just did the markup tuned to support 2 specific RS. This whole area will be one of the top of our list, a huge amount of discussion, I hope that 

by tomorrow we can start digging in

Ric: I totally agree w/ Garth we should stay within spirit of standard, esp. with fallbacks, but it scares me to have RS specific markup. How do we get away from this? 

Publishers are extremely excited about HappyPad and coolio things it can do. We need a way to author it, but the tools are really poor, hand coding is not suitable. 

Books should work acrossg platforms, not just on HappyPad. Users don't understand the concept of fallbacks, and most critically, books should not "break after a 

while". We should be leveraging known standards, but it's one thing to have a web page that works now, but you can't sell a book and tell the consumer "you'd better 

read it soon". HTML5/CSS3 are simply not standards - more than squirming: when properties change then content is broken, you can't update a book once you've sold it. 

Well you can but publishers bs will tell you how hard it is. Are publishers really willing to step up even though books will break over time and we're willing to 

accept it? OTOH does IDPF want to bless a spec that's really embodied by the implementation of Webkit?

???: would adobe support side by side, multiple versions coexisting?

Ben: to cripple ourselves from supporting these because they aren't finished seems like a lark

Ric: done or stable in HTML5 = nothing

Bill M: entprises are deploying apps based on what browsers support

Markus: ... dont believe its an obstacle that we cant get past

Ben: It's nothing we haven't gotten past before.

Ric: Bill mentioned 3 browsers, and that's simply a mish-mash. My bottom line is we need to be aware and make publishers aware that this is going to be a little bit of 

a mess possibly forever

King: would there be a need for certification program for RS? Without that logo/certification how can anyone tell. Right now everyone claims EPUB but what is meant is 

that they can decode it, maybe display something

Garth: that was a topic that we discussed at BOD yesterday, we have a new logo and BOD made a decision that it would NOT be used as a stamp of certification but more 

as mark for standard

Garth: there's a possibility of growing it over time - e.g. checkbox on logo to signify "approved" growing out of tests, RS will pass some %, score will differ by RS, 

whether this becomes a formal certification vs. self-reporting is TBD

Andrew Gilbert: Has there ever been consideration for versioning / link updating / push capability to deal with legacy content (realizing it raises whole issue on 

distribution / aggregation side)

Ben: Nope, not in my experience.

Ric: Adobe licenses SDK for rendering, we require certification, that takes so much effort you can't imagine. Think twice before IDPF takes on such a program

Marisa: audio/text synchronization

[gregory_away] even though i'm marked as away, i'm still trying to get the IRC problem resolved

Marisa: demo of synched text & audio ("karaoke mode")

Marisa: we have mainstream readers as well as traditional DAISY users, esp for HappyPhone

Marisa: handsfree is useful to switch from reading to listening

Marisa: structured text + human-narrated audio

Marisa: we could treat SMIL as overlay, that would tell corresponding points on top of the document, SMIL could also supplement islands of content like SVG or Math

Marisa: link in wiki presentation, with potential mechanism

George: we are on a convergence plan, we are revising the DAISY st

andard

George: one of the four profiles is an audio book only

George: the second profile is classic DAISY which is text/audio/synch

George: the third profile is text only we want to punt and point to EPUB

George: the fourth profile we've been contemplating which is what we call pro, full text, audio, plus video with captionining & audio captioning, interactivity, forms

George: we're not sure where EPUB will land with respect to that

QUIT: [MURATA] [2010/06/15 09:32:50]

Markus: we want to dissolve the difference, our only concern is to maintain accessibility, if EPUB gets there the pro profile George described will have little raison 

d'etre, we will just point to EPUB

KeithF: you spoke of subset of SMIL, is it well described/understood/implemented?

Marisa: SMIL is profilable and split into modules, there are some rules about minimum subset, the subset that we would propose for EPUB, it would depend on what we 

want it to do

Markus: King's presentation also showed audio & text synch, did you look at DAISY/SMIL?

King: textbook vendors are using Adobe/Flash, "hard wired". Not sure which portion will be applicable, but we want to learn more about what DAISY is doing

Neil: I've heard from textbook publishers that SMIL gets in the way, it produces larger file, and only necessary if human narration, and in a world where TTS is the 

future do we really need it for EPUB?

Marisa: if you are going to use TTS engine you don't need SMIL and I agree it gets in the way. But if you have human or prerecorded TTS then you need it

Marisa: if you start to look at other ways to do what SMIL does you end up back at SMIL in my experience

Markus: for many languages synthesizer quality is very very low

Markus: imagine Steven King's novel read by him synched to the visual text

Markus: a good thing or very scary

Bill M: I am hoping convergence between DAISY and EPUB 2.1 can happen, in part to help EPUB get onto an ISO standards path

== Semantics ==

neil: I will lull you to sleep after lunch with math. most readers don't handle switch statement properly so you can't even fall back to MathML. mathml vs. svg, mathml 

offers reflow, accessibility, interoperability, & search. mathjax, mathml in JavaScript coming very soon

Brady: line breaking expectations?

Neil: plug-in model doesn't allow for that in IE, probably not JavaScript either

Brady: what about in EPUB?

Neil: I wouldn't expect it to be required, since it's difficult

Markus: this seems like a no-brainer in the context of textbook requirements

Neil: we are in a 3 week last call period then we become proposed recommendation

Markus: are there things in MathML 3 that we should definitely be interested in?

Neil: I'm very  much in favor of don't use switch, there is a fallback mechanism, as was done with DAISY 3 years ago, you can specify an image and alt text for the tag 

itself

Markus: there is also the annotation HTML element

Neil: there's 2 sides to MathML, presentation and content, the latter describes the meaning in a deeper sense, i.e. here's addition

JOINED: [EPub] [2010/06/15 10:50:17]

PART: [EPub] [2010/06/15 10:50:51]

WillM: are there open source versions of the components that implement MathML, that would enable someone writing a reader to do the layout itself

JOINED: [Harlequin] [2010/06/15 10:51:48]

Neil: firefox and webkit, but tied to their codebases of course, also some standalone implementations

Ben: fallback mechanism is present in DAISY, but if we already have existing fallback mechanism in EPUB and MathML can work with it, why promote it for a limited 

subset of documents

Neil: currently fallback is inaccessible, and if you don't make something mandatory it won't be used

[AndrewGilbert] OSS MathML to SVG http://www.grigoriev.ru/svgmath/ (caveat emptor)

[LizaDaly] JEuclid can convert from MathML to SVG or images http://jeuclid.sourceforge.net/

Gregory: better to have actual MathML rendered than transformed into a picture of a mathematical expression

Bill M: My concern is where do we draw the line with specialized vocabularies, after all there is ChemML and many other such.
. I would suggest a better solution than special-casing such vocabularies one at a time we find a path to use the existing switch/fallback mechanism together with 

JavaScript extensbility that can address MathML plus many other requirements

Ben: Bill - I share your concern, and address it in the extensibility talk.

Gregory: specialized markup languages reference: http://www.linuxfoundation.org/collaborate/workgroups/accessibility/handlers/references/smls

Liza: In terms of requests I've seen from the industry, I'm asked frequently about MathML and never about other markup languages. Other experiences may differ of 

course.

Gregory: MathML is essential for teaching students REAL mathematical skills

Ben:  Liza - I've gotten requests for everything from ChemML to ATA-i2200. Everybody thinks we ought to include their vertical industry specific language of choice.

Jeff A: need to mark up "head words"

Liza: I don't see MathML as industry-specific in any way.

Ben: Liza - What % of published material contain mathematical formulae? 5%, maybe? I'd call that industry-specific. I recognize that it's a broad need, but again, once 

we open the door to making given document types as intrinsic to the spec, where do we stop?

Gregory: BenTrafford: the need is there for text books, advanced mathematical courses, etc. all can best be satisfied with MathML

Andrew G: Ben - but can you really say "industry specific" unless you cast a broad brush. STM journal content, text, academic publications, research papers, all across 

wide domains...

Gregory: think accessible text books - that is a significant market share

Paul Norton: You can also look at it from the other side... If current standard doesn't really work for MathML, what other vocabularies are we blocking from entry?

Bill M: I think the question is not whether MathML is important but whether implementing it merits being a baseline requirement to be a conforming Reading System

JOINED: [keith_fahlgren] [2010/06/15 11:01:56]

Bill M: I would say if we can make the spec extensible enough so that we don't have to say "yes it's required" we will be better off, esp since Webkit doesn't support 

MathML natively yet

Ben: Bill - Yes, precisely the same point I'm making.

Gregory: how else to make a mathematical text accessible other than using MathML - pictures of math (even SVG) won't help a significant share of the accessible text 

book market

Ben: gregory - Nobody is saying, "outlaw MathML". We're saying "make it a recognized extension.". But not something -all- reading systems need to handle natively.

Gregory: BenTrafford, thanks for clarification

Andrew G: Ben - but then the incentive for some is to push apps to happy pad using webkit...

Gregory: MathML has applications in a popular science books, too - not just for the classroom

Ben: MathML has huge applications - I use it regularly. No one is denying that. What is being questioned is whether or not we need to demand that a compliant reading 

system handle MathML. The more things we are required to tack onto the spec, the higher we're setting the bar for implementations. And people have barely implemented 

what we have -now-.

Bill M: why do you need markup to tie back 100 forms of "estar"

Jeff: maybe for that verb you don't but it is generally done to disambiguate

Ben: why special markup for dictionaries?

Jeff: similar to neil's point wrt MathML, a dictionary is a very basic fundamental type of book and warrants being in the spec, although it could be dealt with as an 

extension

Ben: I think we need to step away from this idea of "well, if it's not intrinsic, nobody will do it." If the market need is present, the implementation will follow.

Keith: I would love to have so that even basic EPUB reading systems could get some of the benefits without necessarily having to get too deep into it

Markus: Keith, you looked at TEI?

Jon: there is dicml: http://en.wikipedia.org/wiki/DicML (unfortunate name for the markup language, though :( )

Liza: Master bug tracking MathML support in WebKit: https://bugs.webkit.org/show_bug.cgi?id=3251
Jon: And XDXF: http://en.wikipedia.org/wiki/XDXF

Gregory: FYI there is an example of a dictionary definition in the HTML5 draft's secton on DD: http://dev.w3.org/html5/spec/grouping-content.html#the-dd-element

Markus: rational for supporting XML with DAISY was that web was evolving to XML vocabularies as first-class, but in practice this hasn't happened

Markus: DAISY is undergoing a revision, by intent to be able to share and coordinate and harmonize, we are separating authoring & distribution distinctly

Keith: TEI, DicML, and XDXF seem to have impedance problems for low-barrier-to-entry markup for the inclusion of dictionary semantics & markup into ePub

Markus: TEI etc. can be part of authoring but for distribution we want to be compatible with EPUB

Ben: Unless, of course, we can support any or all of them as extensions. :)

Markus: for certain types of content there is a strong argument for a special vocabulary but DTBook and XHTML are very close, so we want to utilize XHTML and find a 

way to harmonize

Jon: Since CSS is the "typesetting language" for web browsers and for ePub, ,then any XML vocabulary that is presentable using CSS is "easily" supportable in ePub. But 

for vocabularies that have elements requiring properties outside of CSS to render, that makes things more problematic. For example, overall TEI is CSS-compatible, but 

there are a couple elements in TEI that stretch the ability of CSS to handle, such as notes.

Ben: Jon -- you can read the approach I'm suggesting here -- http://www.prodigal.ca/IDPF/IDPFf2fPaper.html

Markus: EPUBs that are just a single CANVAS or only paragraphs that are styled to look like headings are unacceptable. we want to propose the notion that we have a 

strict profile of XHTML that has content model restrictions that pertain to properly marked up textbooks. there needs to be metadata to identify notes, note 

references, marginalia, non-structurally-significant headings, image groups, etc.

Jon: ok, thanks! I was simply presenting a general principle as I understand it.

Liza: Bill, Should this be a restricted subset or as part of a best practices document?

Bill M: why have two profiles?

Markus: it helps in authoring. someone like a University may select the stricter schema for content they accept
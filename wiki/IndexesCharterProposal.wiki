#summary Charter Proposal, Indexes

= Charter Proposal - Indexes =
*_UNDER CONSTRUCTION_*

<wiki:toc max_depth="4" />

== Status of this proposal ==
This is a draft charter proposal, not yet submitted to the IDPF membership for ratification.



== Need for this proposal ==
Indexes are a navigational and supplemental information tool that users will expect to have available in the EPUB3 ecosystem. Publishers of EPUB3 content wish to make this data available to users, to allow them to explore book contents beyond what search results reveal. Readers use indexes in a variety of ways: to quickly locate discussions in content, to discover relevant content that is discussed with differing synonyms, to discover new terminology for concepts, and to see details of topics covered in an eBook. Indexes convey a sense of the depth of topic coverage in an eBook, break down large concepts into important subcategories, and allow exploration of content through granular and user-friendly access points. Indexes provide a human touch, a conversation with the reader.

Index information and metadata can be used by devices to provide navigation and supplemental search details to the reader. Search can be supplemented and fine-tuned by reading index metadata to provide better results. Index metadata can provide new views into the semantic underpinnings of an eBook.

This proposal describes the scope, required functionality, and timeline to deliver a standard for producing ePUB3 publications that meet the use cases included in this proposal



== Scope ==
=== In-scope (Deliverables) ===
The scope of this project is to define a declarative mechanism for the representation of indexes in EPUB Publications. As further detailed in Use Cases and Functional Requirements below, the delivered mechanism shall have the following top-level functional properties: 

 * Allow users to read or browse an index in full chapter-like format
 * Allow users to quickly access index information in a search context
 * Allow users to see semantic metadata associated with a range of text



=== Out of Scope ===
Indexes are created by a variety of tools and built-in modules in page layout and XML content management software (e.g., InDesign, Microsoft Word, Cindex, DocBook, etc.). Details of how to implement indexing in those tools are out of scope. 

Index presentation format in chapter form (e.g., indenting, spacing, etc.) can vary greatly, depending on the writer and publisher. Suggested presentation formats are out of scope.



== Timeline and Participation ==

Project participation is open to IDPF members and invited experts. _(Note that invited expert status needs to be renewed for each IDPF project.)_

This project is intended to be run concurrently with the project on [DictionariesCharterProposal dictionaries and glossaries], and so shares the following timeline with that project:

(*N.B.* dates in italics are tentative)
|| Charter Proposal Submitted to Board || mid-December-2011 ||
|| First WG Draft || _late January 2012_ ||
|| Second WG Draft ||  _late February 2012_ ||
|| Proposed Specification || _31-Mar-2012_ ||
|| Recommended Specification || _30-Apr-2012_ ||


== Working Group Leads ==
Suggested Leads of this working group are:
 * David Ream (Co-Chair)
 * Michele Combs (Co-Chair)
 * Jan Wright (Co-chair)


== Use Cases ==
_ Actors: publishers, users _
 # Chapter-like:
   * User navigates to chapter-like index to browse topics and find information.
   * User expands or collapses main entries/subentries.
   * User clicks index hyperlinks to navigate to the book's content.
 # Pop-up:
   * User opens index from book's content with text selected, triggering access to pop-up index displaying first matching main heading
   * User opens index from book's content with nothing selected, displaying top of pop-up index or last-used position in index. 
   * User browses for terms or enters search text in pop-up index display.
   * User expands or collapses main entries/subentries.
   * User chooses hyperlink in pop-up index display and returns to book content.
 # Semantic browsing
   * User selects a range of text and triggers pop-up display of all in-context index entries for the range.
   * User selects in-context index entry, and triggers access to selected entry in pop-up index.
<font color="green">(MC: We haven't mentioned publishers, do we need to?)</font><font color="red">(JW: I think not, if we explain what the publication must contain. Then it is up to the publishers to make it contain those elements)</font>


_ System: reading system, content_
 * A publication contains a chapter-like index, and declares this resource via package metadata.
 * A publication contains an A-Z index-navigation data, consisting of hyperlinks to lettered group breaks, available for use in a floating or persistent navigation feature for the chapter-like index.
 * A publication contains a pop-up index file, and declares this resource via package metadata.
 * A pop-up index file contains anchor points for in-context index entry display, and declares this resource via package metadata
<font color="green">(MC: I'm not sure we want/need to say these last two; the pop-up index and the chapter index could just be the same file displayed two different ways.  In fact I think it will have to be, since the pop-up display will be dynamic, reflecting whatever the user has selected or searched on)</font>

_Publication Requirements_
Chapter-like index
 * A publication contains one or more chapter-like indexes at the end of the book for browsing, which are accessible (linked to) from the table of contents.
 * A publication containing chapter-like indexes declares these resources via package metadata.
 * A publication’s content files contain anchor points for the index to use in hyperlinks.
 * Head or editorial notes, if existing, are marked as such and are presented at the beginning of the chapter-like index. 
 * Special formatting of the index’s content (italics, bold, sub-, super-script, fonts, special characters) are preserved in the index’s content. 
 * Special symbols used in the index text to annotate entries or locators (asterisks, dagger symbols, ff, n, nn ), if existing, are marked as such and hyperlinked.
 * A publication contains a symbols file containing definitions or explanations of each symbol, with anchor points for hyperlink access or scripting.
 * Proper text alignment (ragging, indentation, and hanging indents) is maintained.
 * Running footer information is marked as such, and displayed in proper position if present.
 * Unique characters and numbers that act as group breaks for letter sections in the index are marked as such, and contain anchors for the set of A to Z navigational hyperlinks.
 * Index entries contain anchors and act as targets for the navigational systems within the index; for instance, cross references will have targets, as will the group breaks for letter sections.
 * Anchor points for the beginnings and ends of subject converage in text are marked and used in the index.
 * Indexes in publications that comprise part of a series or collection will contain a file with links to other anchor points in other volumes.

== Index Functional Support ==

_Implied/assumed (existing functionality in EPUB readers that indexes will use)_
 * EPUB reader will properly display text encoded with special formatting, i.e. bold, italic, subscript, superscript.
 * EPUB reader will properly display text encoded as a link, i.e. as clickable text that takes user to target.
 


_Chapter-like index_
 * Reading system displays chapter-like index as normal pages.
 * Reading system includes buttons or menu options to access the either the chapter-like index or the pop-up directly from the text, without having to visit the table of contents.
 * Reading system allows the reader to select collapsed or expanded views of the index (main headings only, main and subheadings, etc.). 
 * Reading systems allows highlighting and range highlighting.
 * Reading system determines how targeted text appears on the screen after its hyperlink has been clicked (top of screen, middle of screen, highlighted term, highlighted range of text, etc.)
 * Reading system displays a floating or persistent set of A to Z navigational hyperlinks in the chapter-like index to allow navigation to other sections of the index. 
 * Reading system displays head notes or editorial notes, if existing, as running headers or footers on each screen view of the chapter-like index. 
 * Reading system displays running footer information on each screen view of the chapter-like index. 
 * Reading system displays explanations for special symbol used in the chapter-like index’s annotations in a pop-up.
<font color="red">(JW: note: I've taken out the bread crumb feature in this part, because I think we are presenting the index with page-like layout, and so it is easy to track where you are unless you have the reader set to really big fonts. Seems like overkill to me.)</font>


_Pop-up index_
 * EPUB reader must be able to...

_Semantic browsing using index_
 * EPUB reader must be able to uniquely identify multiple index anchors in a selected section of text (e.g., a paragraph).
 * EPUB reader must be able to extend that identification to include index anchors whose range encompasses the selected text (e.g. a range that begins prior to the selected text and ends after the selected text)
 * EPUB reader must be able to locate the main headings in the index associated with each of those anchors.
 * EPUB reader must be able to display those main headings to the user.
 * EPUB reader must be able to render each main heading as a live link to the heading's location in the chapter-like index.



== References ==

 * Initial proposal to the IDPF: http://dl.dropbox.com/u/2248375/IDPF%20Index%20functionality%20in%20ePub.pdf
 * NISO Guidelines for Indexes and Related Information Retrieval Devices: http://www.niso.org/publications/tr/tr02.pdf
 * ISO Guidelines for the content, organization and presentation of indexes: http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=5446


== Definitions ==

<dt id="index">Anchor points</dt>
<dt id="index">A-Z index navigation data</dt>
<dt id="index">Browsing</dt>
<dt id="index">Chapter-like index</dt>
<dt id="index">Cross-references</dt>
<dt id="index">Editorial notes</dt>
<dt id="index">Head notes</dt>
<dt id="index">In-context index entries</dt>
<dt id="index">Index</dt><dd>alphabetical list of names, subjects, etc. that appear in a document, with associated _locators_ showing the places where they occur</dd>
<dt id="index">Level of indexing</dt>
<dt id="index">Locators</dt>
<dt id="index">Main heading</dt>
<dt id="index">Pop-up index</dt>
<dt id="index">Ranges</dt>
<dt id="index">Scope notes</dt>
<dt id="index">Searching</dt>
<dt id="index">Second-level heading</dt>
<dt id="index">See also references</dt>
<dt id="index">See references</dt>
<dt id="index">Snippets</dt>
<dt id="index">Sort order</dt>
<dt id="index">Stemming</dt>
<dt id="index">Targets _are these the same as anchors? Michele_ Jan - yes</dt>
<dt id="index">Third-level heading</dt>

== User Interactions Scenarios ==
Potential User Interactions with EPUB3 Indexes 

<font color="green">(MC: I'm confused by this -- I thought all of this information had been transferred into the appropriate sections above and so was not needed?  It seems redundant to me to repeat it here.  To what end?</font>

<font color="red">JCW: Michele, perhaps you know the syntax to get second and third level indents into these bullet lists? I haven't found the syntax yet. Decided that without all the functional stuff, we could just add this in as a section.</font><font color="green">Multilevel lists are done using indents; just indent further to create a subordinate list, like so:

 * List
    * 2d list
    * 2d list
 * List</font>

EPUB 3.0 should allow for three types of index functionality to most effectively utilize the metadata provided by an index: 
 * a chapter-like index that can be paged through and browsed as normal content, with links back into the text
 * pop-up index functionality, displayed in a separate window that is scriptable and allows reader devices to display portions of the index in a floating or docked window, combined with search and glossary results, depending on the eReader’s capabilities 
 * in-context index-entry viewing functionality, displayed when the reader highlights a range of text and chooses to view the index entries associated with the range. A separate scriptable pop-up window appears, allowing readers to view and choose to explore index entries further in the pop-up window.


1. Chapter-like index

 * User opens an eBook. 
 * User wishes to find a topic
 * User navigates to chapter-like index(es) using a menu item or screen button. 
 *  User selects character(s) from a  set of A to Z navigational hyperlinks, and is taken to the target letter section’s anchor within the chapter-like index. The set of A to Z navigational hyperlinks can be set as always available to the reader on the margins of the screen, allowing instant navigation to other areas of the index.
 * User searches for terms or concepts within the chapter-like index, or browses and reads index. 
 * --User decides to collapse or expand subheadings for chapter-like index display (main headings only, mains and subheads only, all or a variation).
 * User finds entry in chapter-like index.
 *  --User selects hyperlinked heading or locator and is taken to target's anchor in text; or
 *  --User selects a hyperlinked cross reference and is taken to the target’s anchor within the same or another chapter-like index; in this case user returns to "user finds entry..."; or
 *  --User selects special symbol annotation they do not understand (n, nn, asterisks, dagger symbols, or other specialized typography used to denote figures, tables or special book content), and sees a pop-up explanation; or
 *  --User abandons index search
 * User returns to reading mode until the need for a chapter-like index is repeated. 
 * When/if user returns to the chapter-like index, the last view of the index is displayed with the cursor set to the previously-selected link.
 * Process begins anew. 	

2. Pop-up index functionality

 * User opens an eBook. 
 * User navigates to a word or phrase, highlights it,  and chooses the option to go to the pop-up index
 * eReader displays the pop-up index as main entries and subentries, each with links to one or more anchor points in the text window. The level of depth (number of lines and levels shown) shown in the pop-up index is an eReader-set default, and can be changed in settings.
 *  --Highlighted term or phrase is pre-entered in Search box, and can be modified by user in Search box. Reader can escape and go back to publication content at any time, or
 *  --Typing in search term triggers auto-complete using stemming list.
 *  --If typed terminology does not exist in index, the user is informed, and has options to choose other functions.
 *  --User locates relevant entry in pop-up index.
 *  -- --User selects entry term, and pop-up window displays snippets of text pulled from the entry’s locators’ anchor points. Selecting a snippet takes user to its anchor in the publication content; or
 *  -- --User selects entry locator (in print this would be a page number), and is taken to the target’s anchor in the text window; or
 *  -- --User selects a hyperlinked cross reference and is taken to the target’s anchor within the same pop-up index
 *  --User returns to reading mode until the need for a context-sensitive pop-up index is repeated. 


3. In-context index entry display functionality

 * User opens an eBook.
 * User highlights a phrase, paragraph or other contiguous range of publication content
 * User selects in-context display of all main entries and subentries associated with the highlighted publication content in pop-up window. 
 *  --User navigates to and selects an entry, which triggers eReader to offer option of navigating to publication content, to chapter-like index if one exists, or to pop-up index.
 * -- --User chooses the hyperlinked heading or locator and is taken to the associated publication content, or 
 *  -- --User chooses to go to chapter-like index, and is positioned at the entry selected, or
 * -- --User chooses to go to pop-up index, and is positioned at the entry selected.
 *  --User can escape from functionality at any time.
 * User returns to reading.
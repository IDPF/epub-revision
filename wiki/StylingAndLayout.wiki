#summary Styling and Layout Sub-group Page

= Styling and Layout Sub-group Page =

<wiki:toc max_depth="3" />

== Mission ==

Identify styling and layout limitations in the epub spec that can improved or extended using existing or new technologies. We will make specific recommendations as to what styling and layout should be added and how that should be done. We will pay particular attention to current industry needs and weigh any changes against difficulty in use or implementation. This corresponds to [http://www.idpf.org/idpf_groups/IDPF-EPUB-WG-Charter-4-27-2010.html item 5 in our charter].

== Sub-group participation ==

There is no required technical requirements for sub-group members (i.e. you don't have to be a CSS wiz), though conversation on the group will, at times, become quite technical. I still encourage participation by members who have a high-level knowledge of styling and layout issues even if they will not be able to offer specific solutions.

 * Brady Duga; eBook Technologies, Inc. (co-coordinator)
 
 * Peter Sorotokin; Adobe
 * Ric Wright; Adobe
 * Eric Freese; Aptara
 * Garth Conboy; eBook Technologies, Inc.
 * Steve Kotrch; Simon & Schuster
 * Bill McCoy; WebPaper
 * Adam Witwer; O'Reilly Media
 * Chelsea Valentine; LibreDigital
 * Dave Gunn; RNIB Centre for Accessible Information 
 * John Prabhu; HOV Services, Inc.
 * Liza Daly; Threepress Consulting Inc.
 * George Kerscher; DAISY Consortium.
 * MURATA Makoto; JEPA
 * Roger Webster; Barnes & Noble
 * Karen Broome; Sony Electronics
 * Alexis Wiles; OverDrive
 * Eric Muller; Adobe
 * Soo Choi, HarperCollins Publishers
 * Elliott Beard, HarperCollins Publishers
 * Andrew Gilbert, Dartmouth Journal Services
 * Hadrien Gardeur, Feedbooks
 * Beno√Æt Larroque, Feedbooks
 * Eric Gold, Digital Divide Data (DDD)
 * Kyoji Tahara, Toppan Printing
 * Shu Tanabe, Toppan Printing
 * Tom Hadfield, CourseSmart, LLC

== Requirements ==

Note: !RichLayout.pdf is uploaded to the "Downloads" section to illustrate some of these

=== 1 Multiple Display Surfaces ===

==== SNL_R1.1 Selection of Styles for Various Displays Properties ====
 
Rationale: Different display surfaces have different optimal styling. 

Examples/use cases:

  # Justified text may look good for a large display, but smaller displays may need to switch to a ragged edge to avoid large spaces or repetive hyphenation.
  # When displaying a full-page image (say a cover), content creators may want to specifically design different looks for landscape and portrait orientations. 
  # Default text sizes on small displays may want to be smaller than large devices to allow for reasonable amounts of text displayed at any one time.
  # Font sizes may want to take into account PPI differences (very small fonts may be inappropriate on low PPI devices).
  # Different media may be provided based on the capabilities of different devices. For instance, displays with poor refresh rates may want to use a static image in place of a video.

*Requirement: Ability to choose different rule sets based on display properties (size, width/height ratio, ppi, etc). [Note: user preferences moved to SNL_R1.5]*

Note: this is related to requirement RGLS_MM_06 on [EGLS_requirement_list]

Note: related to conditional rendering "future consideration" from EPUB 2.0.1 (http://www.daisy.org/epub/issues/conditional-rendering-reading-systems)

==== SNL_R1.2 Property value calculation based on environment ====

_Rationale: screen real estate needs to be partitioned differently for different displays properties and user preferences_

*Requirement: ability to do simple calculations based on the environment to express things like "half of a viewport plus 10 pixels" or "one and a half of a column width".* 

==== SNL_R1.3 Image/content selection ====

_Rationale: images need to be scaled, cropped, and, in some cases, even selected differently for different display surfaces_

*Requirement: ability to select images (or other content) based on the display environment*

Note: Related to image scaling "future consideration" from EPUB 2.0.1 (http://www.daisy.org/epub/issues/proportional-image-scaling-problem-paged-environment)

==== SNL_R1.4 Specific sized renditions ====

Rationale: in addition to a standard reflowable EPUB contained within an OCF file, it would also be possible to include additional OPS/OPF renditions which are pre-formatted (paginated).  We would standardize the metadata describing the characteristics of the formatted content for each EPUB so that reading systems would have an easy way to identify which one was best for them.

*Requirement: in addition to a standard reflowable EPUB contained within an OCF file, it should also be possible to include additional OPS/OPF renditions which are pre-formatted (paginated).*

Examples/use cases:

- A publisher may want to deliver a rendition optimized for a particular device (screen size, color capabilities, resolution, etc.) 

- A publisher may have content that is already pre-paginated, for example from digitized or print-production workflows, and the reflowable text created from it may not be fully accurate

- A publisher may have formatted content that has an information and/or artistic design tied to a particular paginated layout, such that even on devices that may not match the page size, it may be preferable in some circumstances to display that formatted content rather than render the reflowable text. Examples: O'Reilly "Head First" series,  Dr. Seuss "Cat in the Hat"..

Note: overlapping requirement with the metadata sub-group for target device specification metadata.

Note: should also allow specification of portrait versus landscape renditions of a publication.

Note: related to identification of alternate renditions "future consideration" from EPUB 2.0.1 (http://www.daisy.org/epub/issues/identification-alternate-renditions)

==== SNL_R1.5 Selection of Styles for Various User Settings ====
 
Rationale: Optimal content display may change based on user preferences.

Examples/use cases:

  # Many reading systems allow for font-size and even font family changes. Content may want to adapt itself to account for such changes. For instance, the margin of paragraphs may need to be altered.
  # Content may want to adapt itself if a Reading System provides a night mode. *[Specifics?]*
  # A Reading System may enable switches to default text flow. So, a Japanese user may be able to choose between horizontal and vertical text directions based on personal preference. Content may want to use different rendering in this case. *[Specific examples? Anything that can't be done using generic CSS?]*
  
*Requirement: Add ability to choose styles based on user preferences.*

Note: This is related to SNL_R1.1, but accounts for user preferences instead of display properties. 

=== 2 Page-level Layout ===

==== SNL_R2.1 Multi-region flow ====

_Rationale: when a unit of presentation is a "page" or a screen (not an only, but primary use case for ebooks), and when screen size is sufficiently large (e.g. a larger hand-held device or a laptop/PC), professionally layed-out content is typically organized in multiple columns with headers, footers, sidebars, pull quotes and other similar layout elements, collectively called "regions"_

*Requirement: ability to partition screen real estate into regions and ability to (a) flow the primary content from one region to the next; (b) push content to occupy a secondary region; (c) move secondary content to a different page if no space for it can be found on a current page without breaking the primary flow; (d) force other content to flow around a region*

==== SNL_R2.2 Fixed (repeatable) content ====

_Rationale: current header/footer support is too limiting_

*Requirement: ability to control positioning of repeatable content on the page*

==== SNL_R2.3 Page elements alignment ====

_Rationale: professionally-done publications pay great attention to lining up various elements of a page/screen to have maximal impact on a reader_

*Requirement: align various elements on a page/screen, such as (a) make sure that body text lines are aligned across columns even when headings, decorations or images are present; (b) align elements in different regions by precisely placing the regions on a page*

==== SNL_R2.4 Region-based styling ====

_Rationale: content sometimes needs to be styled slightly differently when it flows from one region to the next. This is similar to first line or first character styles, but for regions_

*Requirement: assign region-specific styling rules which affect content which flows into those regions*

=== 3 Miscellaneous ===

==== SNL_R3.1 Improved column support ====

_Rationale: Current column support in epub does not provide enough control over specific properties (e.g. column size)_

*Requirement: Ability to specify number of columns, width of columns, gaps between columns and rules in those gaps. Ability to float boxes across columns and indicate if column balancing should be employed are both desirable features*

==== SNL_R3.2 Declarative ====

_Rationale: to make sure that document can be analyzed for search, navigation, accressibility, etc. and so that a viewer for it can be produced for all popular platforms, layout should be described in declarative terms_

*Requirement: Layout should be described without resorting to running embedded imperative code which is impossibe to analyze and not possible to run on all devices*

==== SNL_R3.3 Hyphenation ====

_Rationale: hyphenation is almost always used in printed books._

*Requirement: minimal hyphenation control; including hyphenation dictionaries with the content (similar to fonts)*

==== SNL_R3.4 text-transform ====

_Rationale: text case transformation is a useful feature_

*Requirement: Add "text-transform" CSS property (http://www.daisy.org/epub/issues/add-text-transform-css) *

==== SNL_R3.5 CSS2 quotes ====

_Rationale: ability to nesting properties of quotes string display is a useful feature_

*Add support for CSS2 "quotes" property (http://www.daisy.org/epub/issues/consider-supporting-css2-quotes-property and http://www.w3.org/TR/CSS2/generate.html#quotes) *

==== SNL_R3.6 Poetry alignment =====

_Rationale: When typesetting poetry, it is normal to have lines left-aligned. If a line doesn't fit the page (due to restricted width), it is broken at a convenient place and the second part is right-aligned, and often with a mark (like an opening square bracket) before it. This is a rather specific need and it's not a supported property in CSS, so if accepted it would be an extension for EPUB._

*Add support for "too long line" poetry alignment styling  (http://www.daisy.org/epub/issues/special-alignment-option-poetry) *
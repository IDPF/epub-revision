#summary Discussion of resolutions to issues related to scripting

_ Note: this page is a drafty discussion area, nothing stated herein are agreed resolutions_

== issues ==
Here are the issues that have surfaced so far with regards to scripting in EPUB:

*[A]* Unrestricted scripting potentially impacts dynamic pagination negatively

*[B]* Not all reading systems support scripting, and nor should we require them to in 3.0

*[C]* Scripting is potentially harmful for accessibility

*[D]* We want to maximize cross-device content predictability (see Design Guidelines): author content once, consume everywhere, with a predictable user experience.

== solutions ==
=== [A] ===

TBD - final definition of "chapter-level scripting" and its functional restrictions

=== [B]  ===
By emphasizing and recommending the use of scripting for the purposes of progressive enhancement, we say that an EPUB _should_ retain its fundamental informational integrity even when consumed in a reading system with no scripting support.

_ Note: it seems agreed to not require explicit content alternatives/fallbacks for scripted content that is not of a progressive enhancement nature (such as for example HTML's noscript element), although such mechanisms would remain allowed. _

_Comment (MG): this is still a serious impediment to issue [D] above. Is it completely unthinkable to require reading systems to support at least some level of scripting?_

_(See also [http://www.idpf.org/doc_library/epub/OPS_2.0.1_draft.htm#Section2.3.7 EPUB 2.01 prose on script and noscript])_

=== [C] === 
This is a general problem inherited from the web; we do not plan to introduce any special remedial features of our own here, but instead rely on solutions from the web space (referencing WCAG guidelines, supporting ARIA markup). See also the solution for [B] above.



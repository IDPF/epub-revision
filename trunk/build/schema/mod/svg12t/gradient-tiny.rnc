default namespace = "http://www.w3.org/2000/svg"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace svg = "http://www.w3.org/2005/02/svg-annotations"
namespace xlink = "http://www.w3.org/1999/xlink"

# ==============================================================
#  SVG12-RNG | Gradients
# ==============================================================
[ xml:lang = "en" ]
grammar {
  svg.Properties.attr &=
    [ svg:animatable = "true" svg:inheritable = "explicit" ]
    attribute stop-color { "inherit" | SVGColor.datatype }?,
    [ svg:animatable = "true" svg:inheritable = "explicit" ]
    attribute stop-opacity { "inherit" | Number.datatype }?
  svg.GCommon.group |= linearGradient | radialGradient
  # ... *Gradient ..............................................
  [ xml:id = "gradient.cm" ]
  div {
    svg.GradientCommon.attr &=
      [ svg:animatable = "true" svg:inheritable = "false" ]
      attribute gradientUnits {
        "userSpaceOnUse" | "objectBoundingBox"
      }?
    GradientCommon.CM =
      (svg.Desc.group | svg.Animate.group | svg.Discard.group | stop)*
  }
  # ... linearGradient .........................................
  [ xml:id = "linearGradient" ]
  div {
    linearGradient =
      element linearGradient { linearGradient.AT, GradientCommon.CM }
    linearGradient.AT &=
      svg.Properties.attr,
      svg.GradientCommon.attr,
      svg.Core.attr,
      svg.X12Y12.attr
  }
  # ... radialGradient .........................................
  [ xml:id = "radialGradient" ]
  div {
    radialGradient =
      element radialGradient { radialGradient.AT, GradientCommon.CM }
    radialGradient.AT &=
      svg.Properties.attr,
      svg.GradientCommon.attr,
      svg.Core.attr,
      svg.CxCy.attr,
      svg.R.attr
  }
  # ... stop ...................................................
  [ xml:id = "stop" ]
  div {
    stop = element stop { stop.AT, stop.CM }
    stop.CM = (svg.Desc.group | svg.Animate.group)*
    stop.AT &=
      svg.Properties.attr,
      svg.Core.attr,
      [ svg:animatable = "true" svg:inheritable = "false" ]
      attribute offset { Number.datatype }?
  }
}

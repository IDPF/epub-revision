<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../util/docbook/schema/docbookspec.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="../../util/docbook/schema/docbookspec.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<?xml-model href="../../util/docbook/schema/docbook.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:epub="http://www.idpf.org/2011/epub" xmlns:xi="http://www.w3.org/2001/XInclude"
    version="5.1">
    <title>EPUB Open Container Format (OCF) 3.0.1</title>
    <info>
        <releaseinfo>Working Draft</releaseinfo>
        <pubdate>00 November 2013</pubdate>
        <printhistory>
            <formalpara>
                <title>This version</title>
                <para><link xlink:href="http://www.idpf.org/epub/30/spec/epub30-ocf-20131100.html"
                    /></para>
            </formalpara>
            <formalpara>
                <title>Latest version</title>
                <para><link xlink:href="http://www.idpf.org/epub3/spec/ocf"/></para>
            </formalpara>
            <formalpara>
                <title>Previous version</title>
                <para><link xlink:href="http://www.idpf.org/epub/30/spec/epub30-ocf-20111011.html"
                    /></para>
            </formalpara>
        </printhistory>
        <releaseinfo role="errata"> Please refer to the <link xlink:href="./epub30-ocf-errata/"
        	>errata</link> for this document, which may include some normative corrections. </releaseinfo>
        <releaseinfo role="diff"> A diff of changes from the previous draft is available at <link
            xlink:href="http://code.google.com/p/epub-revision/source/diff?spec=svn3218&amp;old=3183&amp;r=3218&amp;format=side&amp;path=%2Ftrunk%2Fsrc%2Fspec%2Fepub30-ocf.xml"
                >this link</link>. </releaseinfo>
        <xi:include href="./share/copyright.xml"/>
        <xi:include href="./share/legalnotice.xml"/>
        <authorgroup role="current">
            <editor>
                <personname>James Pritchett</personname>
                <affiliation>
                    <org>
                        <orgname>Learning Ally (formerly Recording for the Blind &amp;
                            Dyslexic)</orgname>
                    </org>
                </affiliation>
            </editor>
            <editor>
                <personname>Markus Gylling</personname>
                <affiliation>
                    <org>
                        <orgname>DAISY Consortium</orgname>
                    </org>
                </affiliation>
            </editor>
        </authorgroup>
        <abstract>
            <title>Abstract</title>
            <para> This specification, EPUB Open Container Format EPUB Open Container Format (OCF)
                3.0, defines a file format and processing model for encapsulating a set of related
                resources into a single-file container. </para>
        </abstract>
    </info>
    <chapter xml:id="sec-overview">
        <title>Overview</title>
        <section xml:id="sec-overview-purpose-and-scope" conformance="informative">
            <title>Purpose and Scope</title>
            <para>This specification, EPUB Open Container Format (OCF) 3.0, defines a file format
                and processing model for encapsulating the set of related resources that comprise
                an <link linkend="gloss-epub-publication">EPUB® Publication</link> into a
                single-file container.</para>
            <xi:include href="./share/specdesc-prepara.xml"/>
            <itemizedlist xml:id="epub-specs-listing">
                <xi:include href="./share/specdesc-overview.xml"/>
                <xi:include href="./share/specdesc-publications.xml"/>
                <xi:include href="./share/specdesc-contentdocs.xml"/>
                <xi:include href="./share/specdesc-overlays.xml"/>
            </itemizedlist>
        	<para>OCF is the required container technology for EPUB Publications. OCF may play a
                role in the following workflows:</para>
            <itemizedlist>
                <listitem>
                    <para>During the preparation steps in producing an EPUB Publication, OCF
                        may be used as the container format when exchanging an in-progress EPUB Publication
                        between different individuals and/or different organizations.</para>
                </listitem>
                <listitem>
                    <para>When providing an EPUB Publication from publisher or conversion
                        house to the distribution or sales channel, OCF is the recommended container
                        format to be used as the transport format.</para>
                </listitem>
                <listitem>
                    <para>When delivering the final EPUB Publication to an EPUB Reading System or <xref
                    	linkend="gloss-user"/>, OCF is the required format for the container
                        that holds all of the assets that make up the EPUB Publication.</para>
                </listitem>
            </itemizedlist>
            <para>The OCF specification defines the rules for structuring the file collection in the
                abstract: the "abstract container". It also defines the rules for the representation
                of this abstract container within a ZIP archive: the "physical container". The rules
                for ZIP physical containers build upon the ZIP technologies used by <xref
                    linkend="refODF"/>. OCF also defines a standard method for obfuscating embedded
                resources, such as fonts, for those EPUB Publications that require this functionality.</para>
            <para>This specification supersedes Open Container Format (OCF) 2.0.1 <xref
                    linkend="refOCF2"/>. Refer to <xref linkend="refEPUB3Changes"/> for information
                on differences between this specification and its predecessor.</para>
        </section>
        <section xml:id="sec-terminology">
            <title>Terminology</title>
            <xi:include href="./share/terminology.xml"/>
        </section>
        <xi:include href="./share/typography.xml"/>
        <xi:include href="./share/conformancestatements.xml"/>
        <section xml:id="ocf-conformance-content">
            <title>Content Conformance</title>
            <itemizedlist role="conformance-list">
                <listitem>
                    <para xml:id="confreq-ocf-content-abstr">An OCF Abstract Container <literal role="rfc2119">must</literal> meet the
                        conformance constraints defined in <xref linkend="sec-container-abstract"
                        />.</para>
                </listitem>
                <listitem>
                    <para xml:id="confreq-ocf-content-zip">An OCF ZIP Container (also referred to as
                        an <xref linkend="gloss-container"/>) <literal role="rfc2119">must</literal> meet the conformance constraints
                        defined in <xref linkend="physical-container-zip"/>.</para>
                </listitem>
            </itemizedlist>
        </section>
        <section xml:id="ocf-conformance-rs">
            <title>Reading System Conformance</title>
            <para>An <xref linkend="gloss-epub-reading-system"/> <literal role="rfc2119">must</literal> meet all of the following
                criteria:</para>
            <itemizedlist role="conformance-list">
                <listitem>
                    <para xml:id="confreq-ocf-rs-zip">It <literal role="rfc2119">must</literal> process the OCF ZIP Container in
                        conformance with all Reading System conformance constraints expressed in
                            <xref linkend="physical-container-zip"/>.</para>
                </listitem>
                <listitem>
                    <para xml:id="confreq-ocf-fobfus">If it has a <xref linkend="gloss-viewport"/>,
                        it <literal role="rfc2119">must</literal> support deobfuscation of resources as defined in <xref
                            linkend="resource-obfuscation"/>.</para>
                </listitem>
            </itemizedlist>
        </section>
    </chapter>

    <chapter xml:id="sec-container-abstract">
        <title>OCF Abstract Container</title>
        <section xml:id="sec-container-abstract-overview" conformance="informative">
            <title>Overview</title>
            <para>An OCF Abstract Container defines a file system model for the contents of the
                container. The file system model uses a single common root directory for all of the
                contents of the container. All (non-remote) resources for embedded <xref linkend="gloss-rendition"/>s are
                located within the directory tree headed by the container’s root directory, although
                no specific file system structure is mandated for this. The file system model also
                includes a mandatory directory named <filename>META-INF</filename> that is a direct
                child of the container's root directory and is used to store the following special
                files:</para>
            <variablelist>
                <varlistentry>
                    <term><filename>container.xml</filename>
                        <option>[required]</option></term>
                    <listitem>
                        <para>Identifies the file that is the point of entry for each embedded
                            <xref linkend="gloss-rendition"/> of the EPUB Publication.</para>
                        <!-- or version/rendition/format of a publication -->
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><filename>signatures.xml</filename>
                        <option>[optional]</option>
                    </term>
                    <listitem>
                        <para>Contains digital signatures for various assets.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><filename>encryption.xml</filename>
                        <option>[optional]</option></term>
                    <listitem>
                        <para>Contains information about the encryption of <xref linkend="gloss-publication-resource-cmt-or-foreign"/>s.
                        	(This file is required when <link linkend="resource-obfuscation">obfuscation</link>
                        	is used.)</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><filename>metadata.xml</filename>
                        <option>[optional]</option></term>
                    <listitem>
                        <para>Used to store metadata about the <xref linkend="gloss-container"/>.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><filename>rights.xml</filename>
                        <option>[optional]</option></term>
                    <listitem>
                        <para>Used to store information about digital rights.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><filename>manifest.xml</filename>
                        <option>[allowed]</option></term>
                    <listitem>
                        <para>A manifest of container contents as allowed by Open Document Format
                                <xref linkend="refODF"/>.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <para>Complete conformance requirements for the various files in
                    <filename>META-INF</filename> are found in <xref linkend="sec-container-metainf"
                />. </para>
        </section>
        <section xml:id="sec-container-file-and-dir-structure">
            <title>File and Directory Structure</title>
            <para>The virtual file system for the OCF Abstract Container <literal role="rfc2119">must</literal> have a single common
                root directory for all of the contents of the container.</para>
            <para> The OCF Abstract Container <literal role="rfc2119">must</literal> include a directory named
                    <filename>META-INF</filename> that is a direct child of the container's root
                directory. Requirements for the contents of this directory are described in <xref
                    linkend="sec-container-metainf"/>.</para>
            <para>The file name <filename>mimetype</filename> in the root directory is reserved for
                use by OCF ZIP Containers, as explained in <xref linkend="physical-container-zip"
                />.</para>
            <para>All other files within the OCF Abstract Container <literal role="rfc2119">may</literal> be in any location
                descendant from the container's root directory except within the
                    <filename>META-INF</filename> directory.</para>
            <para>It is <literal role="rfc2119">recommended</literal> that the contents of the EPUB Publication be
                stored within its own dedicated directory under the container's root.</para>
        </section>
        <section xml:id="sec-container-iri">
            <title>Relative IRIs for Referencing Other Components</title>
            <para>Files within the OCF Abstract Container <literal role="rfc2119">must</literal> reference each other via Relative IRI
                References (<xref linkend="refRFC3987"/> and <xref linkend="refRFC3986"/>). For
                example, if a file named <filename>chapter1.html</filename> references an image file
                named <filename>image1.jpg</filename> that is located in the same directory, then
                    <filename>chapter1.html</filename> might contain the following as part of its
                content:</para>
            <informalexample>
                <synopsis>
&lt;img src="image1.jpg" alt="…" /&gt;
                </synopsis>
            </informalexample>
            <para>For Relative IRI References, the Base IRI <xref linkend="refRFC3986"/> is
                determined by the relevant language specifications for the given file formats. For
                example, the CSS specification defines how relative IRI references work in the
                context of CSS style sheets and property declarations. Note that some language
                specifications reference RFCs that preceded RFC3987, in which case the earlier RFC
                applies for content in that particular language.</para>
            <para>Unlike most language specifications, the Base IRIs for all files within the
                    <filename>META-INF</filename> directory use the root directory for the Abstract
                Container as the default Base IRI. For example, if
                    <filename>META-INF/container.xml</filename> has the following content:</para>
            <informalexample>
                <synopsis>
<xi:include parse="text" href="./examples/ocf/container-2.xml"/>
            </synopsis>
            </informalexample>
            <para>then the path <filename>EPUB/Great Expectations.opf</filename> is relative to the
                root directory for the OCF Abstract Container and not relative to the
                    <filename>META-INF</filename> directory.</para>
        </section>
        <section xml:id="sec-container-filenames">
            <title>File Names</title>
            <para>The term <emphasis role="strong">File Name</emphasis> represents the name of any type of file,
                either a directory or an ordinary file within a directory within an OCF Abstract
                Container. </para>
            <para>For a given directory within the OCF Abstract Container, the <emphasis role="strong">Path
                    Name</emphasis> is a string holding all directory File Names in the full path
                concatenated together with a <literal>/</literal> (<code role="codepoint">U+002F</code>) character
                separating the directory File Names. For a given file within the Abstract Container,
                the Path Name is the string holding all directory File Names concatenated together
                with a <literal>/</literal> character separating the directory File Names, followed
                by a <literal>/</literal> character and then the File Name of the file.</para>
            <para>The File Name restrictions described below are designed to allow Path Names and
                File Names to be used without modification on most commonly used operating systems.
                This specification does not specify how an <xref linkend="gloss-ocf-processor"/>
                that is unable to represent OCF File and Path Names would compensate for this
                incompatibility.</para>
            <para>In the context of an OCF Abstract Container, File and Path Names <literal role="rfc2119">must</literal> meet all of
                the following criteria:</para>
            <itemizedlist role="conformance-list">
                <listitem>
                    <para xml:id="ocf-fn-encoding">File Names <literal role="rfc2119">must</literal> be UTF-8 <xref
                            linkend="refUnicode5"/> encoded.</para>
                </listitem>
                <listitem>
                    <para xml:id="ocf-fn-length">File Names <literal role="rfc2119">must not</literal> exceed 255 bytes.</para>
                </listitem>
                <listitem>
                    <para xml:id="ocf-pn-length">The Path Name for any directory or file within the
                        Abstract Container <literal role="rfc2119">must not</literal> exceed 65535 bytes.</para>
                </listitem>
                <listitem>
                    <para xml:id="ocf-fn-chars">File Names <literal role="rfc2119">must not</literal> use the following <xref
                            linkend="refUnicode5"/> characters, as these characters might not be
                        supported consistently across commonly-used operating systems:</para>
                    <itemizedlist>
                        <listitem>
                            <para>SOLIDUS: <literal>/</literal> (<code role="codepoint">U+002F</code>)</para>
                        </listitem>
                        <listitem>
                            <para>QUOTATION MARK: <literal>"</literal> (<code role="codepoint">U+0022</code>)</para>
                        </listitem>
                        <listitem>
                            <para>ASTERISK: <literal>*</literal> (<code role="codepoint">U+002A</code>)</para>
                        </listitem>
                        <listitem>
                            <para>FULL STOP as the last character: <literal>.</literal>
                                (<code role="codepoint">U+002E</code>)</para>
                        </listitem>
                        <listitem>
                            <para>COLON: <literal>:</literal> (<code role="codepoint">U+003A</code>)</para>
                        </listitem>
                        <listitem>
                            <para>LESS-THAN SIGN: <literal>&lt;</literal>
                                (<code role="codepoint">U+003C</code>)</para>
                        </listitem>
                        <listitem>
                            <para>GREATER-THAN SIGN: <literal>&gt;</literal>
                                (<code role="codepoint">U+003E</code>)</para>
                        </listitem>
                        <listitem>
                            <para>QUESTION MARK: <literal>?</literal> (<code role="codepoint">U+003F</code>)</para>
                        </listitem>
                        <listitem>
                            <para>REVERSE SOLIDUS: <literal>\</literal> (<code role="codepoint">U+005C</code>)</para>
                        </listitem>
                        <listitem>
                            <para>DEL (<code role="codepoint">U+007F</code>)</para>
                        </listitem>
                        <listitem>
                            <para>C0 range (<code role="codepoint">U+0000 … U+001F</code>)</para>
                        </listitem>
                        <listitem>
                            <para>C1 range (<code role="codepoint">U+0080 … U+009F</code>)</para>
                        </listitem>
                        <listitem>
                            <para>Private Use Area (<code role="codepoint">U+E000 … U+F8FF</code>)</para>
                        </listitem>
                        <listitem>
                            <para>Non characters in Arabic Presentation Forms-A (<code role="codepoint">U+FDDO …
                                    U+FDEF</code>)</para>
                        </listitem>
                        <listitem>
                            <para>Specials (<code role="codepoint">U+FFF0 … U+FFFF</code>)</para>
                        </listitem>
                        <listitem>
                            <para>Tags and Variation Selectors Supplement (<code role="codepoint">U+E0000 …
                                    U+E0FFF</code>)</para>
                        </listitem>
                        <listitem>
                            <para>Supplementary Private Use Area-A (<code role="codepoint">U+F0000 …
                                U+FFFFF</code>)</para>
                        </listitem>
                        <listitem>
                            <para>Supplementary Private Use Area-B (<code role="codepoint">U+100000 …
                                U+10FFFF</code>) </para>
                        </listitem>
                    </itemizedlist>
                </listitem>
                <listitem>
                    <para xml:id="ocf-fn-cs">File Names are case sensitive.</para>
                </listitem>
                <listitem>
                    <para xml:id="ocf-fn-cn">All File Names within the same directory <literal role="rfc2119">must</literal> be unique
                        following case normalization as described in section 3.13 of <xref
                            linkend="refUnicode5"/>.</para>
                </listitem>
                <listitem>
                    <para xml:id="ocf-fn-an">All File Names within the same directory <literal role="rfc2119">should</literal> be
                        unique following NFC or NFD normalization <xref linkend="refTR15"/>.</para>
                </listitem>
            </itemizedlist>
            <note>
            	<para>Some commercial ZIP tools do not support the full Unicode range and may
                    support only the ASCII range for File Names. Content creators who want to use
                    ZIP tools that have these restrictions may find it is best to restrict their
                    File Names to the ASCII range. If the names of files cannot be preserved during
                    the unzipping process, it will be necessary to compensate for any name
                    translation which took place when the files are referenced by URI from within
                    the content.</para>
            </note>
        </section>
        <section xml:id="sec-container-metainf">
            <title>META-INF</title>
            <para>All OCF Abstract Containers <literal role="rfc2119">must</literal> include a directory called
                    <filename>META-INF</filename>. This directory contains the files specified
                below. Files other than the ones defined below <literal role="rfc2119">may</literal> be included in the
                    <filename>META-INF</filename> directory; <xref linkend="gloss-ocf-processor"/>s
                <literal role="rfc2119">must not</literal> fail when encountering such files.</para>
            <section xml:id="sec-container-metainf-container.xml">
                <title>Container – META-INF/container.xml</title>
                <para>All OCF Containers <literal role="rfc2119">must</literal> include a file called
                        <filename>container.xml</filename> within the <filename>META-INF</filename>
                    directory. The <filename>container.xml</filename> file <literal role="rfc2119">must</literal> identify the media
                    type of, and path to, the root file for each of the Renditions of the EPUB Publication included within
                    the Container.</para>
                <para>The <filename>container.xml</filename> file <literal role="rfc2119">must not</literal> be encrypted.</para>
                <para>The schema for <filename>container.xml</filename> files is available in <xref
                        linkend="app-schema-container"/>; <filename>container.xml</filename> files
                    <literal role="rfc2119">must</literal> be valid according to this schema after removing all elements and
                    attributes from other namespaces (including all attributes and contents of such
                    elements).</para>
                <!-- TODO either remove this anyname allowance, or make the schema support it natively. -->
            	<para>The <markup>rootfiles</markup> element <literal role="rfc2119">must</literal> contain one or more 
            		<markup>rootfile</markup> elements, each of which <literal role="rfc2119">must</literal> uniquely reference a 
            		Package Document representing a single <xref linkend="gloss-rendition"/> of an EPUB Publication. If more than 
            	    one Rendition is stored in an OCF, each <literal role="rfc2119">must</literal> be a different rendering of 
            	    the same EPUB Publication.</para>
                <para xml:id="container-default-rendition">An OCF Processor <literal role="rfc2119">must</literal> consider the first
                    <markup>rootfile</markup> element within the <markup>rootfiles</markup> element to
                    represent the Default Rendition for the contained EPUB Publication. Reading Systems
                    are <literal role="rfc2119">not required</literal> to use any Rendition except the default one.</para>
                <informalexample>
                    <para>The following example shows a sample <filename>container.xml</filename>
                        for an EPUB Publication with the root file <filename>EPUB/My Crazy
                            Life.opf</filename> (the Package Document):</para>
                    <synopsis>
<xi:include parse="text" href="./examples/ocf/container-3.xml"/>
                    </synopsis>
                </informalexample>
                <informalexample>
                    <para>The following example shows SVG and XHTML Renditions of <emphasis>The
                            Sandman</emphasis> bundled in the same container:</para>
                    <synopsis>
<xi:include parse="text" href="./examples/ocf/container-4.xml"/>
                    </synopsis>
                </informalexample>
            	<para>The <markup>manifest</markup> element contained within the <xref
            		linkend="gloss-package-document"/> specifies the one and only manifest
            		used for processing a given Rendition. Ancillary manifest information contained in the ZIP archive 
            		or in the optional <filename>manifest.xml</filename> file <literal role="rfc2119">must not</literal> be used for 
            		processing the Rendition. Any extra files in the ZIP archive <literal role="rfc2119">must not</literal> be used in
            		the processing of the Rendition (i.e., files within the ZIP archive that 
            		are not listed within the Package Document's <markup>manifest</markup> element, such 
            		as <filename>META-INF</filename> files or or resources specific to other Renditions of the 
            		EPUB Publication).</para>
                <para>The <filename>container.xml</filename> file <literal role="rfc2119">may</literal> include a <markup>links</markup>
                	element following the <markup>rootfiles</markup> element, which, when present, <literal role="rfc2119">must</literal> contain one 
                	or more <markup>link</markup> elements. Each <markup>link</markup> element <literal role="rfc2119">must</literal> include
                    an <markup>href</markup> attribute whose value identifies the location of a resource necessary for the processing
                	of the EPUB Container. Each <markup>link</markup> element also <literal role="rfc2119">must</literal> include a <markup>rel</markup>
                    attribute whose value identifies the relationship of the resource, and <literal role="rfc2119">may</literal>
                    include a <markup>media-type</markup> attribute whose value <literal role="rfc2119">must</literal> be a
                    media type <xref linkend="refRFC2046"/> that specifies the type and format of the resource referenced by the 
                    <markup>link</markup>.</para>
                <para>The value of the <markup>rootfile</markup> element <markup>full-path</markup> attribute 
                    and the <markup>link</markup> element <markup>href</markup> attribute 
                    <literal role="rfc2119">must</literal> contain a <firstterm xml:id="def-path-component">path
                        component</firstterm> (as defined by <link linkend="refRFC3986"
                    >RFC3986</link>) which <literal role="rfc2119">must</literal> take the form of a <firstterm xml:id="def-path-rootless">path-rootless</firstterm>
                    only (also defined by RFC 3986). The path components are relative to the root of
                    the container in which they are used.</para>
                <para><xref linkend="gloss-ocf-processor"/>s <literal role="rfc2119">must</literal> ignore foreign elements and
                    attributes within a <filename>container.xml</filename> file.</para>
            </section>
            <section xml:id="sec-container-metainf-encryption.xml">
                <title>Encryption – META-INF/encryption.xml</title>
                <para>An optional <filename>encryption.xml</filename> file within the
                        <filename>META-INF</filename> directory at the root level of the container
                    file system holds all encryption information on the contents of the container. If any
                    resource within the container is encrypted, <filename>encryption.xml</filename>
                    <literal role="rfc2119">must</literal> be present to indicate that the resource is encrypted and provide
                    information on how it is encrypted.</para>
                <para>This file is an XML document whose root element is <markup>encryption</markup>. The
                    <markup>encryption</markup> element contains child elements of type
                    <markup>EncryptedKey</markup> and <markup>EncryptedData</markup> as defined by <xref
                        linkend="refXMLENCCORE"/>. An <markup>EncryptedKey</markup> element describes each 
                    encryption key used in the container, while an <markup>EncryptedData</markup> element 
                    describes each encrypted file. Each <markup>EncryptedData</markup> element refers to an
                    <markup>EncryptedKey</markup> element, as described in XML Encryption.</para>
                <para>The schema for <filename>encryption.xml</filename> files is available in <xref
                        linkend="app-schema-encryption"/>; <filename>encryption.xml</filename> files
                    <literal role="rfc2119">must</literal> be valid according to this schema.</para>
                <!-- This contradicts the first paragraph; is redundant in any event.
                <para>When the <filename>encryption.xml</filename> file is not present, the OCF
                    Abstract Container provides no information indicating any part of the container
                    is encrypted.</para>
                    -->
                <para>OCF encrypts individual files independently, trading off some security for
                    improved performance, allowing the container contents to be incrementally
                    decrypted. Encryption in this way exposes the directory structure and file
                    naming of the whole package.</para>
                <para>OCF uses XML Encryption <xref linkend="refXMLENCCORE"/> to provide a framework
                    for encryption, allowing a variety of algorithms to be used. XML Encryption
                    specifies a process for encrypting arbitrary data and representing the result in
                    XML. Even though an OCF Abstract Container may contain non-XML data, XML
                    Encryption can be used to encrypt all data in an OCF Abstract Container. OCF
                    encryption supports only the encryption of entire files within the container,
                    not parts of files. The <filename>encryption.xml</filename> file, if present,
                    <literal role="rfc2119">must not</literal> be encrypted.</para>
                <para>Encrypted data replaces unencrypted data in an OCF Abstract Container. For
                    example, if an image named <filename>photo.jpeg</filename> is encrypted, the
                    contents of the <filename>photo.jpeg</filename> resource <literal role="rfc2119">should</literal> be replaced by
                    its encrypted contents. When stored in a ZIP container, streams of data <literal role="rfc2119">must</literal> be
                    compressed before they are encrypted and Deflate compression <literal role="rfc2119">must</literal> be used.
                    Within the ZIP directory, encrypted files <literal role="rfc2119">should</literal> be stored rather than
                    Deflate-compressed.</para>
            	<para>Note that some situations require obfuscating the storage of embedded resources 
            		referenced by a <xref linkend="gloss-rendition"/> to tie them to the "parent" EPUB Publication 
            	    and make them more difficult to extract for unrestricted use (e.g., fonts). Although obfuscation
            		is not encryption, the <filename>encryption.xml</filename> file is used in
            		conjunction with the <link linkend="resource-obfuscation">IDPF resource 
            			obfuscation algorithm</link> to identify resources that need to be 
            		de-obfuscated before they can be used.</para>
            	<para>The following files <literal role="rfc2119">must not</literal> be encrypted, regardless of whether default or
                    specific encryption is requested:</para>
                <simplelist>
                    <member><filename>mimetype</filename></member>
                    <member><filename>META-INF/container.xml</filename></member>
                    <member><filename>META-INF/encryption.xml</filename></member>
                    <member><filename>META-INF/manifest.xml</filename></member>
                    <member><filename>META-INF/metadata.xml</filename></member>
                    <member><filename>META-INF/rights.xml</filename></member>
                    <member><filename>META-INF/signatures.xml</filename></member>
                    <member><filename>EPUB rootfile</filename> (the <xref linkend="gloss-package-document"
                            />)</member>
                </simplelist>
            	<para>Signed resources <literal role="rfc2119">may</literal> subsequently be encrypted using the Decryption Transform
                    for XML Signature <xref linkend="refXMLSIGDecrypt"/>. This feature enables an
                    application such as an OCF agent to distinguish data that was encrypted before
                    signing from data that was encrypted after signing. Only data that was encrypted
                    after signing <literal role="rfc2119">must</literal> be decrypted before computing the digest used to validate the
                    signature.</para>
                <informalexample>
                    <para>In the following example, adapted from <link
                            xlink:href="http://www.w3.org/TR/2002/REC-xmlenc-core-20021210/#sec-eg-Symmetric-Key"
                            >Section 2.2.1 </link> of <xref linkend="refXMLENCCORE"/> the resource
                            <filename>image.jpeg</filename> is encrypted using a symmetric key
                        algorithm (AES) and the symmetric key is further encrypted using an
                        asymmetric key algorithm (RSA) with a key of John Smith.</para>
                    <synopsis>
<xi:include parse="text" href="./examples/ocf/encryption-2.xml"/>
                    </synopsis>
                </informalexample>
            </section>
            <section xml:id="sec-container-metainf-manifest.xml">
                <title>Manifest – META-INF/manifest.xml</title>
            	<para>An optional file with the reserved name <filename>manifest.xml</filename> <literal role="rfc2119">may</literal>
                    be included within the <filename>META-INF</filename> directory at the root level
                    of the container file system.</para>
                <para>The <filename>manifest.xml</filename> file, if present, <literal role="rfc2119">must not</literal> be
                    encrypted.</para>
            </section>
            <section xml:id="sec-container-metainf-metadata.xml">
                <title>Metadata – META-INF/metadata.xml</title>
            	<para>An optional file with the reserved name <filename>metadata.xml</filename> <literal role="rfc2119">may</literal>
                    be included within the <filename>META-INF</filename> directory at the root level
                    of the container file system. This file, if present, <literal role="rfc2119">must</literal> be used for
                    container-level metadata.</para>
            	<para>If the <filename>META-INF/metadata.xml</filename> file is present, its
                    contents <literal role="rfc2119">should</literal> be only namespace-qualified elements <xref
                    	linkend="refXMLNamespaces"/>. The file <literal role="rfc2119">should</literal> contain the
            	    root element <markup>metadata</markup> in the namespace <uri>http://www.idpf.org/2013/metadata</uri>,
            		but other root elements are allowed for backwards compatibility. Reading Systems 
            		<literal role="rfc2119">should</literal> ignore <filename>metadata.xml</filename> files with 
            		unrecognized root elements.</para>
            	<para>This version of the OCF specification does not define metadata for use in the 
                    <filename>metadata.xml</filename> file. Container-level metadata 
                    <literal role="rfc2119">may</literal> be defined in future versions of this specification 
                    and in IDPF-defined EPUB extension specifications.</para>
            	<para>The <filename>metadata.xml</filename> file, if present, <literal role="rfc2119">must not</literal> be
                    encrypted.</para>
            </section>
            <section xml:id="sec-container-metainf-rights.xml">
                <title>Rights Management – META-INF/rights.xml</title>
                <para>An optional file with the reserved name <filename>rights.xml</filename> <literal role="rfc2119">may</literal> be
                    included within the <filename>META-INF</filename> directory at the root level of
                    the container file system. This file is reserved for digital rights management
                    (DRM) information for trusted exchange of EPUB Publications among rights holders,
                    intermediaries, and users. This version of the OCF specification does not
                    specify a required format for DRM information, but a future version may specify
                    a particular format for DRM information.</para>
                <para>If the <filename>META-INF/rights.xml</filename> file is present, its contents
                    <literal role="rfc2119">should</literal> be only namespace-qualified elements <xref linkend="refXMLNamespaces"/>
                    to avoid collision with future versions of OCF that may specify a particular
                    format for this file.</para>
                <para>The <filename>rights.xml</filename> file <literal role="rfc2119">must not</literal> be encrypted.</para>
                <para>When the <filename>rights.xml</filename> file is not present, the OCF
                    container provides no information indicating any part of the container is rights
                    governed.</para>
            </section>
            <section xml:id="sec-container-metainf-signatures.xml">
                <title>Digital Signatures – META-INF/signatures.xml</title>
                <para>An optional <filename>signatures.xml</filename> within the
                        <filename>META-INF</filename> directory at the root level of the container
                    file system holds digital signatures of the container and its contents. This
                    file is an XML document whose root element is <markup>signatures</markup>. The
                    <markup>signatures</markup> element contains child elements of type
                    <markup>Signature</markup> as defined by <xref linkend="refXMLDSIGCORE"/>.
                    Signatures can be applied to any Rendition of an EPUB Publication as a
                    whole or to parts of the Renditions. XML Signature can specify
                    the signing of any kind of data, not just XML.</para>
                <para>The <filename>signatures.xml</filename> file <literal role="rfc2119">must not</literal> be encrypted.</para>
                <para>When the <filename>signatures.xml</filename> file is not present, the OCF
                    container provides no information indicating any part of the container is
                    digitally signed at the container level. It is possible that digital signing
                    exists within any of the contained Renditions, however.</para>
                <para>The schema for <filename>signatures.xml</filename> files is available in <xref
                        linkend="app-schema-signatures"/>; <filename>signatures.xml</filename> files
                    <literal role="rfc2119">must</literal> be valid according to this schema.</para>
                <para>When an OCF agent creates a signature of data in a container, it <literal role="rfc2119">should</literal> add
                    the new signature as the last child <markup>Signature</markup> element of the
                    <markup>signatures</markup> element in the <filename>signatures.xml</filename>
                    file.</para>
                <note>
                    <para>Each <markup>Signature</markup> in the <filename>signatures.xml</filename>
                        file identifies by IRI the data to which the signature applies, using the
                        XML Signature <markup>Manifest</markup> element and its <markup>Reference</markup>
                        sub-elements. Individual contained files may be signed separately or
                        together. Separately signing each file creates a digest value for the
                        resource that can be validated independently. This approach may make a
                        Signature element larger. If files are signed together, the set of signed
                        files can be listed in a single XML Signature <markup>Manifest</markup> element
                        and referenced by one or more <markup>Signature</markup> elements.</para>
                </note>
                <para>Any or all files in the container can be signed in their entirety with the
                    exception of the <filename>signatures.xml</filename> file since that file will
                    contain the computed signature information. Whether and how the
                        <filename>signatures.xml</filename> file should be signed depends on the
                    objective of the signer.</para>
                <para>If the signer wants to allow signatures to be added or removed from the
                    container without invalidating the signer’s signature, the
                        <filename>signatures.xml</filename> file <literal role="rfc2119">should not</literal> be signed.</para>
                <para>If the signer wants any addition or removal of a signature to invalidate the
                    signer’s signature, the Enveloped Signature transform (defined in <link
                        xlink:href="http://www.w3.org/TR/2008/REC-xmldsig-core-20080610/#sec-EnvelopedSignature"
                        >Section 6.6.4</link> of <xref linkend="refXMLDSIGCORE"/>) can be used to
                    sign the entire preexisting signature file excluding the <markup>Signature</markup>
                    being created. This transform would sign all previous signatures, and it would
                    become invalid if a subsequent signature was added to the package.</para>
                <para>If the signer wants the removal of an existing signature to invalidate the
                    signer’s signature but also wants to allow the addition of signatures, an XPath
                    transform can be used to sign just the existing signatures. (This is only a
                    suggestion. The particular XPath transform is not a part of the OCF
                    specification.)</para>
            	<para>XML-Signature does not associate any semantics with a signature; an agent <literal role="rfc2119">may</literal>
                    include semantic information, for example, by adding information to the
                    Signature element that describes the signature. XML Signature describes how
                    additional information can be added to a signature (for example, by using the
            	    <markup>SignatureProperties</markup> element).</para>
                <informalexample>
                    <para>The following XML expression shows the content of an example
                            <filename>signatures.xml</filename> file, and is based on the examples
                        found in <link
                            xlink:href="http://www.w3.org/TR/2008/REC-xmldsig-core-20080610/#sec-Overview"
                            >Section 2</link> of <xref linkend="refXMLDSIGCORE"/>. It contains one
                        signature, and the signature applies to two resources,
                            <filename>OEBFPS/book.html</filename> and
                            <filename>OEBFPS/images/cover.jpeg</filename>, in the container.</para>
                    <synopsis>
<xi:include parse="text" href="./examples/ocf/signatures-2.xml"/>
                    </synopsis>
                </informalexample>
            </section>
        </section>
    </chapter>
    <chapter xml:id="physical-container-zip">
        <title>OCF ZIP Container</title>
        <section conformance="informative" xml:id="sec-container-zip-overview">
            <title>Overview</title>
            <para>An OCF ZIP Container is a physical single-file manifestation of an <link
                    linkend="sec-container-abstract">abstract container</link>.</para>
        </section>
        <section xml:id="sec-zip-container-zipreqs">
            <title>ZIP File Requirements</title>
            <para>An OCF ZIP Container uses the ZIP format as specified by <xref linkend="refZIP"/>,
                but with the following constraints and clarifications:</para>
            <itemizedlist role="conformance-list">
                <listitem>
                    <para xml:id="confreq-zip-abstr">The contents of the OCF ZIP Container <literal role="rfc2119">must</literal> be a
                        conforming <link linkend="sec-container-abstract">abstract container</link>.
                    </para>
                </listitem>
                <listitem>
                    <para xml:id="confreq-zip-mult">OCF ZIP Containers <literal role="rfc2119">must not</literal> use the features in
                        the ZIP application note that allow ZIP files to be split across multiple
                        storage media. <xref linkend="gloss-ocf-processor"/>s <literal role="rfc2119">must</literal> treat any OCF
                        files that specify that the ZIP file is split across multiple storage media
                        as being in error.</para>
                </listitem>
                <listitem>
                    <para xml:id="confreq-zip-comp">
                    	OCF ZIP Containers <literal role="rfc2119">must</literal> include only
                    	stored (uncompressed) and Deflate-compressed ZIP entries within the ZIP archive.
                        OCF Processors <literal role="rfc2119">must</literal> treat any OCF Containers that use compression techniques
                        other than Deflate as being in error. </para>
                </listitem>
                <listitem>
                    <para xml:id="confreq-zip-64">OCF ZIP Containers <literal role="rfc2119">may</literal> use the ZIP64 extensions
                        defined as "Version 1" in section V, subsection G of the application note at
                            <xref linkend="refZIP"/> and <literal role="rfc2119">should</literal> use only those extensions when the
                        content requires them. OCF Processors <literal role="rfc2119">must</literal> support the ZIP64 extensions
                        defined as "Version 1".</para>
                </listitem>
                <listitem>
                    <para xml:id="confreq-zip-enc">OCF ZIP Containers <literal role="rfc2119">must not</literal> use the encryption
                        features defined by the ZIP format; instead, encryption <literal role="rfc2119">must</literal> be done using
                        the features described in <xref
                        	linkend="sec-container-metainf-encryption.xml"/>. OCF Processors <literal role="rfc2119">must</literal>
                        treat any other OCF ZIP Containers that use ZIP encryption features as being
                        in error.</para>
                </listitem>
                <listitem>
                    <para xml:id="confreq-zip-preserve">It is not a requirement that OCF Processors
                        preserve information from an OCF ZIP Container through load and save
                        operations that is not defined within the OCF Abstract Container; in
                        particular, an OCF Processor does not have to preserve CRC values, comment
                        fields or fields that hold file system information corresponding to a
                        particular operating system (e.g., <firstterm>External file attributes</firstterm> and
                            <firstterm>Extra field</firstterm>).</para>
                </listitem>
                <listitem>
                    <para xml:id="confreq-zip-utf8">OCF ZIP Containers <literal role="rfc2119">must</literal> encode File System Names
                        using UTF-8 <xref linkend="refUnicode5"/>.</para>
                </listitem>
            </itemizedlist>
            <para>The following constraints apply to particular fields in the OCF ZIP Container
                archive:</para>
            <itemizedlist role="conformance-list">
                <listitem>
                    <para xml:id="confreq-zip-fld-version">In the local file header table, OCF ZIP
                        Containers <literal role="rfc2119">must</literal> set the <literal>version needed to extract</literal> fields to the
                        values <code role="value">10</code>, <code role="value">20</code> or <code role="value">45</code> in order to match
                        the maximum version level needed by the given file (e.g., <code role="value">20</code> if
                        Deflate is needed, <code role="value">45</code> if ZIP64 is needed). OCF Processors <literal role="rfc2119">must</literal>
                        treat any other values as being in error.</para>
                </listitem>
                <listitem>
                    <para xml:id="confreq-zip-fld-comp">In the local file header table, OCF ZIP
                        Containers <literal role="rfc2119">must</literal> set the <literal>compression</literal> method field to the values
                            <code role="value">0</code> or <code role="value">8</code>. OCF Processors <literal role="rfc2119">must</literal> treat any other
                        values as being in error.</para>
                </listitem>
                <listitem>
                    <para xml:id="confreq-zip-fld-er">OCF Processors <literal role="rfc2119">must</literal> treat OCF ZIP Containers
                        with an <literal>Archive decryption header</literal> or an <literal>Archive extra
                            data record</literal> as being in error.</para>
                </listitem>
            </itemizedlist>
        </section>
        <section xml:id="sec-zip-container-mime">
            <title>OCF ZIP Container Media Type Identification</title>
            <!-- 
            <para>It is frequently necessary for applications to determine the media type of a file,
                which is usually accomplished by inspecting the file extension. OCF ZIP Containers
                <literal role="rfc2119">should</literal> facilitate this form of rapid determination of their format by processing
                applications by using the <literal>.epub</literal> extension.</para>
            <para>In order to translate a file extension into a media type, a processing agent
                typically will register the relationship between file extension and media type with
                the operating system. Applications that are interested in OCF ZIP Container files
                <literal role="rfc2119">should</literal> register the media type <literal>application/epub+zip</literal> as
                corresponding to the file extension <filename>.epub</filename>.</para>
            <para>File extensions do not provide a reliable means of identifying file formats,
                however. As a result, a more robust means of identifying files independent of their
                file names or extensions is also necessary. The method for such identification in
                ZIP archives is the inclusion of an uncompressed, unencrypted ASCII file named
                    <filename>mimetype</filename>, where the contents of this file identify the
                media type of the Container. OCF ZIP Containers <literal role="rfc2119">must</literal> consequently include a
                    <filename>mimetype</filename> file as the first file in the Container, and the
                contents of this file <literal role="rfc2119">must</literal> be the MIME type string
                <literal>application/epub+zip</literal>.</para> -->
            <para>OCF ZIP Containers <literal role="rfc2119">must</literal> include a <filename>mimetype</filename> file as the first
                file in the Container, and the contents of this file <literal role="rfc2119">must</literal> be the MIME type string
                    <code role="media-type">application/epub+zip</code> encoded in US-ASCII <xref linkend="refUSASCII"/>.</para>
            <para>The contents of the <filename>mimetype</filename> file <literal role="rfc2119">must not</literal> contain any
                leading padding or whitespace, <literal role="rfc2119">must not</literal> begin with the Unicode signature (or Byte
                Order Mark), and the case of the MIME type string <literal role="rfc2119">must</literal> be exactly as presented
                above. The <filename>mimetype</filename> file additionally <literal role="rfc2119">must not</literal> be 
                compressed or encrypted, and there <literal role="rfc2119">must not</literal> be an extra field in its ZIP
                header.</para>
            <note>
                <para>Refer to <xref linkend="app-media-type"/> for further information about the
                        <code role="media-type">application/epub+zip</code> media type.</para>
            </note>
            <!--
            <para>When constructed with a conformant <filename>mimetype</filename> file, the ZIP
                Container offers convenient magic number support as described in <link
                    linkend="refRFC2048">RFC 2048</link> and the following will hold true:</para>
            <itemizedlist>
                <listitem>
                    <para>the bytes <literal>PK</literal> will be at the beginning of the
                        file;</para>
                </listitem>
                <listitem>
                    <para>the bytes <literal>mimetype</literal> will be at position <code>30</code>;
                        and</para>
                </listitem>
                <listitem>
                    <para>the actual MIME type will begin at position <code>38</code> (i.e., the
                        ASCII string <literal>application/epub+zip</literal>).</para>
                </listitem>
            </itemizedlist>
            -->
        </section>
    </chapter>
    <chapter xml:id="resource-obfuscation">
        <title>Resource Obfuscation</title>
        <section xml:id="fobfus-intro" conformance="informative">
            <title>Introduction</title>
            <para>Since an OCF Zip Container is fundamentally a ZIP file, commonly available ZIP
                tools can be used to extract any unencrypted content stream from the package. Moreover,
                the nature of ZIP files means that their contents may appear like any other native
                container on some systems (e.g., a folder).</para>
        	<para>While this simplicity of ZIP files is quite useful, it also poses a problem when 
        		ease of extraction of resources is not a desired side-effect of not encrypting them. An 
        		<xref linkend="gloss-author"/> who wishes to include a third-party font, for example, 
        		typically does not want that font extracted and re-used by others. More critically, 
        		many commercial fonts allow embedding, but embedding a font implies making it an 
        		integral part of the EPUB Publication, not just providing the original font file along 
        		with the content.</para>
        	<para>Since integrated ZIP support is so ubiquitous in modern operating
                systems, simply placing a font in the ZIP archive is insufficient to signify that
                it is not intended to be reused in other contexts. This uncertainty can
                undermine the otherwise very useful font embedding capability of EPUB
                Publications.</para>
            <para>In order to discourage reuse of the font, some font vendors may only allow use of their
                fonts in EPUB Publications if those fonts are bound in some way to the EPUB Publication.
                That is, if the font file cannot be installed directly for use on an operating
                system with the built-in tools of that computing device, and it cannot be directly
                used by other EPUB Publications. </para>
            <para>It is beyond the scope of this specification to provide a digital rights management or
                enforcement system for such resources. This section instead defines a method of obfuscation that
                will require additional work on the part of the final OCF recipient to gain general
                access to any obfuscated resources.</para>
        	<para>Note that no claim is made in this specification, or by the IDPF,
                that this constitutes encryption, nor does it guarantee that the resource will be
                secure from copyright infringement. It is the hope of the IDPF, however, that this 
                algorithm will meet the requirements of most vendors who require some assurance that 
                their resources cannot simply be extracted by unzipping the Container.</para>
        	<para>In the case of fonts, the primary use case for obfuscation, the defined mechanism will 
        		simply provide a stumbling block for those who are unaware of the license details. It will not 
                prevent a determined user from gaining full access to the font.
                Given an OCF Container, it is possible to apply the algorithms defined to extract
                the raw font file. Whether this method of obfuscation satisfies the requirements of 
                individual font licenses remains a question for the licensor and licensee. </para>
        </section>
        <!--
        <section xml:id="fobfus-rsreq">
            <title>Reading System Conformance</title>
            <para xml:id="confreq-rs-fobfus"> Reading Systems with a <xref
                    linkend="gloss-viewport-css"/> <literal role="rfc2119">must</literal> support the font obfuscation mechanism as
                defined below. </para>
        </section>
        -->
    	<section xml:id="obfus-keygen">
    		<title>Obfuscation Key</title>
    		<para>The key used in the obfuscation algorithm is derived from the <xref linkend="gloss-unique-identifier"/> of
    			the <xref linkend="gloss-rendition-default"/>.</para>
    		
    		<para>All whitespace characters, as defined by the XML 1.0 specification <xref linkend="refXML"/>, section
    			2.3, <literal role="rfc2119">must</literal> be removed from this identifier &#8212; specifically, 
    			the Unicode code points <code role="codepoint">U+0020</code>, <code role="codepoint">U+0009</code>, <code role="codepoint">U+000D</code> and
    			<code role="codepoint">U+000A</code>.</para>
    		
    		<para>A SHA-1 digest of the UTF-8 representation of the resulting string <literal role="rfc2119">should</literal>
    			be generated as specified by the Secure Hash Standard <xref
    				linkend="refSHA1"/>. This digest is then directly used as the key for the
    			algorithm.</para>
    	</section>
    	
    	<section xml:id="obfus-algorithm">
            <title>Obfuscation Algorithm</title>
            <para>The algorithm employed to obfuscate resource consists of modifying the first
                1040 bytes (~1KB) of the file. In the unlikely event that the file is less than
                1040 bytes, then the entire file will be modified.</para>
        	
        	<para>To obfuscate the original data, the result of
                performing a logical exclusive or (XOR) on the first byte of the raw file and the
                first byte of the <link linkend="obfus-keygen">obfuscation key</link> is stored as 
        		the first byte of the embedded resource.</para>
    		
    		<para>This process is repeated with the next byte of source and key, and continues until 
    			all bytes in the key have been used. At this point, the process continues starting 
    			with the first byte of the key and 21st byte of the source. Once 1040 bytes have been
    			encoded in this way (or the end of the source is reached), any remaining data in the 
    			source is directly copied to the destination.</para>
    		
    		<para>Obfuscation of resources <literal role="rfc2119">must</literal> occur before they
    			are compressed and added to the OCF Container. Note that as obfuscation is not 
    			encryption, this requirement is not a violation of the one in 
    			<xref linkend="sec-container-metainf-encryption.xml"/> to compress resources before 
    			encrypting them.</para>
    		
    		<informalexample>
    			<para>The following pseudo-code exemplifies the obfuscation algorithm.</para>
    			<programlisting>
set ocf to OCF container file
set source to file
set destination to obfuscated file
set keyData to key for file
set outer to 0
while outer &lt; 52 and not (source at EOF)
    set inner to 0
    while inner &lt; 20 and not (source at EOF)
        read 1 byte from source     //Assumes read advances file position
        set sourceByte to result of read
        set keyByte to byte inner of keyData
        set obfuscatedByte to (sourceByte XOR keyByte)
        write obfuscatedByte to destination
        increment inner
    end while
    increment outer
end while
if not (source at EOF) then
    read source to EOF
    write result of read to destination
end if
Deflate destination
store destination as source in ocf
            </programlisting>
    		</informalexample>
    		
    		<para>To get the original font data back, the process is simply reversed: the
    			source file becomes the obfuscated data and the destination file will contain the
    			raw data.</para>
        	
        	<note>
        		<para>The obfuscation of fonts was allowed prior to EPUB 3.0.1, but the order of 
        			obfuscation and compression was not specified. As a result, invalid fonts might 
        			be encountered after decompression and de-obfuscation. In such instances, 
        			de-obfuscating the data before inflating it may return a valid font. Supporting 
        			this method of retrieval is optional, as it is not compliant with this version 
        			of this specification, but needs to be considered when supporting EPUB 3 content 
        			generally.</para>
        	</note>
        </section>
    	
        <section xml:id="obfus-specifying">
            <title>Specifying Obfuscated Resources</title>
            
        	<para>Although not technically encrypted data, all obfuscated resources <literal role="rfc2119">must</literal> 
        		have an entry in the <filename>encryption.xml</filename> file accompanying the 
        		EPUB Publication (see <xref linkend="sec-container-metainf-encryption.xml"/>).</para>
        	
            <para>An <markup>EncryptionMethod</markup> element <literal role="rfc2119">must</literal> 
        		be included for each obfuscated resource. Each <literal role="rfc2119">must</literal>
                include a child <markup>EncryptedData</markup> element whose <markup>Algorithm</markup> attribute 
        		is set to the value <uri>http://www.idpf.org/2008/embedding</uri>. The presence 
        		of this attribute signals the use of the algorithm described in this specification. The 
        		path to the obfuscated resource <literal role="rfc2119">must</literal> be listed in the
                <markup>CipherReference</markup> child of the <markup>CipherData</markup> element.</para>
            
        	<informalexample>
                <para>The following example shows an entry for an obfuscated font in the <filename>encryption.xml</filename> file.</para>
                <synopsis>
<xi:include parse="text" href="./examples/ocf/fobfus-encryption.xml"/>
                </synopsis>
            </informalexample>
            
        	<para>To prevent trivial copying of the embedded resource to other EPUB Publications, the
        		<link linkend="obfus-keygen">obfuscation key</link> <literal role="rfc2119">must not</literal> 
        		be provided in the <filename>encryption.xml</filename> file.</para>
        </section>

    </chapter>
    <appendix xml:id="app-schemas">
        <title>Schemas</title>

        <section xml:id="app-schema-container">
            <title>Schema for <filename>container.xml</filename></title>
            <para>The schema for <filename>container.xml</filename> files is available at <uri
                    xlink:href="../schema/ocf-container-30.rnc"
                    >http://www.idpf.org/epub/30/schema/ocf-container-30.rnc</uri>.</para>
	    <para>Validation using this schema requires a processor that supports 
	    	<xref linkend="refRelaxNG"/> and <xref linkend="refXSDDatatypes"/>.</para>
        </section>
        <section xml:id="app-schema-encryption">
            <title>Schema for <filename>encryption.xml</filename></title>
            <para>The schema for <filename>encryption.xml</filename> files is included in
                <xref linkend="refXMLSecRngSchemas"/>.</para>
        </section>
        <section xml:id="app-schema-signatures">
            <title>Schema for <filename>signatures.xml</filename></title>
            <para>The schema for <filename>signatures.xml</filename> files is included in 
                <xref linkend="refXMLSecRngSchemas"/>.</para>
        </section>
    </appendix>
	<appendix xml:id="example" conformance="informative">
        <title>Example</title>
        <para>The following example demonstrates the use of this OCF format to contain a signed and
            encrypted EPUB Publication within a ZIP Container.</para>
        <example xml:id="example-files">
            <title>Ordered list of files in the ZIP Container</title>
            <synopsis>
mimetype
META-INF/container.xml
META-INF/signatures.xml
META-INF/encryption.xml
EPUB/As You Like It.opf
EPUB/book.html
EPUB/nav.html
EPUB/toc.ncx
EPUB/images/cover.png</synopsis>
        </example>
        <example xml:id="example-mimetype">
            <title>The contents of the <filename>mimetype</filename> file</title>
            <synopsis>application/epub+zip</synopsis>
        </example>
        <example xml:id="example-container">
            <title>The contents of the <filename>META-INF/container.xml</filename> file</title>
            <synopsis><xi:include parse="text" href="./examples/ocf/container-1.xml"/></synopsis>
        </example>
        <example xml:id="example-signatures">
            <title>The contents of the <filename>META-INF/signatures.xml</filename> file</title>
            <synopsis><xi:include parse="text" href="./examples/ocf/signatures-1.xml"/></synopsis>
        </example>
        <example xml:id="example-encryption">
            <title>The contents of the <filename>META-INF/encryption.xml</filename> file</title>
            <synopsis><xi:include parse="text" href="./examples/ocf/encryption-1.xml"/></synopsis>
        </example>
        <example xml:id="example-opf">
            <title>The contents of the <filename>EPUB/As You Like It.opf</filename> file</title>
            <synopsis><xi:include parse="text" href="./examples/ocf/opf-1.xml"/></synopsis>
        </example>
    </appendix>
    <appendix xml:id="app-media-type" conformance="informative">
        <title>The <code role="media-type">application/epub+zip</code> Media Type</title>
        <para>This appendix registers the media type <code role="media-type">application/epub+zip</code> for the
            EPUB Open Container Format (OCF).</para>
        <para>An OCF file is a container technology based on the ZIP archive format. It is used to
            encapsulate the Renditions of EPUB Publications. OCF and its
            related standards are maintained and defined by the International Digital Publishing
            Forum (IDPF).</para>

        <variablelist>
            <varlistentry>
                <term>MIME media type name:</term>
                <listitem>
                    <para><code role="media-type">application</code></para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>MIME subtype name:</term>
                <listitem>
                    <para><code role="media-type">epub+zip</code></para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Required parameters:</term>
                <listitem>
                    <para>None.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Optional parameters:</term>
                <listitem>
                    <para>None.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Encoding considerations:</term>
                <listitem>
                    <para>OCF files are binary files in ZIP (<uri
                            xlink:href="http://www.iana.org/assignments/media-types/application/zip"
                            >http://www.iana.org/assignments/media-types/application/zip</uri>)
                        format.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Security considerations:</term>
                <listitem>
                    <para>All processors that read OCF files should rigorously check the size and
                        validity of data retrieved.</para>
                    <para>In addition, because of the various content types that can be embedded in
                    	OCF files, it is possible that <code role="media-type">application/epub+zip</code> may
                        describe content that has security implications beyond those described here.
                        However, only in the case where the processor recognizes and processes the
                        additional content, or where further processing of that content is
                        dispatched to other processors, would security issues potentially arise. And
                        in that case, they would fall outside the domain of this registration
                        document.</para>
                    <para>Security considerations that apply to <code role="media-type"
                            xlink:href="http://www.iana.org/assignments/media-types/application/zip"
                            >application/zip</code> also apply to OCF files.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Interoperability considerations:</term>
                <listitem>
                    <para>None.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Published specification:</term>
                <listitem>
                    <para>This media type registration is for the EPUB Open Container Format (OCF),
                        as described by the EPUB Open Container Format (OCF) 3.0 specification
                        located at <uri
                            xlink:href="http://www.idpf.org/epub/30/spec/epub30-ocf.html"
                            >http://www.idpf.org/epub/30/spec/epub30-ocf.html</uri>.</para>
                    <para>The EPUB OCF 3.0 specification supersedes the Open Container Format 2.0.1
                        specification, which is located at <uri
                            xlink:href="http://www.idpf.org/doc_library/epub/OCF_2.0.1_draft.doc"
                            >http://www.idpf.org/doc_library/epub/OCF_2.0.1_draft.doc</uri> and
                        which also uses the <code role="media-type">application/epub+zip</code> media
                        type.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Applications which use this media type:</term>
                <listitem>
                    <para>This media type is in wide use for the distribution of ebooks in the EPUB
                        format. The following list of applications is not exhaustive.</para>
                    <itemizedlist>
                        <listitem>
                            <para>Adobe Digital Editions</para>
                        </listitem>
                        <listitem>
                            <para>Aldiko</para>
                        </listitem>
                        <listitem>
                            <para>Azardi</para>
                        </listitem>
                        <listitem>
                            <para>Apple iBooks</para>
                        </listitem>
                        <listitem>
                            <para>Barnes &amp; Noble Nook</para>
                        </listitem>
                        <listitem>
                            <para>Calibre</para>
                        </listitem>
                        <listitem>
                            <para>Google Books</para>
                        </listitem>
                        <listitem>
                            <para>Ibis Reader</para>
                        </listitem>
                        <listitem>
                            <para>MobiPocket reader</para>
                        </listitem>
                        <listitem>
                            <para>Sony Reader</para>
                        </listitem>
                        <listitem>
                            <para>Stanza</para>
                        </listitem>
                    </itemizedlist>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Additional information:</term>
                <listitem>
                    <variablelist>
                        <varlistentry>
                            <term>Magic number(s):</term>
                            <listitem>
                                <para>0: <code role="value">PK 0x03 0x04</code>, 30: <code role="value">mimetype</code>, 38:
                                        <code role="media-type">application/epub+zip</code></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term>File extension(s):</term>
                            <listitem>
                                <para>OCF files are most often identified with the extension
                                        <filename>.epub</filename>.</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term>Macintosh File Type Code(s):</term>
                            <listitem>
                                <para>ZIP</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term>Fragment Identifiers:</term>
                            <listitem>
                                <para>The IDPF maintains a registry of linking schemes at <uri
                                        xlink:href="http://idpf.org/epub/linking/"
                                        >http://idpf.org/epub/linking/</uri>. Some of these schemes
                                    define custom fragment identifiers that resolve to
                                        <code role="media-type">application/epub+zip</code> and
                                        <code role="media-type">application/oebps-package+xml</code>
                                    documents.</para>
                            </listitem>
                        </varlistentry>
                    </variablelist>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Person &amp; email address to contact for further information:</term>
                <listitem>
                    <para>William McCoy, <link xlink:href="mailto:bmccoy@idpf.org"
                            >bmccoy@idpf.org</link></para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Intended usage:</term>
                <listitem>
                    <para>COMMON</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Author/Change controller:</term>
                <listitem>
                    <para>International Digital Publishing Forum (<link
                            xlink:href="http://www.idpf.org">http://www.idpf.org</link>)</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </appendix>
    <xi:include href="./share/contributors.xml"/>
    <xi:include href="./share/references.xml"/>
</book>

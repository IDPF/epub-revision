

  Notes and remarks on EPUB spec docbook conventions
  
  1. TODOs 
  Use <remark role='todo'> to leave a remark that makes it into the build (will appear with yellow background in output XHTML using default CSS)
  
  2. Warnings and notes
  Use <caution> and <note> to signal these two semantics respectively. 

  3. Switches
  The epub:spec-include attribute can be used to conditionally include/exclude elements depending on in which spec they occur. This is obviously
  primarily used in shared XIncludes (see spec/share/terminology.xml for examples).
  
  When @epub:spec-include occurs on an element, that elements parent becomes an implicit switch. 
  Allowed values of the attribute are enumerated in util/docbook/schema/docbookspec.rng.
  The processing is done in util/docbook/switch.xsl.
  
  5. intraspec links
  Use <xref linkend/> consistently to minimize label maintenance. We have not been using <glossterm> and <biblioref> to link since their label
  autogen does not seem to work (or was never intended to). In other words, use <xref> when reffing a <biblioentry> or <glossentry>, too.
  
  5. interspec links
  To link from one of the EPUB specs to another of the EPUB specs, use <olink> as follows:
  
     <olink type="epub-spec" targetdoc="enum" targetptr="ID"/>
  
  The type attribute must have the value "epub-spec" for the behavior (as per util/docbook/olink.xsl) to be activated.
  The targetdoc attribute takes a value that is enumerated in util/docbook/schema/docbookspec.rng.
     
  6. ID naming conventions
  To help those that have the luxury of content completion XML editors, follow these conventions:
   * glossentry: start the xml:id value with 'gloss-'
   * biblioentry: start the xml:id value with 'ref-'
   * chapters, sections: start the xml:id value with 'sec-'
      
  7. The build process
  The build-specs target in build.xml executes the spec build process, which is a chain of XSLT transforms.
  Note that
    * bibliocleaner.xsl removes any <biblioentry> that is not referenced (via */@linkend) within the document scope 
    * terminology-cleaner.xsl removes any <glossentry> that is not referenced (via */@linkend) within the document scope     
    * the final customization layer resides in util/docbook/docbookspec.xsl
    
  8. Vocabulary generation
  Standalone metadata property vocabularies are autogenerated from the docbook sources using the following notation:
  TODO @Matt when transform is refactored.  
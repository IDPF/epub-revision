namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ev = "http://www.w3.org/2001/xml-events"
namespace svg = "http://www.w3.org/2005/02/svg-annotations"
namespace xlink = "http://www.w3.org/1999/xlink"

# ==============================================================
#  SVG12-RNG | SVG 1.2 Conditional
# ==============================================================
[ xml:lang = "en" ]
grammar {
  # The 'switch' is not defined here, only its attributes are, alongside
  # the test attributes that may be used to express conditions on subtrees.
  # The reason for this is because 'switch' has a content model that is
  # equivalent to the content model of the element that contains it. It is
  # therefore defined everywhere that it is allowable.
  [ xml:id = "conditional" ]
  div {
    svg.Conditional.attr &=
      [ svg:animatable = "false" svg:inheritable = "false" ]
      attribute requiredFeatures { ListOfIRI.datatype }?,
      [ svg:animatable = "false" svg:inheritable = "false" ]
      attribute requiredExtensions { ListOfIRI.datatype }?,
      [ svg:animatable = "false" svg:inheritable = "false" ]
      attribute requiredFormats { FormatList.datatype }?,
      [ svg:animatable = "false" svg:inheritable = "false" ]
      attribute requiredFonts { FontList.datatype }?,
      [ svg:animatable = "false" svg:inheritable = "false" ]
      attribute systemLanguage { LanguageIDs.datatype }?
  }
  # ... switch's attributes ....................................
  [ xml:id = "switch.at" ]
  div {
    switch.AT &=
      svg.Core.attr,
      svg.Conditional.attr,
      svg.Properties.attr,
      svg.FocusHighlight.attr,
      svg.External.attr,
      svg.Transform.attr,
      svg.Focus.attr
  }
}
